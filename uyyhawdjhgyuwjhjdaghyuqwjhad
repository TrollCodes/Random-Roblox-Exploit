--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.6) ~  Much Love, Ferib 

]]--

do
	local v0 = tonumber;
	local v1 = string.byte;
	local v2 = string.char;
	local v3 = string.sub;
	local v4 = string.gsub;
	local v5 = string.rep;
	local v6 = table.concat;
	local v7 = table.insert;
	local v8 = math.ldexp;
	local v9 = getfenv or function()
		return _ENV;
	end;
	local v10 = setmetatable;
	local v11 = pcall;
	local v12 = select;
	local v13 = unpack or table.unpack;
	local v14 = tonumber;
	local function v15(v16, v17, ...)
		local v18 = 1;
		local v19;
		v16 = v4(v3(v16, 5), "..", function(v30)
			if (v1(v30, 2) == 79) then
				v19 = v0(v3(v30, 1, 1));
				return "";
			else
				local v68 = 0;
				local v69;
				while true do
					if (v68 == 0) then
						v69 = v2(v0(v30, 16));
						if v19 then
							local v84 = v5(v69, v19);
							v19 = nil;
							return v84;
						else
							return v69;
						end
						break;
					end
				end
			end
		end);
		local function v20(v31, v32, v33)
			if v33 then
				local v70 = (v31 / ((5 - 3) ^ (v32 - (2 - 1)))) % ((1 + 1) ^ (((v33 - (1 + 0)) - (v32 - (1 - 0))) + 1));
				return v70 - (v70 % (2 - 1));
			else
				local v71 = (621 - (555 + 64)) ^ (v32 - (932 - ((3731 - 2874) + 74)));
				return (((v31 % (v71 + v71)) >= v71) and (1066 - (68 + (1114 - (32 + 85))))) or (1270 - (226 + 1044));
			end
		end
		local function v21()
			local v34 = (0 - 0) + 0;
			local v35;
			while true do
				if (v34 == (0 + 0)) then
					v35 = v1(v16, v18, v18);
					v18 = v18 + (958 - (892 + (118 - 53)));
					v34 = 1;
				end
				if (v34 == (2 - 1)) then
					return v35;
				end
			end
		end
		local function v22()
			local v36, v37 = v1(v16, v18, v18 + (352 - (87 + 263)));
			v18 = v18 + 2 + 0;
			return (v37 * (628 - 372)) + v36;
		end
		local function v23()
			local v38, v39, v40, v41 = v1(v16, v18, v18 + 3);
			v18 = v18 + 3 + 1;
			return (v41 * (66680831 - (90523321 - 40619706))) + (v40 * (66488 - (802 + 150))) + (v39 * (689 - 433)) + v38;
		end
		local function v24()
			local v42 = 0 + 0;
			local v43;
			local v44;
			local v45;
			local v46;
			local v47;
			local v48;
			while true do
				if (v42 == ((1769 - (201 + 571)) - (915 + 82))) then
					v43 = v23();
					v44 = v23();
					v42 = 2 - 1;
				end
				if (v42 == ((1140 - (116 + 1022)) + 0)) then
					v47 = v20(v44, 21, 40 - 9);
					v48 = ((v20(v44, 32) == (1188 - (1069 + 118))) and -(2 - (4 - 3))) or 1;
					v42 = 3;
				end
				if (v42 == ((4 + 2) - 3)) then
					if (v47 == 0) then
						if (v46 == ((0 - 0) + 0)) then
							return v48 * (0 - 0);
						else
							local v85 = 0 + 0;
							while true do
								if ((791 - (368 + 423)) == v85) then
									v47 = 3 - 2;
									v45 = 0;
									break;
								end
							end
						end
					elseif (v47 == 2047) then
						return ((v46 == (18 - (10 + 8))) and (v48 * (((10 - 7) - (861 - (814 + 45))) / (442 - (416 + 26))))) or (v48 * NaN);
					end
					return v8(v48, v47 - (3266 - 2243)) * (v45 + (v46 / ((1 + 1) ^ (91 - 39))));
				end
				if (v42 == (439 - (145 + 293))) then
					v45 = 1;
					v46 = (v20(v44, 431 - (44 + (950 - 564)), 20) * ((1488 - (998 + 488)) ^ (1 + 10 + 21))) + v43;
					v42 = 2 + 0;
				end
			end
		end
		local function v25(v49)
			local v50 = 0 + 0;
			local v51;
			local v52;
			while true do
				if (v50 == (887 - ((2174 - (1789 + 124)) + 624))) then
					v52 = {};
					for v75 = 1 - 0, #v51 do
						v52[v75] = v2(v1(v3(v51, v75, v75)));
					end
					v50 = 1083 - (1020 + (826 - (745 + 21)));
				end
				if (v50 == 0) then
					v51 = nil;
					if not v49 then
						v49 = v23();
						if (v49 == (1423 - (630 + 793))) then
							return "";
						end
					end
					v50 = 3 - 2;
				end
				if ((4 - 3) == v50) then
					v51 = v3(v16, v18, (v18 + v49) - (1 + 0));
					v18 = v18 + v49;
					v50 = (3 + 3) - 4;
				end
				if (v50 == (1750 - (760 + 987))) then
					return v6(v52);
				end
			end
		end
		local v26 = v23;
		local function v27(...)
			return {...}, v12("#", ...);
		end
		local function v28()
			local v53 = 0;
			local v54;
			local v55;
			local v56;
			local v57;
			local v58;
			local v59;
			while true do
				local v67 = 0 - 0;
				while true do
					if (v67 == (166 - (9 + 157))) then
						if (v53 ~= (0 - 0)) then
						else
							v54 = {};
							v55 = {};
							v56 = {};
							v57 = {v54,v55,nil,v56};
							v53 = 781 - (162 + 618);
						end
						if (v53 == (2 + 0)) then
							for v86 = 1, v23() do
								local v87 = 0 + 0;
								local v88;
								while true do
									if (v87 == 0) then
										v88 = v21();
										if (v20(v88, 1, 1 - 0) == (0 - 0)) then
											local v111 = 1121 - (118 + 1003);
											local v112;
											local v113;
											local v114;
											local v115;
											local v116;
											local v117;
											while true do
												if (v111 ~= (1 - 0)) then
												else
													v114 = nil;
													v115 = nil;
													v111 = 1 + 1;
												end
												if (v111 == 0) then
													v112 = 1636 - (1373 + 263);
													v113 = nil;
													v111 = 1;
												end
												if (v111 == 2) then
													v116 = nil;
													v117 = nil;
													v111 = 3;
												end
												if (v111 ~= (1003 - (451 + 549))) then
												else
													while true do
														if (v112 == (1 + 0)) then
															local v127 = 977 - (553 + 424);
															while true do
																if ((1 - 0) == v127) then
																	v112 = 3 - 1;
																	break;
																end
																if (v127 == (0 - 0)) then
																	v115 = nil;
																	v116 = nil;
																	v127 = 1;
																end
															end
														end
														if (v112 ~= (0 + 0)) then
														else
															local v128 = 1384 - (746 + 638);
															while true do
																if ((1 + 0) == v128) then
																	v112 = 1 + 0;
																	break;
																end
																if (v128 == (0 + 0)) then
																	v113 = 0 + 0;
																	v114 = nil;
																	v128 = 2 - 1;
																end
															end
														end
														if (v112 == (2 - 0)) then
															v117 = nil;
															while true do
																if ((341 - (218 + 123)) ~= v113) then
																else
																	v114 = 1581 - (1535 + 46);
																	v115 = nil;
																	v113 = 754 - (239 + 514);
																end
																if (v113 == 1) then
																	local v132 = 0;
																	local v133;
																	while true do
																		if (v132 == (0 + 0)) then
																			v133 = 0 + 0;
																			while true do
																				if (0 ~= v133) then
																				else
																					v116 = nil;
																					v117 = nil;
																					v133 = 1 + 0;
																				end
																				if ((1 + 0) ~= v133) then
																				else
																					v113 = 2;
																					break;
																				end
																			end
																			break;
																		end
																	end
																end
																if (v113 == (562 - (306 + 254))) then
																	while true do
																		if (v114 == 0) then
																			local v223 = 0 + 0;
																			local v224;
																			local v225;
																			while true do
																				if (v223 ~= 1) then
																				else
																					while true do
																						if ((0 - 0) == v224) then
																							v225 = 1467 - (899 + 568);
																							while true do
																								if (v225 == 0) then
																									local v343 = 0;
																									while true do
																										if (v343 == (1 + 0)) then
																											v225 = 2 - 1;
																											break;
																										end
																										if (v343 == (603 - (268 + 335))) then
																											v115 = v20(v88, 292 - (60 + 230), 2 + 1);
																											v116 = v20(v88, 576 - (426 + 146), 6);
																											v343 = 1 - 0;
																										end
																									end
																								end
																								if (v225 ~= (1 - 0)) then
																								else
																									v114 = 1 + 0;
																									break;
																								end
																							end
																							break;
																						end
																					end
																					break;
																				end
																				if (v223 == (1456 - (282 + 1174))) then
																					v224 = 811 - (569 + 242);
																					v225 = nil;
																					v223 = 2 - 1;
																				end
																			end
																		end
																		if (v114 == (3 - 0)) then
																			if (v20(v116, 1 + 2, 3) == (1025 - (706 + 318))) then
																				v117[1255 - (721 + 530)] = v59[v117[1275 - (945 + 326)]];
																			end
																			v54[v86] = v117;
																			break;
																		end
																		if (v114 == (218 - (42 + 174))) then
																			local v227 = 0;
																			while true do
																				if (v227 ~= 1) then
																				else
																					v114 = 7 - 4;
																					break;
																				end
																				if (v227 == (0 + 0)) then
																					local v256 = 0 + 0;
																					while true do
																						if ((701 - (271 + 429)) == v256) then
																							v227 = 1;
																							break;
																						end
																						if ((1580 - (1183 + 397)) == v256) then
																							if (v20(v116, 2 - 1, 1) == (1 + 0)) then
																								v117[2 + 0] = v59[v117[1977 - (1913 + 62)]];
																							end
																							if (v20(v116, 2 + 0, 1502 - (1408 + 92)) == 1) then
																								v117[7 - 4] = v59[v117[1936 - (565 + 1368)]];
																							end
																							v256 = 3 - 2;
																						end
																					end
																				end
																			end
																		end
																		if (v114 == (1087 - (461 + 625))) then
																			local v228 = 1288 - (993 + 295);
																			local v229;
																			while true do
																				if (v228 ~= (0 + 0)) then
																				else
																					v229 = 1171 - (418 + 753);
																					while true do
																						if (v229 == (0 - 0)) then
																							local v292 = 0 + 0;
																							while true do
																								if (v292 ~= (0 + 0)) then
																								else
																									local v344 = 0 + 0;
																									while true do
																										if (v344 == 1) then
																											v292 = 1 + 0;
																											break;
																										end
																										if ((529 - (406 + 123)) ~= v344) then
																										else
																											v117 = {v22(),v22(),nil,nil};
																											if (v115 == (1145 - (466 + 679))) then
																												local v360 = 0 - 0;
																												local v361;
																												local v362;
																												while true do
																													if (v360 ~= (2 - 1)) then
																													else
																														while true do
																															if (v361 ~= (0 + 0)) then
																															else
																																v362 = 1900 - (106 + 1794);
																																while true do
																																	if (v362 == (1001 - (938 + 63))) then
																																		v117[3 + 0] = v22();
																																		v117[2 + 2] = v22();
																																		break;
																																	end
																																end
																																break;
																															end
																														end
																														break;
																													end
																													if (v360 == (0 + 0)) then
																														v361 = 0;
																														v362 = nil;
																														v360 = 1 + 0;
																													end
																												end
																											elseif (v115 == (1614 - (1565 + 48))) then
																												v117[2 + 1] = v23();
																											elseif (v115 == 2) then
																												v117[8 - 5] = v23() - ((5 - 3) ^ (130 - (4 + 110)));
																											elseif (v115 ~= (1141 - (782 + 356))) then
																											else
																												local v388 = 267 - (176 + 91);
																												local v389;
																												while true do
																													if (v388 == 0) then
																														v389 = 584 - (57 + 527);
																														while true do
																															if (v389 ~= (1427 - (41 + 1386))) then
																															else
																																v117[3] = v23() - ((105 - (17 + 86)) ^ (11 + 5));
																																v117[4] = v22();
																																break;
																															end
																														end
																														break;
																													end
																												end
																											end
																											v344 = 1 - 0;
																										end
																									end
																								end
																								if (v292 ~= (2 - 1)) then
																								else
																									v229 = 167 - (122 + 44);
																									break;
																								end
																							end
																						end
																						if (v229 ~= (1 - 0)) then
																						else
																							v114 = 1877 - (157 + 1718);
																							break;
																						end
																					end
																					break;
																				end
																			end
																		end
																	end
																	break;
																end
															end
															break;
														end
													end
													break;
												end
											end
										end
										break;
									end
								end
							end
							for v89 = 1, v23() do
								v55[v89 - (3 - 2)] = v28();
							end
							for v91 = 1, v23() do
								v56[v91] = v23();
							end
							return v57;
						end
						v67 = 1;
					end
					if (v67 ~= 1) then
					else
						if (1 ~= v53) then
						else
							local v83 = 0;
							while true do
								if (v83 == (0 - 0)) then
									v58 = v23();
									v59 = {};
									v83 = 1;
								end
								if ((1 + 0) == v83) then
									local v103 = 0 - 0;
									while true do
										if (v103 ~= (0 + 0)) then
										else
											for v121 = 1 - 0, v58 do
												local v122 = 65 - (30 + 35);
												local v123;
												local v124;
												local v125;
												while true do
													if (v122 == (0 + 0)) then
														local v126 = 1257 - (1043 + 214);
														while true do
															if (v126 == 1) then
																v122 = 3 - 2;
																break;
															end
															if (v126 ~= (0 - 0)) then
															else
																v123 = 0;
																v124 = nil;
																v126 = 1 + 0;
															end
														end
													end
													if (v122 ~= 1) then
													else
														v125 = nil;
														while true do
															if (v123 == 0) then
																local v129 = 1212 - (323 + 889);
																local v130;
																while true do
																	if (v129 == (0 - 0)) then
																		v130 = 580 - (361 + 219);
																		while true do
																			if (v130 ~= (1228 - (322 + 905))) then
																			else
																				v123 = 321 - (53 + 267);
																				break;
																			end
																			if ((611 - (602 + 9)) ~= v130) then
																			else
																				local v243 = 0;
																				local v244;
																				while true do
																					if ((0 + 0) == v243) then
																						v244 = 413 - (15 + 398);
																						while true do
																							if (v244 == (982 - (18 + 964))) then
																								v124 = v21();
																								v125 = nil;
																								v244 = 3 - 2;
																							end
																							if (v244 ~= (1 + 0)) then
																							else
																								v130 = 1;
																								break;
																							end
																						end
																						break;
																					end
																				end
																			end
																		end
																		break;
																	end
																end
															end
															if (v123 ~= 1) then
															else
																if (v124 == (1 + 0)) then
																	v125 = v21() ~= (850 - (20 + 830));
																elseif (v124 == (2 + 0)) then
																	v125 = v24();
																elseif (v124 ~= (129 - (116 + 10))) then
																else
																	v125 = v25();
																end
																v59[v121] = v125;
																break;
															end
														end
														break;
													end
												end
											end
											v57[3] = v21();
											v103 = 1;
										end
										if ((1 + 0) ~= v103) then
										else
											v83 = 442 - (382 + 58);
											break;
										end
									end
								end
								if (v83 == (740 - (542 + 196))) then
									v53 = 6 - 4;
									break;
								end
							end
						end
						break;
					end
				end
			end
		end
		local function v29(v60, v61, v62)
			local v63 = 0;
			local v64;
			local v65;
			local v66;
			while true do
				if (v63 == 1) then
					v66 = v60[3];
					return function(...)
						local v77 = 0;
						local v78;
						local v79;
						local v80;
						local v81;
						local v82;
						while true do
							if (v77 == 3) then
								A, B = v27(v11(v82));
								if not A[1] then
									local v104 = v60[4][v78] or "?";
									error("Script error at [" .. v104 .. "]:" .. A[2]);
								else
									return v13(A, 2, B);
								end
								break;
							end
							if (v77 == 2) then
								v82 = nil;
								function v82()
									local v93 = v64;
									local v94 = v65;
									local v95 = v66;
									local v96 = v27;
									local v97 = {};
									local v98 = {};
									local v99 = {};
									for v105 = 0, v81 do
										if (((2380 + 115 + 507) <= (7009 - (10598 - 6981))) and (v105 >= v95)) then
											v97[v105 - v95] = v80[v105 + (2 - 1)];
										else
											v99[v105] = v80[v105 + 1];
										end
									end
									local v100 = (v81 - v95) + (1206 - (902 + 303));
									local v101;
									local v102;
									while true do
										local v106 = 0 + 0;
										while true do
											if ((((2437 - (23 + 55)) - 1284) == (2588 - 1513)) and (v106 == (1 + 0))) then
												if (((6122 - (1121 + 569)) == (4646 - ((51 - 29) + 192))) and (v102 <= (11 + 5))) then
													if ((3358 <= (4695 - (483 + 180 + 20))) and (v102 <= (1470 - (1404 + (90 - 31))))) then
														if (((4088 - 2594) <= (4038 - 1033)) and (v102 <= 3)) then
															if ((v102 <= (766 - (468 + 297))) or ((3673 - (334 + 228)) == (7197 - 5063))) then
																if (((5458 - (977 + 2126)) == (4271 - (2817 - (652 + 249)))) and (v102 > (0 + 0))) then
																	local v134 = v101[238 - (141 + 95)];
																	local v135 = v101[4 + 0];
																	local v136 = v134 + (4 - (5 - 3));
																	local v137 = {v99[v134](v99[v134 + 1 + 0], v99[v136])};
																	for v220 = 2 - 1, v135 do
																		v99[v136 + v220] = v137[v220];
																	end
																	local v138 = v137[1 + 0];
																	if (v138 or (588 <= (225 + 207))) then
																		local v230 = 0 - 0;
																		local v231;
																		while true do
																			if ((4797 >= (2298 + 1597)) and ((163 - (92 + 71)) == v230)) then
																				v231 = 0;
																				while true do
																					if ((((4796 - 3029) + 1810) == (6013 - (4441 - 2005))) and (v231 == (765 - (574 + 191)))) then
																						v99[v136] = v138;
																						v78 = v101[(30 - (10 + 17)) + 0];
																						break;
																					end
																				end
																				break;
																			end
																		end
																	else
																		v78 = v78 + 1;
																	end
																elseif (((9505 - 5711) > (1887 + 1806)) and (v99[v101[851 - (254 + 595)]] == v101[130 - (55 + 16 + 55)])) then
																	v78 = v78 + (1 - 0);
																else
																	v78 = v101[1793 - (573 + 1217)];
																end
															elseif ((v102 > (5 - 3)) or ((98 + 1177) == 4100)) then
																v99[v101[2 - 0]] = v99[v101[942 - (714 + 225)]];
															else
																local v141 = 0 - 0;
																local v142;
																local v143;
																local v144;
																local v145;
																while true do
																	if ((v141 == (1 - 0)) or (1591 >= ((2120 - (1400 + 332)) + 3192))) then
																		v144 = nil;
																		v145 = nil;
																		v141 = 2;
																	end
																	if (((1422 - 439) <= (2614 - (118 + 688))) and (v141 == (3 - 1))) then
																		while true do
																			if (((48 - (25 + 23)) == v142) or ((417 + 1733) <= 1197)) then
																				local v257 = 1886 - (927 + 959);
																				while true do
																					if (((12704 - 8935) >= (1905 - (16 + 716))) and (v257 == ((1908 - (242 + 1666)) - (0 + 0)))) then
																						v143 = v101[99 - (11 + 86)];
																						v144 = {v99[v143](v13(v99, v143 + 1, v79))};
																						v257 = 286 - (175 + 110);
																					end
																					if ((1485 == (3748 - 2263)) and (v257 == 1)) then
																						v142 = (2 + 2) - 3;
																						break;
																					end
																				end
																			end
																			if ((v142 == (1797 - (503 + 1293))) or (3315 <= (7769 - 4987))) then
																				v145 = 0 + 0 + 0;
																				for v274 = v143, v101[1065 - (810 + 251)] do
																					local v275 = 0 + 0;
																					local v276;
																					local v277;
																					while true do
																						if ((v275 == (1 + 0)) or ((790 + 86) >= (3497 - ((983 - (850 + 90)) + 490)))) then
																							while true do
																								if ((v276 == (733 - (711 + 22))) or ((8633 - 6401) > (3356 - (240 + 619)))) then
																									v277 = 0 + 0;
																									while true do
																										if ((v277 == ((0 - 0) - 0)) or ((140 + 1970) <= (2076 - ((2734 - (360 + 1030)) + 400)))) then
																											v145 = v145 + (406 - (255 + 150));
																											v99[v274] = v144[v145];
																											break;
																										end
																									end
																									break;
																								end
																							end
																							break;
																						end
																						if (((2570 + 334 + 782) > (8952 - 5780)) and (v275 == (0 + 0))) then
																							v276 = 0 - 0;
																							v277 = nil;
																							v275 = 3 - 2;
																						end
																					end
																				end
																				break;
																			end
																		end
																		break;
																	end
																	if (((1739 - (404 + 1335)) == v141) or ((4880 - (183 + 223)) < (997 - 177))) then
																		v142 = 0 + 0;
																		v143 = nil;
																		v141 = 1 - 0;
																	end
																end
															end
														elseif (((1540 + 2739) >= (3219 - (10 + 327))) and (v102 <= 5)) then
															if ((v102 > (3 + 1)) or ((2367 - (118 + 220)) >= (1174 + 2347))) then
																local v146 = 449 - (108 + 341);
																local v147;
																local v148;
																local v149;
																while true do
																	if ((v146 == (1 + 0)) or ((8611 - 6574) >= (6135 - (711 + 782)))) then
																		v149 = nil;
																		while true do
																			if (((3297 - 1577) < (4927 - (270 + 199))) and (v147 == 0)) then
																				v148 = 0;
																				v149 = nil;
																				v147 = 1 + (1661 - (909 + 752));
																			end
																			if ((v147 == (1820 - (580 + 1239))) or ((1295 - 859) > ((4112 - (109 + 1114)) + 132))) then
																				while true do
																					if (((26 + 687) <= (369 + 478)) and ((0 - 0) == v148)) then
																						v149 = v101[2 + 0];
																						v99[v149] = v99[v149](v99[v149 + (1168 - (645 + 522))]);
																						break;
																					end
																				end
																				break;
																			end
																		end
																		break;
																	end
																	if (((3944 - ((1849 - 839) + 780)) <= (1569 + 2461 + 1)) and (v146 == (0 - (242 - (6 + 236))))) then
																		v147 = 0 - (0 + 0);
																		v148 = nil;
																		v146 = (1479 + 358) - (1045 + 791);
																	end
																end
															else
																local v150 = 0 - 0;
																local v151;
																local v152;
																while true do
																	if (((7046 - 2431) == 4615) and (v150 == (506 - (351 + (362 - 208))))) then
																		while true do
																			if ((v151 == 0) or (((9368 - 4004) - (1281 + (1426 - (1076 + 57)))) == 500)) then
																				v152 = v101[268 - (28 + 238)];
																				v99[v152](v13(v99, v152 + 1, v101[3]));
																				break;
																			end
																		end
																		break;
																	end
																	if (((198 - 109) < (1780 - (1381 + 178))) and ((0 + 0) == v150)) then
																		v151 = 0 + 0;
																		v152 = nil;
																		v150 = 1 + 0;
																	end
																end
															end
														elseif (((7080 - (827 + 4199)) >= (737 + 684)) and (v102 > (476 - (381 + 89)))) then
															local v153 = 0 + 0;
															local v154;
															local v155;
															while true do
																if (((468 + 224) < 3058) and (v153 == (1 - 0))) then
																	while true do
																		if (((1156 - (1074 + 82)) == v154) or (((7819 - (579 + 110)) - 3876) == 1655)) then
																			v155 = v101[2];
																			v99[v155] = v99[v155](v13(v99, v155 + (1785 - (17 + 197 + 1570)), v101[1458 - (990 + 465)]));
																			break;
																		end
																	end
																	break;
																end
																if ((v153 == (0 + 0)) or ((564 + 648 + 84) == (4775 + 72 + 63))) then
																	v154 = 0;
																	v155 = nil;
																	v153 = 1;
																end
															end
														else
															local v156 = 0 - 0;
															local v157;
															local v158;
															local v159;
															while true do
																if ((3368 == (5094 - ((2075 - (174 + 233)) + 58))) and (v156 == ((1751 - 1124) - (512 + 114)))) then
																	v159 = nil;
																	while true do
																		if (((6890 - 4247) < (7886 - 4071)) and ((0 - 0) == v157)) then
																			local v261 = 0 + (0 - 0);
																			while true do
																				if (((160 + 199 + 1554) > (429 + 64)) and ((0 - 0) == v261)) then
																					v158 = 1994 - (109 + 1885);
																					v159 = nil;
																					v261 = 1470 - (1269 + 200);
																				end
																				if (((9113 - 4358) > (4243 - (98 + 717))) and (v261 == (827 - (802 + 24)))) then
																					v157 = 1;
																					break;
																				end
																			end
																		end
																		if (((2381 - 1000) <= 2369) and (v157 == (1 - 0))) then
																			while true do
																				if ((v158 == 0) or (4843 == 4084)) then
																					v159 = v101[1 + 1];
																					do
																						return v13(v99, v159, v79);
																					end
																					break;
																				end
																			end
																			break;
																		end
																	end
																	break;
																end
																if (((3588 + 1081) > (60 + 303)) and (v156 == ((1174 - (663 + 511)) + 0))) then
																	v157 = (0 + 0) - 0;
																	v158 = nil;
																	v156 = 3 - 2;
																end
															end
														end
													elseif ((v102 <= (4 + 7)) or ((167 + 598 + 1112) >= (2589 + 549))) then
														if (((3449 + 1293) >= (1693 + 1933)) and (v102 <= (1442 - (797 + 636)))) then
															if ((v102 == 8) or ((22043 - 17503) == (2535 - (1427 + 192)))) then
																v99[v101[1 + (2 - 1)]]();
															else
																v99[v101[4 - 2]][v101[3 + 0]] = v101[2 + 0 + 2];
															end
														elseif ((v102 == (336 - (192 + 134))) or ((2432 - (316 + 960)) > 4345)) then
															v78 = v101[2 + (2 - 1)];
														else
															v99[v101[2]] = v99[v101[7 - 4]][v101[4 + 0]];
														end
													elseif ((2237 < (3928 + 321)) and (v102 <= 13)) then
														if ((v102 == (45 - 33)) or ((3234 - (83 + 468)) < (1829 - (1202 + 604)))) then
															local v165 = 0;
															local v166;
															local v167;
															local v168;
															local v169;
															local v170;
															local v171;
															while true do
																if (((3253 - 2556) <= (1374 - 548)) and (v165 == (0 - 0))) then
																	v166 = 325 - (45 + 280);
																	v167 = nil;
																	v165 = 1 + 0;
																end
																if (((528 + 577) <= 1176) and (v165 == (5 - 2))) then
																	while true do
																		if ((3379 <= (3331 + 481)) and (v166 == (1 + 0))) then
																			v169 = nil;
																			v170 = nil;
																			v166 = 2 + 0;
																		end
																		if ((v166 == (0 + 0)) or ((1458 - 670) >= (3527 - (340 + 1571)))) then
																			local v262 = 0 + 0;
																			while true do
																				if ((((2585 + 1041) - (1733 + 39)) <= 3379) and (v262 == (2 - 1))) then
																					v166 = 1035 - (125 + 909);
																					break;
																				end
																				if ((4549 == (6497 - (1096 + 852))) and (v262 == (0 + 0))) then
																					v167 = 0;
																					v168 = nil;
																					v262 = 1 - 0;
																				end
																			end
																		end
																		if ((v166 == (2 + 0 + 0)) or ((3534 - ((1131 - (478 + 244)) + (620 - (440 + 77)))) >= 3024)) then
																			v171 = nil;
																			while true do
																				if (((5056 - (46 + 190)) > (2293 - (24 + 27 + (160 - 116)))) and (2 == v167)) then
																					for v321 = v168, v79 do
																						local v322 = (1556 - (655 + 901)) + 0;
																						local v323;
																						local v324;
																						while true do
																							if (((1317 - (1114 + 203)) == v322) or ((1787 - (228 + 498)) >= (1060 + 3831))) then
																								v323 = 0;
																								v324 = nil;
																								v322 = 1 + 0;
																							end
																							if (((2027 - (174 + 91 + 398)) <= 4473) and (v322 == (2 - (1 + 0)))) then
																								while true do
																									if ((v323 == (1905 - (830 + 726 + 349))) or ((4119 - (303 + 221)) <= (1272 - (231 + 1038)))) then
																										v324 = (0 - 0) + 0;
																										while true do
																											if ((v324 == (1162 - (171 + 991))) or (4672 == (15874 - 12022))) then
																												v171 = v171 + 1;
																												v99[v321] = v169[v171];
																												break;
																											end
																										end
																										break;
																									end
																								end
																								break;
																							end
																						end
																					end
																					break;
																				end
																				if (((4185 - 2626) == (3890 - 2331)) and (v167 == (0 + 0))) then
																					local v301 = 0;
																					local v302;
																					while true do
																						if (((0 - 0) == v301) or (((6498 - (695 + 750)) - 3301) <= (1270 - 482))) then
																							v302 = 0 - 0;
																							while true do
																								if ((v302 == (1249 - (111 + (3882 - 2745)))) or ((4065 - (91 + 67)) == (273 - 96))) then
																									v167 = 2 - 1;
																									break;
																								end
																								if (((866 + 2604) > (1078 - ((1701 - 1278) + 100))) and (v302 == (0 + 0))) then
																									v168 = v101[5 - 3];
																									v169, v170 = v96(v99[v168]());
																									v302 = 1 + 0;
																								end
																							end
																							break;
																						end
																					end
																				end
																				if ((v167 == 1) or (972 == (1416 - ((677 - (285 + 66)) + 445)))) then
																					local v303 = (0 - 0) - 0;
																					local v304;
																					while true do
																						if (((7088 - 3906) >= (4936 - 2821)) and (v303 == (711 - (530 + 181)))) then
																							v304 = 881 - (614 + 267);
																							while true do
																								if (((3925 - (19 + 13)) < (7208 - 2779)) and (v304 == 1)) then
																									v167 = 2;
																									break;
																								end
																								if ((v304 == (0 - (1310 - (682 + 628)))) or ((8189 - 5322) < (495 + 1410))) then
																									local v354 = 0 - (0 + 0);
																									while true do
																										if ((v354 == (0 - (299 - (176 + 123)))) or ((3608 - (1293 + 218 + 301)) >= (8265 - 4214))) then
																											v79 = (v170 + v168) - ((2 + 0) - 1);
																											v171 = 0;
																											v354 = 1 - 0;
																										end
																										if ((1619 <= (16196 - 12440)) and (v354 == (2 - 1))) then
																											v304 = 1 + 0;
																											break;
																										end
																									end
																								end
																							end
																							break;
																						end
																					end
																				end
																			end
																			break;
																		end
																	end
																	break;
																end
																if (((124 + 480) == ((1672 - (239 + 30)) - 799)) and (v165 == (1 + 0))) then
																	v168 = nil;
																	v169 = nil;
																	v165 = 1 + 1;
																end
																if ((v165 == (2 + 0 + 0)) or ((5580 - (709 + 387)) == 900)) then
																	v170 = nil;
																	v171 = nil;
																	v165 = 1861 - (673 + 1185);
																end
															end
														elseif ((v101[5 - 3] == v99[v101[4]]) or ((14318 - 9859) <= (1831 - 718))) then
															v78 = v78 + 1 + 0;
														else
															v78 = v101[3 + 0];
														end
													elseif (((4903 - 1271) > (835 + 2563)) and (v102 <= (27 - 13))) then
														v99[v101[3 - 1]] = v62[v101[1883 - (446 + 1379 + 55)]];
													elseif ((((9495 - 4130) - (1040 + 243)) <= (14675 - 9758)) and (v102 > (1862 - (559 + 1288)))) then
														local v234 = 1931 - (609 + 1322);
														local v235;
														local v236;
														local v237;
														while true do
															if (((5286 - (13 + 441)) >= (5178 - (11830 - 8038))) and (v234 == (2 - 1))) then
																v237 = nil;
																while true do
																	if (((682 - 545) == (6 + 131)) and (v235 == 1)) then
																		while true do
																			if ((v236 == 0) or (1570 >= (15732 - 11400))) then
																				v237 = v101[2];
																				v99[v237](v99[v237 + (316 - (306 + 9)) + 0]);
																				break;
																			end
																		end
																		break;
																	end
																	if ((v235 == 0) or ((1781 + 2283) <= (5397 - 3578))) then
																		local v295 = 0;
																		while true do
																			if ((v295 == (0 + 0)) or ((9169 - 4183) < (1041 + 533))) then
																				v236 = 0 + 0;
																				v237 = nil;
																				v295 = 1 + 0;
																			end
																			if (((3717 + 709) > (169 + 3)) and (v295 == (434 - (153 + 280)))) then
																				v235 = 1;
																				break;
																			end
																		end
																	end
																end
																break;
															end
															if (((1691 - 1105) > (409 + 46)) and (v234 == ((0 - 0) + 0))) then
																v235 = 0 + 0 + 0;
																v236 = nil;
																v234 = 1 + 0;
															end
														end
													else
														do
															return;
														end
													end
												elseif (((599 + 227) == 826) and (v102 <= (35 - 11))) then
													if ((v102 <= (13 + 7)) or (4019 > 4441)) then
														if ((2017 < 4261) and (v102 <= 18)) then
															if (((5383 - (89 + 578)) > (58 + 22)) and (v102 > (35 - (12 + 6)))) then
																v99[v101[2]] = v61[v101[3]];
															else
																local v176 = 0;
																local v177;
																local v178;
																while true do
																	if ((1 == v176) or ((4556 - (572 + 477)) == 3272)) then
																		while true do
																			if ((v177 == 0) or ((58 + 61 + 757) >= 3075)) then
																				v178 = v101[2 + 0];
																				do
																					return v99[v178](v13(v99, v178 + 1 + (0 - 0), v79));
																				end
																				break;
																			end
																		end
																		break;
																	end
																	if (((4438 - (84 + 2)) > (4208 - 1654)) and (v176 == 0)) then
																		v177 = 0 + (1375 - (1140 + 235));
																		v178 = nil;
																		v176 = 1;
																	end
																end
															end
														elseif ((v102 > (13 + 6)) or ((5248 - (497 + 345)) < (104 + 3939))) then
															local v179 = 0;
															local v180;
															local v181;
															local v182;
															while true do
																if ((v179 == (0 + 0)) or ((3222 - (605 + 728)) >= (2414 + 969))) then
																	v180 = 0 - 0;
																	v181 = nil;
																	v179 = 1;
																end
																if (((87 + 1805) <= (10108 - 7374)) and (1 == v179)) then
																	v182 = nil;
																	while true do
																		if (((1734 + 189) < (6145 - 3927)) and (v180 == (1 + 0))) then
																			while true do
																				if (((2662 - (457 + 32)) > 379) and (v181 == (1 + 0))) then
																					for v325 = v182, v79 do
																						local v326 = 0;
																						local v327;
																						local v328;
																						local v329;
																						while true do
																							if ((v326 == (0 + 0)) or (2591 == (4811 - (832 + 570)))) then
																								v327 = 0 + 0;
																								v328 = nil;
																								v326 = 1;
																							end
																							if (((303 + 875 + 3336) > (11762 - 8438)) and (v326 == (1 + 0))) then
																								v329 = nil;
																								while true do
																									if ((v327 == 0) or ((1004 - (588 + 208)) >= (13012 - 8184))) then
																										local v365 = 1800 - (884 + 916);
																										while true do
																											if ((v365 == (1 - 0)) or (1583 > (2069 + 1498))) then
																												v327 = 654 - (232 + 421);
																												break;
																											end
																											if ((v365 == (1889 - (1569 + (372 - (33 + 19))))) or ((475 + 838) == (195 + 599))) then
																												v328 = 0 + 0;
																												v329 = nil;
																												v365 = 3 - 2;
																											end
																										end
																									end
																									if (((3779 - (316 + 289)) > (7596 - 4694)) and (v327 == (1 + 0))) then
																										while true do
																											if (((5573 - ((1996 - 1330) + 787)) <= (4685 - (360 + 65))) and ((0 + 0) == v328)) then
																												v329 = v97[v325 - v182];
																												v99[v325] = v329;
																												break;
																											end
																										end
																										break;
																									end
																								end
																								break;
																							end
																						end
																					end
																					break;
																				end
																				if ((v181 == (254 - (79 + 78 + 97))) or ((1391 - 508) > ((7312 - 3583) + 1049))) then
																					local v305 = 0 - 0;
																					local v306;
																					while true do
																						if ((((0 + 0) - (689 - (586 + 103))) == v305) or ((4519 - (503 + 396)) >= (5072 - (92 + 89)))) then
																							v306 = 0 - 0;
																							while true do
																								if ((4258 > (481 + 456)) and (v306 == 0)) then
																									local v355 = 0 + 0 + 0;
																									while true do
																										if ((v355 == (3 - 2)) or ((666 + 4203) < (2065 - 1159))) then
																											v306 = 1 + 0;
																											break;
																										end
																										if ((v355 == 0) or ((586 + 639) > (12876 - 8648))) then
																											v182 = v101[1 + 1];
																											v79 = (v182 + v100) - ((2 - 1) - 0);
																											v355 = 1245 - (485 + 759);
																										end
																									end
																								end
																								if (((7700 - 4372) > 2238) and (v306 == (1190 - (442 + 747)))) then
																									v181 = 1136 - (832 + 303);
																									break;
																								end
																							end
																							break;
																						end
																					end
																				end
																			end
																			break;
																		end
																		if (((4785 - (88 + 858)) > (429 + 976)) and (v180 == (0 + 0))) then
																			local v264 = 0 + 0;
																			while true do
																				if (((790 - ((2254 - (1309 + 179)) + 23)) == v264) or ((6383 - (9189 - 4099)) <= (693 - 186))) then
																					v180 = 2 - 1;
																					break;
																				end
																				if ((v264 == 0) or ((9829 - 6933) < (1878 - (1036 + 37)))) then
																					v181 = 0 + 0;
																					v182 = nil;
																					v264 = 1 - 0;
																				end
																			end
																		end
																	end
																	break;
																end
															end
														else
															local v183 = 0;
															local v184;
															local v185;
															local v186;
															local v187;
															local v188;
															while true do
																if (((1822 + 494) == (3796 - (641 + 839))) and (v183 == ((399 + 516) - (910 + (7 - 4))))) then
																	v188 = nil;
																	while true do
																		if (((2 - 1) == v184) or ((4254 - (1466 + 218)) == (705 + 828))) then
																			v79 = (v187 + v185) - 1;
																			v188 = 1148 - (556 + 592);
																			v184 = 1 + 1 + 0;
																		end
																		if (((808 - (329 + 479)) == v184) or ((1737 - ((369 - 195) + 680)) == 1460)) then
																			local v265 = 0 - 0;
																			while true do
																				if ((v265 == (0 - 0)) or ((9573 - 4954) <= (714 + 285))) then
																					v185 = v101[2];
																					v186, v187 = v96(v99[v185](v99[v185 + (740 - (396 + 343))]));
																					v265 = (610 - (295 + 314)) + 0;
																				end
																				if ((v265 == (1478 - (29 + 1448))) or ((4799 - (135 + 1254)) > (15505 - 11389))) then
																					v184 = 4 - 3;
																					break;
																				end
																			end
																		end
																		if ((v184 == (2 + 0)) or ((2430 - (389 + (2794 - 1656))) >= (3633 - (102 + 472)))) then
																			for v278 = v185, v79 do
																				local v279 = 0 + 0;
																				local v280;
																				local v281;
																				while true do
																					if ((v279 == 0) or (3976 < 2857)) then
																						v280 = 0 + 0;
																						v281 = nil;
																						v279 = 1 + 0;
																					end
																					if ((4930 > (3852 - (320 + 1225))) and ((1 - 0) == v279)) then
																						while true do
																							if ((v280 == (0 + (1962 - (1300 + 662)))) or (((17302 - 11792) - ((1912 - (1178 + 577)) + 1307)) < (671 + 620))) then
																								v281 = 0;
																								while true do
																									if ((v281 == (1859 - ((2426 - 1605) + 1038))) or ((10581 - 6340) == 3545)) then
																										v188 = v188 + 1 + 0;
																										v99[v278] = v186[v188];
																										break;
																									end
																								end
																								break;
																							end
																						end
																						break;
																					end
																				end
																			end
																			break;
																		end
																	end
																	break;
																end
																if ((0 == v183) or ((7190 - 3142) > (1575 + 2657))) then
																	v184 = (1405 - (851 + 554)) - 0;
																	v185 = nil;
																	v183 = 1;
																end
																if ((v183 == (1027 - (738 + 96 + 192))) or (1750 >= (221 + 3252))) then
																	v186 = nil;
																	v187 = nil;
																	v183 = 2;
																end
															end
														end
													elseif (((813 + 2353) == 3166) and (v102 <= 22)) then
														if (((38 + (4784 - 3059)) < (5768 - 2044)) and (v102 == (325 - (300 + 4)))) then
															local v189 = 0 + 0;
															local v190;
															local v191;
															local v192;
															while true do
																if ((57 <= 2723) and (v189 == (5 - 3))) then
																	for v252 = 1, v101[366 - (112 + 250)] do
																		local v253 = 0 + 0;
																		local v254;
																		local v255;
																		while true do
																			if ((v253 == (0 - 0)) or ((1186 + 884) == (230 + 213))) then
																				v254 = 0 + 0;
																				v255 = nil;
																				v253 = 1 + 0;
																			end
																			if ((v253 == (1 + 0)) or (2705 == 1393)) then
																				while true do
																					if ((v254 == (1414 - (1001 + (896 - 483)))) or ((10260 - 5659) < (363 - (115 + 187)))) then
																						v78 = v78 + (883 - (244 + 638));
																						v255 = v93[v78];
																						v254 = 1 + 0;
																					end
																					if ((v254 == (694 - (627 + 66))) or ((4141 - (2605 + 146)) >= (5346 - (512 + 90)))) then
																						if ((v255[1907 - ((6561 - 4896) + (1402 - (160 + 1001)))] == (720 - (373 + 344))) or ((791 + 113 + 1099) > (1015 + 2819))) then
																							v192[v252 - (2 - 1)] = {v99,v255[1102 - (35 + 1064)]};
																						else
																							v192[v252 - (1 + 0)] = {v61,v255[1239 - (298 + (1920 - 982))]};
																						end
																						v98[#v98 + (1260 - (233 + 1026))] = v192;
																						break;
																					end
																				end
																				break;
																			end
																		end
																	end
																	v99[v101[2]] = v29(v190, v191, v62);
																	break;
																end
																if ((v189 == ((2025 - (237 + 121)) - ((1533 - (525 + 372)) + 1030))) or ((80 + 76) > (3823 + 90))) then
																	local v246 = 0 + 0;
																	while true do
																		if (((14 + 181) == (416 - (55 + 166))) and (v246 == ((0 - 0) + 0))) then
																			v192 = {};
																			v191 = v10({}, {__index=function(v282, v283)
																				local v284 = 0;
																				local v285;
																				local v286;
																				while true do
																					if (((313 + (9173 - 6381)) >= (6858 - 5062)) and (v284 == ((440 - (96 + 46)) - (36 + 261)))) then
																						while true do
																							if (((7657 - (4055 - (643 + 134))) >= 2131) and (v285 == (1368 - (34 + 1334)))) then
																								local v350 = 0;
																								while true do
																									if (((1478 + 2366) >= (1588 + 455)) and (v350 == 0)) then
																										v286 = v192[v283];
																										return v286[1284 - (374 + 661 + 248)][v286[2]];
																									end
																								end
																							end
																						end
																						break;
																					end
																					if ((v284 == ((50 - 29) - (20 + 1))) or (3232 <= 2731)) then
																						local v332 = 0;
																						while true do
																							if (((2556 + 2349) == (5224 - (134 + 185))) and (0 == v332)) then
																								v285 = 1133 - (549 + 584);
																								v286 = nil;
																								v332 = 686 - ((1165 - 851) + 371);
																							end
																							if ((v332 == (3 - 2)) or (4136 >= 4411)) then
																								v284 = 969 - (478 + 490);
																								break;
																							end
																						end
																					end
																				end
																			end,__newindex=function(v287, v288, v289)
																				local v290 = 0 + 0;
																				local v291;
																				while true do
																					if ((v290 == (1172 - (786 + 386))) or ((9580 - 6622) == (5396 - (1012 + 43 + (635 - 311))))) then
																						v291 = v192[v288];
																						v291[1][v291[(2743 - 1401) - (1093 + 247)]] = v289;
																						break;
																					end
																				end
																			end});
																			v246 = 1 + 0;
																		end
																		if (((130 + 1098) >= (3227 - 2414)) and (v246 == (3 - 2))) then
																			v189 = 5 - 3;
																			break;
																		end
																	end
																end
																if ((v189 == 0) or ((8682 - 5227) > (1441 + 2609))) then
																	local v247 = 0 - 0;
																	while true do
																		if (((837 - 594) == 243) and (v247 == ((719 - (316 + 403)) + 0 + 0))) then
																			v190 = v94[v101[7 - 4]];
																			v191 = nil;
																			v247 = (1894 - 1205) - (364 + 324);
																		end
																		if ((v247 == (2 - 1)) or ((650 - 379) > (522 + 1050))) then
																			v189 = 1;
																			break;
																		end
																	end
																end
															end
														else
															v99[v101[8 - 6]] = v29(v94[v101[4 - 1]], nil, v62);
														end
													elseif ((2739 < ((3615 + 6386) - (16893 - 10185))) and (v102 > (1291 - (1249 + 19)))) then
														local v194 = 0 + 0;
														local v195;
														local v196;
														local v197;
														local v198;
														while true do
															if ((v194 == ((3 + 0) - 2)) or (3942 < (366 + 768))) then
																v197 = nil;
																v198 = nil;
																v194 = 1088 - (686 + 400);
															end
															if ((v194 == (0 + 0)) or (((10124 - 7202) - (73 + 156)) == (24 + (23635 - 18686)))) then
																v195 = 811 - (721 + 90);
																v196 = nil;
																v194 = 1;
															end
															if (((25 + (4406 - 2285)) == (6967 - 4821)) and (v194 == (472 - (224 + 246)))) then
																while true do
																	if ((v195 == (0 - 0)) or (((237 + 3894) - (3714 - 1827)) == (585 + 2639))) then
																		local v267 = 0 + 0;
																		while true do
																			if (((0 + 0) == v267) or ((9749 - 4845) <= (6376 - 4460))) then
																				v196 = 513 - (10 + 193 + 310);
																				v197 = nil;
																				v267 = (5866 - 3872) - (1238 + 755);
																			end
																			if (((7 + 83) <= 1065) and (v267 == (1535 - (709 + 825)))) then
																				v195 = 1 - 0;
																				break;
																			end
																		end
																	end
																	if (((6994 - 2192) == (5666 - (196 + 668))) and (v195 == (3 - 2))) then
																		v198 = nil;
																		while true do
																			if ((v196 == (1 - 0)) or (2280 <= 511)) then
																				for v335 = 1, #v98 do
																					local v336 = 0;
																					local v337;
																					local v338;
																					local v339;
																					while true do
																						if ((((850 - (12 + 5)) - (171 + 662)) == v336) or ((1769 - (4 + 89)) <= (1622 - 1159))) then
																							v337 = 0;
																							v338 = nil;
																							v336 = 1;
																						end
																						if ((3869 == (1409 + 2460)) and (v336 == 1)) then
																							v339 = nil;
																							while true do
																								if (((5086 - 3928) <= (1025 + 1588)) and (v337 == (1487 - (35 + 1451)))) then
																									while true do
																										if ((v338 == 0) or ((3817 - (28 + 1425)) <= (3992 - ((3654 - 2713) + 1052)))) then
																											v339 = v98[v335];
																											for v382 = 0 + 0, #v339 do
																												local v383 = 0;
																												local v384;
																												local v385;
																												local v386;
																												local v387;
																												while true do
																													if ((v383 == (1516 - (822 + 692))) or ((7026 - 2104) < (413 - 219))) then
																														while true do
																															if ((v384 == (0 + 0)) or ((2388 - (45 + 252)) < ((65 - 34) + (0 - 0)))) then
																																local v392 = 0;
																																while true do
																																	if (((0 + 0) == v392) or ((5914 - 3484) >= (5305 - (114 + 319)))) then
																																		v385 = v339[v382];
																																		v386 = v385[1 - 0];
																																		v392 = 1 - 0;
																																	end
																																	if ((v392 == (1 + 0)) or ((7106 - 2336) < (3635 - 1900))) then
																																		v384 = 1964 - (556 + 1407);
																																		break;
																																	end
																																end
																															end
																															if ((v384 == (1207 - (741 + 465))) or ((4904 - (170 + 295)) <= (252 + 987 + 1111))) then
																																v387 = v385[2 + 0];
																																if (((v386 == v99) and (v387 >= v197)) or ((11027 - 6548) < (3703 + 763))) then
																																	local v396 = 0 + 0;
																																	local v397;
																																	local v398;
																																	while true do
																																		if ((((3416 - (1656 + 317)) + 1104) > 1225) and (v396 == (1230 - (957 + 273)))) then
																																			v397 = 0 + 0;
																																			v398 = nil;
																																			v396 = 1 + 0;
																																		end
																																		if (((17798 - 13127) > (7046 - 4372)) and (v396 == 1)) then
																																			while true do
																																				if ((v397 == (0 - 0)) or (((16308 + 1993) - 14605) < (5107 - (389 + 1391)))) then
																																					v398 = 0;
																																					while true do
																																						if ((v398 == (0 + 0)) or ((473 + 4069) == ((5418 + 1343) - 3791))) then
																																							v198[v387] = v386[v387];
																																							v385[1] = v198;
																																							break;
																																						end
																																					end
																																					break;
																																				end
																																			end
																																			break;
																																		end
																																	end
																																end
																																break;
																															end
																														end
																														break;
																													end
																													if (((1203 - (783 + 168)) <= (6635 - 4658)) and (v383 == (0 + 0))) then
																														v384 = (826 - 515) - (309 + 2);
																														v385 = nil;
																														v383 = (9 - 7) - 1;
																													end
																													if ((v383 == 1) or ((2648 - (1090 + 122)) == 3775)) then
																														v386 = nil;
																														v387 = nil;
																														v383 = 2;
																													end
																												end
																											end
																											break;
																										end
																									end
																									break;
																								end
																								if ((v337 == (0 + 0)) or ((5433 - 3815) < (637 + 293))) then
																									local v369 = 1118 - (628 + 490);
																									while true do
																										if (((847 + 3876) > (10282 - 6129)) and ((4 - 3) == v369)) then
																											v337 = 1;
																											break;
																										end
																										if ((v369 == (774 - (431 + 343))) or ((7379 - 3725) >= ((13817 - (5 + 349)) - 8809))) then
																											v338 = 0;
																											v339 = nil;
																											v369 = 1 + 0;
																										end
																									end
																								end
																							end
																							break;
																						end
																					end
																				end
																				break;
																			end
																			if (((122 + 829) <= (3191 - (556 + (5410 - 4271)))) and ((15 - (6 + (1280 - (266 + 1005)))) == v196)) then
																				local v308 = 0 + 0;
																				local v309;
																				while true do
																					if ((v308 == (0 + 0)) or (1736 == (740 - (28 + 141)))) then
																						v309 = 0 + 0;
																						while true do
																							if ((v309 == (0 - 0)) or ((635 + 261) > (6086 - (486 + 831)))) then
																								local v356 = 0 - 0;
																								while true do
																									if ((v356 == (3 - 2)) or (1045 <= (193 + 827))) then
																										v309 = 3 - 2;
																										break;
																									end
																									if ((v356 == (0 + 0)) or (1160 <= (1591 - (668 + 595)))) then
																										v197 = v101[2];
																										v198 = {};
																										v356 = 1;
																									end
																								end
																							end
																							if (((3427 + (1299 - 918)) > 2924) and (v309 == (1 + (0 - 0)))) then
																								v196 = 2 - 1;
																								break;
																							end
																						end
																						break;
																					end
																				end
																			end
																		end
																		break;
																	end
																end
																break;
															end
														end
													else
														v99[v101[292 - ((1719 - (561 + 1135)) + 267)]][v101[1947 - (1129 + 815)]] = v99[v101[5 - 1]];
													end
												elseif ((((14062 - 9784) - (371 + 16)) < (6669 - (1326 + (1490 - (507 + 559))))) and (v102 <= (52 - 24))) then
													if ((v102 <= (94 - 68)) or (((5901 - 3549) - (88 + 30)) <= (4645 - 3143))) then
														if ((v102 > (413 - (212 + 176))) or ((3283 - ((1625 - (250 + 655)) + 51)) < (960 - 528))) then
															v99[v101[1778 - (421 + 1355)]] = {};
														else
															local v202 = 0 - 0;
															local v203;
															local v204;
															local v205;
															while true do
																if ((v202 == 1) or ((908 + 940) == 865)) then
																	v205 = nil;
																	while true do
																		if ((v203 == (1083 - (286 + 797))) or (4682 <= (16600 - (32883 - 20824)))) then
																			local v268 = 0 - 0;
																			local v269;
																			while true do
																				if ((v268 == (439 - (397 + 42))) or ((946 + 2080) >= (4846 - (24 + 776)))) then
																					v269 = 0 - 0;
																					while true do
																						if (((2793 - ((387 - 165) + 563)) > (1405 - 767)) and (v269 == (1 + 0))) then
																							v203 = 1;
																							break;
																						end
																						if ((1775 <= (3423 - (23 + 167))) and (v269 == (1798 - (690 + (1733 - 625))))) then
																							local v349 = 0 + (1956 - (1869 + 87));
																							while true do
																								if ((v349 == (1 + 0)) or (4543 == (2845 - (40 + 808)))) then
																									v269 = 1 + 0;
																									break;
																								end
																								if ((v349 == 0) or (3102 < (2783 - 2055))) then
																									v204 = v101[2 + 0];
																									v205 = v99[v101[2 + 1]];
																									v349 = 1 + 0;
																								end
																							end
																						end
																					end
																					break;
																				end
																			end
																		end
																		if (((916 - (47 + 524)) == (224 + 121)) and (v203 == (2 - 1))) then
																			v99[v204 + (1 - 0)] = v205;
																			v99[v204] = v205[v101[8 - (13 - 9)]];
																			break;
																		end
																	end
																	break;
																end
																if ((v202 == (1726 - (1165 + 561))) or ((84 + 2743) < ((3071 - (484 + 1417)) - (1697 - 905)))) then
																	v203 = 0 + 0;
																	v204 = nil;
																	v202 = 1;
																end
															end
														end
													elseif ((v102 > 27) or ((3955 - (341 + 138)) < (702 + 1895))) then
														local v206 = 0;
														local v207;
														local v208;
														local v209;
														local v210;
														local v211;
														local v212;
														while true do
															if (((6353 - 3274) < (5120 - (89 + 237))) and (v206 == (3 - 2))) then
																v209 = nil;
																v210 = nil;
																v206 = 3 - (1 - 0);
															end
															if (((5735 - ((1354 - (48 + 725)) + 300)) > (5684 - (855 + 365))) and ((0 - 0) == v206)) then
																v207 = 0 + 0;
																v208 = nil;
																v206 = 1236 - (1030 + 205);
															end
															if ((v206 == (3 + 0)) or (4912 == (3496 + 262))) then
																while true do
																	if (((412 - (156 + 130)) <= (7911 - 4429)) and (v207 == (1 - 0))) then
																		local v273 = 0;
																		while true do
																			if ((v273 == (1 - 0)) or (((13041 - 8180) - 2487) == (1153 + 3221))) then
																				v207 = 2;
																				break;
																			end
																			if (((535 + 384 + 656) == (1644 - ((26 - 16) + 59))) and (v273 == 0)) then
																				v210 = nil;
																				v211 = nil;
																				v273 = 1;
																			end
																		end
																	end
																	if ((v207 == (0 + 0)) or ((11001 - 8767) == (2618 - (671 + 492)))) then
																		v208 = 0 + 0 + 0;
																		v209 = nil;
																		v207 = 1216 - (369 + 846);
																	end
																	if ((v207 == (1 + 1)) or ((911 + 156) > (3724 - (1036 + 909)))) then
																		v212 = nil;
																		while true do
																			if (((1719 + 442) >= 934) and (v208 == ((0 + 0) - 0))) then
																				local v310 = 203 - (11 + 192);
																				local v311;
																				while true do
																					if (((815 + 797) == (1787 - ((988 - (152 + 701)) + 40))) and (v310 == 0)) then
																						v311 = 0 - 0;
																						while true do
																							if (((2624 + 1728) >= (6240 - 3407)) and (v311 == (1 - 0))) then
																								v208 = 177 - (50 + 126);
																								break;
																							end
																							if ((v311 == (0 - 0)) or (3222 < (681 + 2392))) then
																								local v359 = 1413 - (1233 + 180);
																								while true do
																									if (((1713 - (522 + 447)) <= (4363 - ((1418 - (430 + 881)) + 1314))) and (v359 == (0 + 0))) then
																										v209 = v101[5 - 3];
																										v210, v211 = v96(v99[v209](v13(v99, v209 + 1, v101[2 + 1])));
																										v359 = (1 + 0) - 0;
																									end
																									if ((v359 == (3 - 2)) or (((4638 - (557 + 338)) - (716 + 1194)) <= (23 + 384 + 915))) then
																										v311 = 1 + 0;
																										break;
																									end
																								end
																							end
																						end
																						break;
																					end
																				end
																			end
																			if ((v208 == (505 - (74 + 429))) or ((6687 - 3220) <= (523 + 532))) then
																				for v340 = v209, v79 do
																					local v341 = 0;
																					local v342;
																					while true do
																						if ((3541 == (8105 - (12861 - 8297))) and (v341 == 0)) then
																							v342 = 0 + 0;
																							while true do
																								if ((v342 == (0 - 0)) or (3557 >= (9897 - 5894))) then
																									v212 = v212 + (434 - (279 + 154));
																									v99[v340] = v210[v212];
																									break;
																								end
																							end
																							break;
																						end
																					end
																				end
																				break;
																			end
																			if ((v208 == (779 - (454 + 324))) or ((517 + 140) >= (1685 - (12 + 5)))) then
																				local v312 = 0 + 0;
																				local v313;
																				while true do
																					if ((v312 == 0) or ((2616 - 1589) > (1426 + 2432))) then
																						v313 = 1093 - (277 + 816);
																						while true do
																							if ((v313 == (0 - 0)) or ((4837 - (1058 + 125)) < (85 + 365))) then
																								v79 = (v211 + v209) - (976 - (815 + 160));
																								v212 = 0;
																								v313 = 4 - 3;
																							end
																							if ((((15715 - 11227) - 2597) < (1063 + 3390)) and (v313 == (2 - 1))) then
																								v208 = 2;
																								break;
																							end
																						end
																						break;
																					end
																				end
																			end
																		end
																		break;
																	end
																end
																break;
															end
															if ((v206 == 2) or ((5038 - (41 + 1857)) < (4022 - (1222 + 671)))) then
																v211 = nil;
																v212 = nil;
																v206 = 7 - 4;
															end
														end
													else
														v99[v101[2 - 0]] = v101[1185 - (229 + 953)] ~= 0;
													end
												elseif ((v102 <= ((4792 - 2988) - (1111 + 663))) or ((4134 - (874 + 705)) < (2672 - 1432))) then
													if ((v102 > ((806 - (499 + 302)) + 24)) or ((3226 + 1501) <= 4722)) then
														v99[v101[3 - 1]] = v101[1 + 2];
													elseif (((1419 - (642 + 37)) < (1126 + 3811)) and (v99[v101[1 + 1]] ~= v101[9 - 5])) then
														v78 = v78 + 1;
													else
														v78 = v101[457 - (233 + 221)];
													end
												elseif (((8458 - 4800) >= (247 + 33)) and (v102 <= 31)) then
													local v216 = 1541 - (718 + 823);
													local v217;
													local v218;
													local v219;
													while true do
														if ((v216 == (1 + (866 - (39 + 827)))) or ((1690 - ((733 - 467) + 539)) >= (2918 - 1887))) then
															v219 = nil;
															while true do
																if ((3554 >= ((3908 - 2158) - (636 + 589))) and ((0 - 0) == v217)) then
																	v218 = 0;
																	v219 = nil;
																	v217 = 1;
																end
																if ((2414 <= (6129 - 3157)) and ((1 + 0) == v217)) then
																	while true do
																		if (((1283 + 2246) <= (4553 - (657 + 358))) and (v218 == (0 - 0))) then
																			v219 = v101[(15 - 11) - 2];
																			v99[v219] = v99[v219](v13(v99, v219 + (1188 - (1151 + (54 - 18))), v79));
																			break;
																		end
																	end
																	break;
																end
															end
															break;
														end
														if ((v216 == (0 + 0)) or ((753 + 2108) < (1367 - 909))) then
															v217 = 1832 - (1552 + 280);
															v218 = nil;
															v216 = 1;
														end
													end
												elseif (((2551 - (64 + 770)) <= (3073 + 1452)) and (v102 > (72 - 40))) then
													for v248 = v101[1 + 1], v101[1246 - (157 + 1086)] do
														v99[v248] = nil;
													end
												else
													local v239 = 0;
													local v240;
													local v241;
													local v242;
													while true do
														if (((1 - (0 + 0)) == v239) or (3178 <= (6674 - 5150))) then
															v242 = nil;
															while true do
																if (((6525 - 2271) > (505 - 135)) and (v240 == ((2400 - 1580) - (599 + 220)))) then
																	for v316 = v241 + 1, v79 do
																		v7(v242, v99[v316]);
																	end
																	break;
																end
																if ((v240 == 0) or ((3255 - 1620) == (3708 - (1813 + 19 + 99)))) then
																	local v296 = 0 + 0;
																	while true do
																		if ((0 == v296) or ((4555 - (841 + 376)) >= ((8851 - 3257) - 1601))) then
																			local v346 = 0 + 0;
																			while true do
																				if ((1154 <= (4026 - 2551)) and (v346 == (860 - (464 + 395)))) then
																					v296 = 2 - 1;
																					break;
																				end
																				if ((v346 == (0 + 0)) or (2610 < (2067 - (467 + 370)))) then
																					v241 = v101[3 - 1];
																					v242 = v99[v241];
																					v346 = (105 - (103 + 1)) + 0;
																				end
																			end
																		end
																		if ((v296 == (3 - 2)) or (1448 == (481 + 2602))) then
																			v240 = 2 - 1;
																			break;
																		end
																	end
																end
															end
															break;
														end
														if (((3659 - (150 + 370)) > (1470 - (475 + 79))) and (v239 == 0)) then
															v240 = 1282 - (74 + 1208);
															v241 = nil;
															v239 = 2 - 1;
														end
													end
												end
												v78 = v78 + (4 - 3);
												break;
											end
											if (((2102 + 852) == (3344 - ((29 - 15) + 376))) and (v106 == (0 - (0 - 0)))) then
												v101 = v93[v78];
												v102 = v101[1 + 0];
												v106 = 1 + 0;
											end
										end
									end
								end
								v77 = 3;
							end
							if (v77 == 0) then
								v78 = 1;
								v79 = -1;
								v77 = 1;
							end
							if (v77 == 1) then
								v80 = {...};
								v81 = v12("#", ...) - 1;
								v77 = 2;
							end
						end
					end;
				end
				if (v63 == 0) then
					v64 = v60[1];
					v65 = v60[2];
					v63 = 1;
				end
			end
		end
		return v29(v28(), {}, v17)(...);
	end
	v15("LOL!", v9(), ...);
end
