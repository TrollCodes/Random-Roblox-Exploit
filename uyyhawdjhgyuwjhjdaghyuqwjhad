--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.6) ~  Much Love, Ferib 

]]--

do
	local v0 = tonumber;
	local v1 = string.byte;
	local v2 = string.char;
	local v3 = string.sub;
	local v4 = string.gsub;
	local v5 = string.rep;
	local v6 = table.concat;
	local v7 = table.insert;
	local v8 = math.ldexp;
	local v9 = getfenv or function()
		return _ENV;
	end;
	local v10 = setmetatable;
	local v11 = pcall;
	local v12 = select;
	local v13 = unpack or table.unpack;
	local v14 = tonumber;
	local function v15(v16, v17, ...)
		local v18 = 0;
		local v19;
		local v20;
		local v21;
		local v22;
		local v23;
		local v24;
		local v25;
		local v26;
		local v27;
		local v28;
		local v29;
		local v30;
		while true do
			if (v18 == 5) then
				v27 = v24;
				v28 = nil;
				function v28(...)
					return {...}, v12("#", ...);
				end
				v18 = 6;
			end
			if (v18 == 1) then
				v21 = nil;
				function v21(v31, v32, v33)
					if v33 then
						local v70 = (v31 / ((5 - 3) ^ (v32 - (2 - 1)))) % (2 ^ (((v33 - (1 - 0)) - (v32 - ((1 + 1) - 1))) + (620 - (555 + 64))));
						return v70 - (v70 % (932 - (215 + 642 + 74)));
					else
						local v71 = 2 ^ (v32 - ((1446 - (282 + 595)) - (367 + 201)));
						return (((v31 % (v71 + v71)) >= v71) and (1638 - (1523 + 114))) or (927 - (214 + 713));
					end
				end
				v22 = nil;
				v18 = 2;
			end
			if (v18 == 3) then
				v24 = nil;
				function v24()
					local v34, v35, v36, v37 = v1(v16, v19, v19 + 3 + 0);
					v19 = v19 + 4;
					return (v37 * 16777216) + (v36 * (93426 - 27890)) + (v35 * (1321 - (68 + 997))) + v34;
				end
				v25 = nil;
				v18 = 4;
			end
			if (v18 == 6) then
				v29 = nil;
				function v29()
					local v38 = 1930 - (1869 + 61);
					local v39;
					local v40;
					local v41;
					local v42;
					local v43;
					local v44;
					local v45;
					while true do
						if (v38 == (1 + 2)) then
							v45 = nil;
							while true do
								local v79 = 0 - 0;
								while true do
									if (v79 ~= 0) then
									else
										if (v39 ~= (1 - 0)) then
										else
											local v106 = 0;
											while true do
												if (v106 == 0) then
													v44 = v24();
													v45 = {};
													v106 = 1;
												end
												if (v106 ~= 1) then
												else
													for v114 = 1 + 0, v44 do
														local v115 = 0 - 0;
														local v116;
														local v117;
														local v118;
														local v119;
														while true do
															if (v115 == 2) then
																while true do
																	if (v116 == 0) then
																		local v123 = 0;
																		while true do
																			if (1 == v123) then
																				v116 = 1;
																				break;
																			end
																			if (v123 == (0 + 0)) then
																				v117 = 0;
																				v118 = nil;
																				v123 = 1475 - (1329 + 145);
																			end
																		end
																	end
																	if (v116 == 1) then
																		v119 = nil;
																		while true do
																			if (v117 == 1) then
																				if (v118 == 1) then
																					v119 = v22() ~= 0;
																				elseif (v118 == 2) then
																					v119 = v25();
																				elseif (v118 ~= (974 - (140 + 831))) then
																				else
																					v119 = v26();
																				end
																				v45[v114] = v119;
																				break;
																			end
																			if (0 == v117) then
																				local v130 = 0;
																				local v131;
																				while true do
																					if (v130 ~= (1850 - (1409 + 441))) then
																					else
																						v131 = 718 - (15 + 703);
																						while true do
																							if (v131 == 0) then
																								local v235 = 0;
																								while true do
																									if ((0 + 0) == v235) then
																										local v272 = 438 - (262 + 176);
																										while true do
																											if (v272 ~= 0) then
																											else
																												v118 = v22();
																												v119 = nil;
																												v272 = 1722 - (345 + 1376);
																											end
																											if (v272 ~= (689 - (198 + 490))) then
																											else
																												v235 = 4 - 3;
																												break;
																											end
																										end
																									end
																									if ((2 - 1) == v235) then
																										v131 = 1;
																										break;
																									end
																								end
																							end
																							if (v131 ~= 1) then
																							else
																								v117 = 1207 - (696 + 510);
																								break;
																							end
																						end
																						break;
																					end
																				end
																			end
																		end
																		break;
																	end
																end
																break;
															end
															if (v115 == 0) then
																v116 = 0;
																v117 = nil;
																v115 = 1 - 0;
															end
															if (v115 == (1263 - (1091 + 171))) then
																v118 = nil;
																v119 = nil;
																v115 = 1 + 1;
															end
														end
													end
													v43[9 - 6] = v22();
													v106 = 2;
												end
												if ((6 - 4) ~= v106) then
												else
													v39 = 376 - (123 + 251);
													break;
												end
											end
										end
										if ((9 - 7) == v39) then
											local v107 = 698 - (208 + 490);
											local v108;
											while true do
												if (0 == v107) then
													v108 = 0 + 0;
													while true do
														local v120 = 0;
														while true do
															if (0 ~= v120) then
															else
																if ((0 + 0) == v108) then
																	local v122 = 0;
																	while true do
																		if (v122 ~= (837 - (660 + 176))) then
																		else
																			v108 = 1;
																			break;
																		end
																		if (v122 ~= (0 + 0)) then
																		else
																			for v132 = 1, v24() do
																				local v133 = 0;
																				local v134;
																				local v135;
																				while true do
																					if (v133 ~= (203 - (14 + 188))) then
																					else
																						while true do
																							if (v134 == 0) then
																								v135 = v22();
																								if (v21(v135, 1, 676 - (534 + 141)) ~= (0 + 0)) then
																								else
																									local v266 = 0;
																									local v267;
																									local v268;
																									local v269;
																									local v270;
																									local v271;
																									while true do
																										if (v266 ~= (0 + 0)) then
																										else
																											v267 = 0 + 0;
																											v268 = nil;
																											v266 = 1 - 0;
																										end
																										if (v266 ~= (1 - 0)) then
																										else
																											v269 = nil;
																											v270 = nil;
																											v266 = 2;
																										end
																										if ((5 - 3) == v266) then
																											v271 = nil;
																											while true do
																												if (v267 == 0) then
																													local v300 = 0;
																													while true do
																														if (v300 == 0) then
																															v268 = 0;
																															v269 = nil;
																															v300 = 1 + 0;
																														end
																														if (v300 == (1 + 0)) then
																															v267 = 397 - (115 + 281);
																															break;
																														end
																													end
																												end
																												if (1 == v267) then
																													local v301 = 0;
																													while true do
																														if (v301 == 1) then
																															v267 = 4 - 2;
																															break;
																														end
																														if (v301 == (0 + 0)) then
																															v270 = nil;
																															v271 = nil;
																															v301 = 2 - 1;
																														end
																													end
																												end
																												if (v267 == (7 - 5)) then
																													while true do
																														if (v268 == (867 - (550 + 317))) then
																															local v313 = 0;
																															local v314;
																															while true do
																																if (v313 == 0) then
																																	v314 = 0;
																																	while true do
																																		if (v314 ~= 1) then
																																		else
																																			v268 = 1;
																																			break;
																																		end
																																		if ((0 - 0) == v314) then
																																			v269 = v21(v135, 2, 3 - 0);
																																			v270 = v21(v135, 4, 6);
																																			v314 = 2 - 1;
																																		end
																																	end
																																	break;
																																end
																															end
																														end
																														if (v268 == 3) then
																															if (v21(v270, 288 - (134 + 151), 1668 - (970 + 695)) ~= 1) then
																															else
																																v271[7 - 3] = v45[v271[4]];
																															end
																															v40[v132] = v271;
																															break;
																														end
																														if (v268 == 2) then
																															local v316 = 1990 - (582 + 1408);
																															while true do
																																if ((3 - 2) == v316) then
																																	v268 = 3 - 0;
																																	break;
																																end
																																if (v316 ~= (0 - 0)) then
																																else
																																	local v330 = 0;
																																	while true do
																																		if (v330 == (1824 - (1195 + 629))) then
																																			if (v21(v270, 1, 1 - 0) == (242 - (187 + 54))) then
																																				v271[2] = v45[v271[782 - (162 + 618)]];
																																			end
																																			if (v21(v270, 2, 2 + 0) ~= 1) then
																																			else
																																				v271[3] = v45[v271[3]];
																																			end
																																			v330 = 1 + 0;
																																		end
																																		if (v330 ~= 1) then
																																		else
																																			v316 = 1 - 0;
																																			break;
																																		end
																																	end
																																end
																															end
																														end
																														if (v268 == (1 - 0)) then
																															v271 = {v23(),v23(),nil,nil};
																															if (v269 == (1636 - (1373 + 263))) then
																																local v326 = 0;
																																local v327;
																																local v328;
																																while true do
																																	if ((1000 - (451 + 549)) == v326) then
																																		v327 = 0;
																																		v328 = nil;
																																		v326 = 1 + 0;
																																	end
																																	if (v326 == (1 - 0)) then
																																		while true do
																																			if (v327 ~= (0 - 0)) then
																																			else
																																				v328 = 0;
																																				while true do
																																					if ((1384 - (746 + 638)) ~= v328) then
																																					else
																																						v271[3] = v23();
																																						v271[4] = v23();
																																						break;
																																					end
																																				end
																																				break;
																																			end
																																		end
																																		break;
																																	end
																																end
																															elseif (v269 == (1 + 0)) then
																																v271[3] = v24();
																															elseif (v269 == (2 - 0)) then
																																v271[344 - (218 + 123)] = v24() - ((1583 - (1535 + 46)) ^ (16 + 0));
																															elseif (v269 == (1 + 2)) then
																																local v344 = 0;
																																local v345;
																																local v346;
																																while true do
																																	if (v344 == 0) then
																																		local v349 = 0;
																																		while true do
																																			if (v349 == 1) then
																																				v344 = 561 - (306 + 254);
																																				break;
																																			end
																																			if (v349 ~= (0 + 0)) then
																																			else
																																				v345 = 0 - 0;
																																				v346 = nil;
																																				v349 = 1;
																																			end
																																		end
																																	end
																																	if (v344 == (1468 - (899 + 568))) then
																																		while true do
																																			if (v345 == (0 + 0)) then
																																				v346 = 0 - 0;
																																				while true do
																																					if (v346 == 0) then
																																						v271[606 - (268 + 335)] = v24() - (2 ^ 16);
																																						v271[294 - (60 + 230)] = v23();
																																						break;
																																					end
																																				end
																																				break;
																																			end
																																		end
																																		break;
																																	end
																																end
																															end
																															v268 = 574 - (426 + 146);
																														end
																													end
																													break;
																												end
																											end
																											break;
																										end
																									end
																								end
																								break;
																							end
																						end
																						break;
																					end
																					if (v133 == 0) then
																						local v213 = 0 + 0;
																						while true do
																							if ((1456 - (282 + 1174)) == v213) then
																								v134 = 811 - (569 + 242);
																								v135 = nil;
																								v213 = 2 - 1;
																							end
																							if (v213 ~= 1) then
																							else
																								v133 = 1;
																								break;
																							end
																						end
																					end
																				end
																			end
																			for v136 = 1, v24() do
																				v41[v136 - (1 + 0)] = v29();
																			end
																			v122 = 1025 - (706 + 318);
																		end
																	end
																end
																if (1 == v108) then
																	for v124 = 1, v24() do
																		v42[v124] = v24();
																	end
																	return v43;
																end
																break;
															end
														end
													end
													break;
												end
											end
										end
										v79 = 1252 - (721 + 530);
									end
									if (v79 ~= 1) then
									else
										if (v39 == (1271 - (945 + 326))) then
											local v109 = 0 - 0;
											local v110;
											while true do
												if (v109 ~= (0 + 0)) then
												else
													v110 = 700 - (271 + 429);
													while true do
														if (v110 == 1) then
															v42 = {};
															v43 = {v40,v41,nil,v42};
															v110 = 1088 - (461 + 625);
														end
														if (v110 == 2) then
															v39 = 1;
															break;
														end
														if (v110 ~= 0) then
														else
															local v121 = 0;
															while true do
																if (v121 == (1289 - (993 + 295))) then
																	v110 = 1 + 0;
																	break;
																end
																if (v121 ~= 0) then
																else
																	v40 = {};
																	v41 = {};
																	v121 = 1172 - (418 + 753);
																end
															end
														end
													end
													break;
												end
											end
										end
										break;
									end
								end
							end
							break;
						end
						if (v38 == 2) then
							v43 = nil;
							v44 = nil;
							v38 = 3;
						end
						if (v38 == (0 + 0)) then
							v39 = 0;
							v40 = nil;
							v38 = 1;
						end
						if (v38 == (1 + 0)) then
							v41 = nil;
							v42 = nil;
							v38 = 1 + 1;
						end
					end
				end
				v30 = nil;
				v18 = 7;
			end
			if (v18 == 4) then
				function v25()
					local v46 = 0 + 0;
					local v47;
					local v48;
					local v49;
					local v50;
					local v51;
					local v52;
					while true do
						if ((530 - (406 + 123)) == v46) then
							v49 = 1770 - (1749 + 20);
							v50 = (v21(v48, 1 + 0, 1342 - (1249 + 73)) * ((1 + 1) ^ (1177 - (466 + 99 + 580)))) + v47;
							v46 = 4 - (3 - 1);
						end
						if (v46 == (8 - 5)) then
							if (v51 == (1900 - ((171 - (30 + 35)) + 1794))) then
								if (v50 == (0 + 0 + 0)) then
									return v52 * (0 + 0);
								else
									v51 = 2 - 1;
									v49 = 0 - 0;
								end
							elseif (v51 == 2047) then
								return ((v50 == (114 - (4 + 110))) and (v52 * ((585 - ((1314 - (1043 + 214)) + 527)) / (1427 - (41 + 1386))))) or (v52 * NaN);
							end
							return v8(v52, v51 - (1126 - (17 + 86))) * (v49 + (v50 / ((2 + 0) ^ (115 - 63))));
						end
						if (v46 == (0 - 0)) then
							v47 = v24();
							v48 = v24();
							v46 = 167 - (122 + 44);
						end
						if (((7 - 5) - 0) == v46) then
							v51 = v21(v48, 21, 31);
							v52 = ((v21(v48, 105 - 73) == ((1213 - (323 + 889)) + 0)) and -1) or 1;
							v46 = 3;
						end
					end
				end
				v26 = nil;
				function v26(v53)
					local v54;
					if not v53 then
						local v72 = 0 - 0;
						while true do
							if (v72 == (580 - (361 + 219))) then
								v53 = v24();
								if (v53 == (320 - (34 + 19 + 267))) then
									return "";
								end
								break;
							end
						end
					end
					v54 = v3(v16, v19, (v19 + v53) - (1 + 0));
					v19 = v19 + v53;
					local v55 = {};
					for v68 = 1 + 0, #v54 do
						v55[v68] = v2(v1(v3(v54, v68, v68)));
					end
					return v6(v55);
				end
				v18 = 5;
			end
			if (v18 == 2) then
				function v22()
					local v56 = 850 - (20 + 830);
					local v57;
					while true do
						if (v56 == (0 + 0)) then
							v57 = v1(v16, v19, v19);
							v19 = v19 + (127 - (116 + (21 - 11)));
							v56 = 1 + 0;
						end
						if (v56 == (739 - (542 + 196))) then
							return v57;
						end
					end
				end
				v23 = nil;
				function v23()
					local v58, v59 = v1(v16, v19, v19 + 1 + 1);
					v19 = v19 + 1 + 1;
					return (v59 * (674 - 418)) + v58;
				end
				v18 = 3;
			end
			if (v18 == 0) then
				v19 = 1;
				v20 = nil;
				v16 = v4(v3(v16, 5), "..", function(v60)
					if (v1(v60, 2) == 79) then
						local v73 = 0;
						while true do
							if (v73 == 0) then
								v20 = v0(v3(v60, 1, 1));
								return "";
							end
						end
					else
						local v74 = 0;
						local v75;
						while true do
							if (v74 == 0) then
								v75 = v2(v0(v60, 16));
								if v20 then
									local v100 = 0;
									local v101;
									while true do
										if (v100 == 1) then
											return v101;
										end
										if (v100 == 0) then
											v101 = v5(v75, v20);
											v20 = nil;
											v100 = 1;
										end
									end
								else
									return v75;
								end
								break;
							end
						end
					end
				end);
				v18 = 1;
			end
			if (v18 == 7) then
				function v30(v61, v62, v63)
					local v64 = 0;
					local v65;
					local v66;
					local v67;
					while true do
						if (v64 == 1) then
							v67 = v61[3];
							return function(...)
								local v80 = 1;
								local v81 = -1;
								local v82 = {...};
								local v83 = v12("#", ...) - 1;
								local function v84()
									local v85 = v65;
									local v86 = v66;
									local v87 = v67;
									local v88 = v28;
									local v89 = {};
									local v90 = {};
									local v91 = {};
									for v95 = 0 - 0, v83 do
										if ((v95 >= v87) or ((6348 - ((1843 - (373 + 344)) + 425)) >= (5298 - (118 + 287)))) then
											v89[v95 - v87] = v82[v95 + (3 - 2)];
										else
											v91[v95] = v82[v95 + 1];
										end
									end
									local v92 = (v83 - v87) + 1;
									local v93;
									local v94;
									while true do
										local v96 = 1121 - (118 + 1003);
										local v97;
										while true do
											if ((v96 == (0 - 0)) or ((928 - (65 + 77 + 235)) > 2068)) then
												v97 = 0 - 0;
												while true do
													if (((460 + 1654) > 944) and (v97 == (977 - (553 + 424)))) then
														v93 = v85[v80];
														v94 = v93[1 - 0];
														v97 = 1;
													end
													if ((v97 == (1 + 0)) or ((2244 + 18) >= (1803 + 1293))) then
														if ((v94 <= (6 + 8)) or ((1288 + 967) >= (7667 - 4130))) then
															if ((v94 <= (16 - 10)) or ((8590 - 4753) < (380 + 926))) then
																if (((14256 - 11306) == (3703 - (239 + 514))) and (v94 <= (1 + 1))) then
																	if ((v94 <= (1329 - (797 + 532))) or ((3432 + 342 + 949) < (1113 + 2185))) then
																		local v126 = 0 - 0;
																		local v127;
																		local v128;
																		while true do
																			if ((1136 >= (1356 - (373 + 829))) and (v126 == (731 - (476 + 255)))) then
																				v127 = 1130 - (369 + 761);
																				v128 = nil;
																				v126 = 1;
																			end
																			if ((v126 == 1) or ((157 + 114) > (8624 - 3876))) then
																				while true do
																					if (((8982 - 4242) >= (3390 - (64 + 174))) and (v127 == (0 - 0))) then
																						v128 = v93[2];
																						v91[v128] = v91[v128](v13(v91, v128 + 1 + 0, v93[3]));
																						break;
																					end
																				end
																				break;
																			end
																		end
																	elseif ((v94 > (1 - 0)) or ((2914 - (144 + 192)) >= ((6101 - 2495) - (42 + 174)))) then
																		local v138 = (1099 - (35 + 1064)) + 0;
																		local v139;
																		local v140;
																		while true do
																			if ((41 <= (1376 + 285)) and (v138 == 0)) then
																				v139 = 0 + 0;
																				v140 = nil;
																				v138 = 1 + 0;
																			end
																			if (((2105 - (363 + 1141)) < 3560) and (v138 == 1)) then
																				while true do
																					if ((235 < 687) and (v139 == ((3380 - 1800) - (1183 + 397)))) then
																						v140 = v93[2];
																						v91[v140](v91[v140 + (2 - 1)]);
																						break;
																					end
																				end
																				break;
																			end
																		end
																	else
																		local v141 = 0 + 0;
																		local v142;
																		local v143;
																		local v144;
																		local v145;
																		while true do
																			if (((3401 + 1148) > (3128 - (1913 + 62))) and (0 == v141)) then
																				v142 = 0;
																				v143 = nil;
																				v141 = 1 + 0;
																			end
																			if ((v141 == 1) or ((12373 - (31 + 7668)) < (6605 - ((1801 - (298 + 938)) + 1368)))) then
																				v144 = nil;
																				v145 = nil;
																				v141 = 7 - (1264 - (233 + 1026));
																			end
																			if ((3668 < (6222 - (1477 + 184))) and (v141 == ((1668 - (636 + 1030)) - 0))) then
																				while true do
																					if ((v142 == 1) or ((424 + 31) == (4461 - (564 + 292)))) then
																						v145 = nil;
																						while true do
																							if ((v143 == (0 - 0)) or ((8026 - 5363) == (3616 - (244 + 60)))) then
																								local v273 = 0 + 0;
																								local v274;
																								while true do
																									if ((4277 <= (4951 - (41 + 435))) and (v273 == 0)) then
																										v274 = 0;
																										while true do
																											if ((v274 == 0) or (870 == ((1120 + 1070) - (938 + 63)))) then
																												v144 = v93[2 + 0];
																												v145 = v91[v93[1128 - (936 + 189)]];
																												v274 = 1 + 0;
																											end
																											if (((3166 - (1565 + 48)) <= (1936 + 1197)) and (v274 == (1139 - (782 + 356)))) then
																												v143 = 1;
																												break;
																											end
																										end
																										break;
																									end
																								end
																							end
																							if ((v143 == (268 - (176 + 91))) or ((5827 - 3590) >= (5174 - 1663))) then
																								v91[v144 + (1093 - (975 + 117))] = v145;
																								v91[v144] = v145[v93[4]];
																								break;
																							end
																						end
																						break;
																					end
																					if ((v142 == (1875 - (157 + 1718))) or ((1075 + 249) > (10720 - 7700))) then
																						v143 = 0 - 0;
																						v144 = nil;
																						v142 = (996 + 23) - (697 + 321);
																					end
																				end
																				break;
																			end
																		end
																	end
																elseif ((v94 <= ((3 + 7) - 6)) or (((429 + 5909) - 3346) == ((4557 - (55 + 166)) - 2455))) then
																	if ((3106 > (594 + 932)) and (v94 > (5 - 2))) then
																		local v146 = 0 - (0 + 0);
																		local v147;
																		while true do
																			if (((4250 - (322 + 905)) < (4481 - (602 + 9))) and (0 == v146)) then
																				v147 = v93[1191 - (449 + 740)];
																				do
																					return v13(v91, v147, v81);
																				end
																				break;
																			end
																		end
																	else
																		v91[v93[874 - (826 + 5 + 41)]] = {};
																	end
																elseif (((1090 - (245 + 702)) > 74) and (v94 > (15 - 10))) then
																	v91[v93[2]] = v93[1 + 2];
																else
																	v91[v93[2]] = v93[1901 - (260 + 1638)] ~= (440 - (382 + (221 - 163)));
																end
															elseif (((57 - 39) < 2112) and (v94 <= (9 + 1))) then
																if ((1097 <= (3364 - 1736)) and (v94 <= 8)) then
																	if (((13763 - 9133) == (5835 - (902 + 303))) and (v94 > 7)) then
																		local v152 = 0 - 0;
																		local v153;
																		local v154;
																		local v155;
																		local v156;
																		while true do
																			if (((8526 - 4986) > 2683) and (v152 == 0)) then
																				local v215 = 0 + 0;
																				while true do
																					if (((6484 - (1121 + 569)) >= (3489 - (22 + 192))) and (v215 == (683 - (483 + 200)))) then
																						v153 = v93[1465 - (1404 + 59)];
																						v154, v155 = v88(v91[v153](v13(v91, v153 + (2 - 1), v93[3])));
																						v215 = 1;
																					end
																					if (((1993 - 509) == (2249 - (468 + 297))) and ((563 - (334 + 228)) == v215)) then
																						v152 = 3 - 2;
																						break;
																					end
																				end
																			end
																			if ((((3615 - (36 + 261)) - 1886) < (6447 - 2892)) and (v152 == (1 + 1))) then
																				for v225 = v153, v81 do
																					local v226 = 0 - 0;
																					local v227;
																					while true do
																						if ((v226 == (236 - (141 + 95))) or (1065 > 3578)) then
																							v227 = 0;
																							while true do
																								if (((0 + 0) == v227) or (((13710 - (34 + 1334)) - 7547) < (3382 - 1975))) then
																									v156 = v156 + 1 + 0;
																									v91[v225] = v154[v156];
																									break;
																								end
																							end
																							break;
																						end
																					end
																				end
																				break;
																			end
																			if ((1853 < (13186 - 8373)) and (v152 == (1 + 0))) then
																				local v216 = 0 + 0;
																				while true do
																					if ((((1 + 0) - 0) == v216) or ((1664 + 1157) < (2594 - (92 + 71)))) then
																						v152 = 1 + 1 + 0;
																						break;
																					end
																					if ((((1283 - (1035 + 248)) - 0) == v216) or ((2895 - (20 + 1)) < (2946 - (574 + 191)))) then
																						v81 = (v155 + v153) - (1 + 0);
																						v156 = 0;
																						v216 = 2 - 1;
																					end
																				end
																			end
																		end
																	else
																		v91[v93[2 + 0]][v93[3]] = v91[v93[853 - (254 + 595)]];
																	end
																elseif ((v94 == (135 - (55 + 71))) or ((3541 - 852) <= (2133 - (573 + 1217)))) then
																	v91[v93[5 - 3]]();
																else
																	do
																		return;
																	end
																end
															elseif ((v94 <= (1 + 11)) or (1869 == (3236 - 1227))) then
																if ((v94 > (950 - (714 + 225))) or ((10362 - 6816) < (3236 - 914))) then
																	local v159 = 0 + 0;
																	local v160;
																	local v161;
																	local v162;
																	while true do
																		if ((v159 == (0 + 0)) or ((3014 - 932) == 4773)) then
																			v160 = 0;
																			v161 = nil;
																			v159 = 807 - (118 + 688);
																		end
																		if (((3292 - (25 + 23)) > (205 + 850)) and (v159 == 1)) then
																			v162 = nil;
																			while true do
																				if ((v160 == 0) or ((5199 - (927 + 959)) <= (5993 - 4215))) then
																					local v238 = 732 - ((335 - (134 + 185)) + 716);
																					while true do
																						if ((v238 == ((1133 - (549 + 584)) - 0)) or (((2203 - (314 + 371)) - (11 + 86)) >= (5131 - 3027))) then
																							v161 = v93[287 - (175 + 110)];
																							v162 = {};
																							v238 = 2 - 1;
																						end
																						if (((8937 - 7125) <= 3249) and (v238 == (1797 - (503 + 1293)))) then
																							v160 = 2 - 1;
																							break;
																						end
																					end
																				end
																				if (((1174 + 449) <= (3018 - (810 + 251))) and ((1 + 0) == v160)) then
																					for v251 = 1 + 0, #v90 do
																						local v252 = 0 + 0;
																						local v253;
																						local v254;
																						local v255;
																						while true do
																							if (((4945 - (43 + (1682 - 1192))) == ((6113 - (478 + 490)) - (711 + 22))) and (v252 == (3 - (2 + 0)))) then
																								v255 = nil;
																								while true do
																									if (((2609 - (240 + 619)) >= ((1376 - (786 + 386)) + 638)) and ((0 - 0) == v253)) then
																										v254 = 0;
																										v255 = nil;
																										v253 = 1 + (0 - 0);
																									end
																									if (((6116 - (1344 + 400)) > 1850) and (v253 == (406 - (255 + 150)))) then
																										while true do
																											if (((183 + 49) < 821) and (v254 == ((1379 - (1055 + 324)) + 0))) then
																												v255 = v90[v251];
																												for v317 = 0, #v255 do
																													local v318 = 0;
																													local v319;
																													local v320;
																													local v321;
																													while true do
																														if ((518 < (3853 - 2951)) and (v318 == (0 - 0))) then
																															v319 = v255[v317];
																															v320 = v319[1740 - (404 + 1335)];
																															v318 = 407 - (183 + 223);
																														end
																														if (((3642 - 648) > 858) and (v318 == (1 + (1340 - (1093 + 247))))) then
																															v321 = v319[2];
																															if (((v320 == v91) and (v321 >= v161)) or (3755 <= 915)) then
																																local v335 = 0 + 0;
																																local v336;
																																local v337;
																																while true do
																																	if (((4283 - (10 + 327)) > (2607 + 1136)) and (v335 == (338 - (118 + 220)))) then
																																		v336 = 0 + 0;
																																		v337 = nil;
																																		v335 = 1;
																																	end
																																	if ((((400 + 50) - (108 + 36 + 305)) == v335) or (((2382 - 1782) + 735) >= (13977 - 10671))) then
																																		while true do
																																			if ((4844 > (3746 - ((2412 - 1701) + 782))) and (0 == v336)) then
																																				v337 = 0 - 0;
																																				while true do
																																					if ((452 == 452) and (0 == v337)) then
																																						v162[v321] = v320[v321];
																																						v319[470 - (270 + 199)] = v162;
																																						break;
																																					end
																																				end
																																				break;
																																			end
																																		end
																																		break;
																																	end
																																end
																															end
																															break;
																														end
																													end
																												end
																												break;
																											end
																										end
																										break;
																									end
																								end
																								break;
																							end
																							if ((v252 == (0 + 0)) or ((6376 - ((1650 - 1070) + (3113 - 1874))) < 2087)) then
																								v253 = 0 - 0;
																								v254 = nil;
																								v252 = 1;
																							end
																						end
																					end
																					break;
																				end
																			end
																			break;
																		end
																	end
																else
																	v91[v93[2 + 0]] = v91[v93[1 + 2]];
																end
															elseif ((3874 == (1688 + 778 + 1408)) and (v94 == 13)) then
																local v165 = 0 - 0;
																local v166;
																local v167;
																local v168;
																local v169;
																while true do
																	if ((v165 == (0 + 0)) or (1938 > (6102 - (645 + 522)))) then
																		local v217 = 1790 - (1010 + 780);
																		while true do
																			if ((v217 == (0 + 0)) or (((78089 - 57819) - 16015) < 3423)) then
																				v166 = v93[5 - 3];
																				v167, v168 = v88(v91[v166]());
																				v217 = 1837 - (1045 + (2726 - 1935));
																			end
																			if (((3679 - (1678 + 547)) <= (3803 - 1312)) and (v217 == (506 - (351 + 154)))) then
																				v165 = (4027 - 2452) - (1281 + (981 - (364 + 324)));
																				break;
																			end
																		end
																	end
																	if ((v165 == (267 - (28 + 238))) or ((9288 - 5131) <= (4362 - (1381 + 178)))) then
																		local v218 = 0 + 0;
																		while true do
																			if (((3914 + 939) >= 2982) and (v218 == (1 + 0))) then
																				v165 = 6 - (10 - 6);
																				break;
																			end
																			if (((2142 + 1992) > ((9183 - 5356) - (381 + 89))) and (v218 == (0 + 0 + 0))) then
																				v81 = (v168 + v166) - (1 + 0);
																				v169 = 0 - 0;
																				v218 = 1;
																			end
																		end
																	end
																	if (((1158 - (1074 + 82)) == v165) or (((31328 - 23841) - 4070) < (4318 - (214 + 1570)))) then
																		for v228 = v166, v81 do
																			local v229 = 1455 - (990 + 465);
																			local v230;
																			local v231;
																			while true do
																				if ((((1 - 0) + 0) == v229) or ((1185 + 1537) <= (160 + 4))) then
																					while true do
																						if ((v230 == ((0 - 0) - 0)) or (2408 < (3835 - (1668 + 58)))) then
																							v231 = 626 - (512 + 114);
																							while true do
																								if ((v231 == 0) or ((85 - 52) == (3007 - 1552))) then
																									v169 = v169 + (3 - 2);
																									v91[v228] = v167[v169];
																									break;
																								end
																							end
																							break;
																						end
																					end
																					break;
																				end
																				if ((v229 == (0 + 0)) or (((1351 - (1249 + 19)) + 360) >= (3491 + 524))) then
																					v230 = 0 - 0;
																					v231 = nil;
																					v229 = 1995 - (109 + 1885);
																				end
																			end
																		end
																		break;
																	end
																end
															else
																local v170 = 1469 - (1146 + 123 + 200);
																local v171;
																while true do
																	if ((((25231 - 18749) - (4186 - (686 + 400))) > ((770 + 211) - (98 + 717))) and (v170 == ((1055 - (73 + 156)) - (802 + 24)))) then
																		local v219 = 0 - 0;
																		while true do
																			if ((v219 == (0 - (0 + 0))) or (280 == (452 + 2607))) then
																				v171 = v93[(813 - (721 + 90)) + 0];
																				v81 = (v171 + v92) - (1 + 0 + 0);
																				v219 = 1 + 0;
																			end
																			if (((5232 - 3351) > 1293) and (v219 == (3 - 2))) then
																				v170 = 1 + 0;
																				break;
																			end
																		end
																	end
																	if (((960 + (4535 - 3138)) == 2357) and (v170 == (1 + 0))) then
																		for v232 = v171, v81 do
																			local v233 = 0;
																			local v234;
																			while true do
																				if ((((560 - (224 + 246)) + (53 - 20)) == (58 + (119 - 54))) and ((1433 - (797 + 636)) == v233)) then
																					v234 = v89[v232 - v171];
																					v91[v232] = v234;
																					break;
																				end
																			end
																		end
																		break;
																	end
																end
															end
														elseif ((v94 <= (106 - 84)) or ((2675 - (1427 + 192)) >= (1176 + 2216))) then
															if ((v94 <= 18) or (((456 + 2053) - (34 + 1394)) < 1075)) then
																if ((v94 <= (15 + 1)) or ((476 + 573) >= (3256 + 1176))) then
																	if ((v94 == 15) or ((5094 - (192 + 134)) <= (2122 - (316 + 960)))) then
																		v91[v93[2 + 0]] = v91[v93[3 + 0]][v93[(7 - 3) + 0]];
																	else
																		local v174 = (0 - 0) - 0;
																		local v175;
																		local v176;
																		local v177;
																		local v178;
																		local v179;
																		while true do
																			if ((v174 == 2) or ((3909 - (83 + 468)) <= (3226 - (1202 + (1117 - (203 + 310)))))) then
																				v179 = nil;
																				while true do
																					if ((v175 == (9 - 7)) or ((6222 - 2483) <= (8320 - (7308 - (1238 + 755))))) then
																						for v258 = v176, v81 do
																							local v259 = 325 - (45 + 280);
																							local v260;
																							while true do
																								if ((v259 == (0 + 0)) or ((102 + 1348 + 209) >= 2134)) then
																									v260 = 0 + 0;
																									while true do
																										if ((v260 == (0 + 0)) or ((574 + 2686) < 2355)) then
																											v179 = v179 + 1;
																											v91[v258] = v177[v179];
																											break;
																										end
																									end
																									break;
																								end
																							end
																						end
																						break;
																					end
																					if ((v175 == (1 - 0)) or (669 == (6134 - ((1874 - (709 + 825)) + 1571)))) then
																						v81 = (v178 + v176) - (1 + 0);
																						v179 = 1772 - (1733 + 39);
																						v175 = 5 - 3;
																					end
																					if ((v175 == (1034 - (125 + 909))) or ((3640 - (1096 + 852)) < (264 + 324))) then
																						local v241 = 0 - 0;
																						while true do
																							if ((v241 == 1) or ((4653 + 144) < (4163 - (409 + 103)))) then
																								v175 = 237 - (46 + 190);
																								break;
																							end
																							if (((95 - (51 + 44)) == v241) or ((1179 + 2998) > ((11364 - 5197) - (1114 + 203)))) then
																								v176 = v93[2];
																								v177, v178 = v88(v91[v176](v91[v176 + 1]));
																								v241 = 1;
																							end
																						end
																					end
																				end
																				break;
																			end
																			if ((v174 == (726 - (228 + 498))) or ((87 + 313) > (614 + 497))) then
																				v175 = 663 - (174 + 489);
																				v176 = nil;
																				v174 = 2 - 1;
																			end
																			if (((4956 - (830 + (1565 - 490))) > (1529 - (303 + 221))) and (v174 == (1270 - (231 + 1038)))) then
																				v177 = nil;
																				v178 = nil;
																				v174 = 2;
																			end
																		end
																	end
																elseif (((3078 + 615) <= (5544 - ((1035 - (196 + 668)) + 991))) and (v94 > ((276 - 206) - 53))) then
																	v80 = v93[7 - 4];
																else
																	local v181 = 0 - 0;
																	local v182;
																	local v183;
																	local v184;
																	local v185;
																	while true do
																		if ((v181 == 0) or ((2627 + 655) > (14371 - 10271))) then
																			v182 = 0 - 0;
																			v183 = nil;
																			v181 = 1 - (0 - 0);
																		end
																		if ((v181 == (835 - (171 + 662))) or (3580 < 2844)) then
																			while true do
																				if (((274 - (278 - (4 + 89))) < (5738 - (111 + 1137))) and (v182 == (158 - (91 + 67)))) then
																					local v242 = 0 - (0 - 0);
																					while true do
																						if ((v242 == (1 + 0)) or (4983 < (2331 - (423 + 100)))) then
																							v182 = 1;
																							break;
																						end
																						if (((27 + 1385 + 2417) > (10435 - 6666)) and (v242 == (0 + 0))) then
																							v183 = 771 - (326 + 445);
																							v184 = nil;
																							v242 = 4 - 3;
																						end
																					end
																				end
																				if (((3307 - 1822) <= (6778 - 3874)) and (1 == v182)) then
																					v185 = nil;
																					while true do
																						if ((4269 == (4980 - (530 + 181))) and (v183 == (881 - (614 + 267)))) then
																							local v280 = 32 - (19 + 13);
																							while true do
																								if (((629 - 242) <= (6482 - 3700)) and (v280 == (0 - 0))) then
																									local v285 = 0 + 0;
																									while true do
																										if ((v285 == (1 - 0)) or ((3937 - 2038) <= (2729 - ((5679 - 4386) + 519)))) then
																											v280 = 1 - 0;
																											break;
																										end
																										if ((v285 == 0) or (4312 <= (2287 - 1411))) then
																											v184 = v93[2];
																											v185 = v91[v184];
																											v285 = 1 - 0;
																										end
																									end
																								end
																								if (((9624 - 7392) <= 2596) and (v280 == (2 - 1))) then
																									v183 = 1 + 0;
																									break;
																								end
																							end
																						end
																						if (((168 + 260 + 1667) < 3686) and (v183 == (2 - 1))) then
																							for v284 = v184 + 1 + 0, v81 do
																								v7(v185, v91[v284]);
																							end
																							break;
																						end
																					end
																					break;
																				end
																			end
																			break;
																		end
																		if ((v181 == (1 + 0)) or (1595 >= (2796 + 1678))) then
																			v184 = nil;
																			v185 = nil;
																			v181 = (2584 - (35 + 1451)) - (709 + 387);
																		end
																	end
																end
															elseif ((v94 <= (1878 - (673 + 1185))) or ((13395 - 8776) < (9254 - 6372))) then
																if ((v94 > (30 - (1464 - (28 + 1425)))) or ((211 + 83) >= (3610 + 1221))) then
																	local v186 = 0 - 0;
																	local v187;
																	local v188;
																	while true do
																		if (((499 + (3523 - (941 + 1052))) <= (6148 - 3064)) and (v186 == 0)) then
																			v187 = 0 - 0;
																			v188 = nil;
																			v186 = 1;
																		end
																		if (((1881 - (446 + 1376 + 58)) == v186) or (2037 == (3703 - (1040 + 243)))) then
																			while true do
																				if (((13305 - 8847) > (5751 - (559 + 1288))) and (v187 == (1931 - ((2123 - (822 + 692)) + 1322)))) then
																					v188 = v93[456 - (13 + 441)];
																					v91[v188] = v91[v188](v91[v188 + (3 - 2)]);
																					break;
																				end
																			end
																			break;
																		end
																	end
																elseif (((1142 - 706) >= (612 - 489)) and (v93[2 - 0] == v91[v93[1 + 3]])) then
																	v80 = v80 + (3 - 2);
																else
																	v80 = v93[2 + 1];
																end
															elseif (((220 + 280) < (5389 - 3573)) and (v94 > (12 + 9))) then
																v91[v93[2]] = v62[v93[(2 + 2) - 1]];
															else
																v91[v93[2 + 0]] = v30(v86[v93[2 + 1]], nil, v63);
															end
														elseif ((3574 == 3574) and (v94 <= (19 + 7))) then
															if (((186 + 35) < 390) and (v94 <= 24)) then
																if ((v94 > ((320 - (45 + 252)) + 0)) or ((2646 - (153 + 280)) <= ((4060 + 43) - 2682))) then
																	if (((2746 + 312) < (1919 + 2941)) and (v91[v93[2]] == v93[3 + 1])) then
																		v80 = v80 + 1 + 0;
																	else
																		v80 = v93[3 + 0];
																	end
																else
																	local v192 = 0 - (0 + 0);
																	local v193;
																	while true do
																		if ((v192 == 0) or ((802 + 494) >= (5113 - (89 + (1406 - 828))))) then
																			v193 = v93[2 + 0];
																			v91[v193] = v91[v193](v13(v91, v193 + (1 - 0), v81));
																			break;
																		end
																	end
																end
															elseif ((v94 > ((1507 - (114 + 319)) - (572 + 477))) or ((188 + 1205) > (2694 + 1795))) then
																for v209 = v93[1 + 1], v93[3] do
																	v91[v209] = nil;
																end
															else
																v91[v93[88 - ((120 - 36) + 2)]] = v63[v93[4 - 1]];
															end
														elseif ((v94 <= (21 + 7)) or ((5266 - (497 + (442 - 97))) < (1 + 26))) then
															if ((v94 > 27) or (1997 > (645 + 3170))) then
																local v196 = 1333 - (605 + 728);
																local v197;
																local v198;
																while true do
																	if ((3465 > (1365 + 548)) and (v196 == (0 - 0))) then
																		v197 = 0 + 0;
																		v198 = nil;
																		v196 = 1 + 0;
																	end
																	if ((((4035 - 1326) - 1976) < (1640 + (374 - 195))) and (v196 == 1)) then
																		while true do
																			if (((0 - 0) == v197) or ((3319 + 1076) == 4755)) then
																				v198 = v93[491 - (457 + 32)];
																				v91[v198](v13(v91, v198 + 1 + 0, v93[1405 - (832 + 570)]));
																				break;
																			end
																		end
																		break;
																	end
																end
															else
																local v199 = 0 + (1963 - (556 + 1407));
																local v200;
																local v201;
																local v202;
																local v203;
																while true do
																	if ((v199 == 0) or ((990 + 2803) < (8383 - 6014))) then
																		v200 = 0;
																		v201 = nil;
																		v199 = 1 + 0;
																	end
																	if ((v199 == (797 - (588 + 208))) or ((11007 - 6923) == 265)) then
																		local v222 = 1800 - (884 + (2122 - (741 + 465)));
																		while true do
																			if ((4358 == (9123 - 4765)) and (v222 == (0 + 0))) then
																				v202 = nil;
																				v203 = nil;
																				v222 = 654 - (232 + 421);
																			end
																			if ((v222 == (1890 - (1569 + 320))) or (3138 < (244 + 749))) then
																				v199 = 1 + 1;
																				break;
																			end
																		end
																	end
																	if ((3330 > (7827 - 5504)) and (v199 == 2)) then
																		while true do
																			if ((v200 == (606 - ((781 - (170 + 295)) + 289))) or (((5001 + 4490) - 5865) == (185 + 3804))) then
																				local v246 = (1335 + 118) - (666 + 787);
																				local v247;
																				while true do
																					if ((v246 == 0) or (916 == 2671)) then
																						v247 = 425 - ((886 - 526) + 65);
																						while true do
																							if (((212 + 43 + 17) == 272) and (v247 == (255 - (51 + 28 + 175)))) then
																								v200 = 2 - 0;
																								break;
																							end
																							if (((3316 + 933) <= (2741 + 2098)) and (v247 == (0 - 0))) then
																								v203 = {};
																								v202 = v10({}, {__index=function(v290, v291)
																									local v292 = 0 - 0;
																									local v293;
																									while true do
																										if (((3676 - (503 + 396)) < 3200) and (v292 == (181 - ((1322 - (957 + 273)) + 89)))) then
																											local v307 = 0 + 0;
																											while true do
																												if (((183 - (36 + 52)) < ((3825 - 2821) + 953)) and (v307 == (0 + 0))) then
																													v293 = v203[v291];
																													return v293[1][v293[(18 - 11) - 5]];
																												end
																											end
																										end
																									end
																								end,__newindex=function(v294, v295, v296)
																									local v297 = 0;
																									local v298;
																									while true do
																										if (((113 + 713) < (3914 - 2197)) and (v297 == (0 + 0))) then
																											v298 = v203[v295];
																											v298[2 - 1][v298[2]] = v296;
																											break;
																										end
																									end
																								end});
																								v247 = 1 + 0;
																							end
																						end
																						break;
																					end
																				end
																			end
																			if (((4342 - 2916) >= (138 + 967)) and (v200 == (2 - 0))) then
																				for v261 = 1, v93[1248 - ((2401 - 1916) + (2539 - (389 + 1391)))] do
																					local v262 = 0 - 0;
																					local v263;
																					local v264;
																					local v265;
																					while true do
																						if (((3943 - (442 + 747)) <= (4514 - (832 + 303))) and (v262 == (946 - (88 + 858)))) then
																							v263 = 0 + 0;
																							v264 = nil;
																							v262 = 1 + 0;
																						end
																						if ((v262 == (1 + 0 + 0)) or ((4716 - (766 + 23)) == 1413)) then
																							v265 = nil;
																							while true do
																								if ((v263 == (0 - 0)) or ((1578 - 424) <= (2076 - 1288))) then
																									local v299 = 0 - 0;
																									while true do
																										if ((0 == v299) or (1643 > (4452 - (1036 + 37)))) then
																											v264 = 0 + 0;
																											v265 = nil;
																											v299 = 1;
																										end
																										if (((1 + 0) == v299) or ((5458 - 2655) > (3579 + (2208 - 1238)))) then
																											v263 = 1481 - (641 + 839);
																											break;
																										end
																									end
																								end
																								if ((v263 == (914 - (910 + 3))) or ((560 - 340) >= (4706 - (1466 + 218)))) then
																									while true do
																										if (((1297 + 1525) == (3970 - (556 + 592))) and (v264 == 0)) then
																											local v310 = 0 + 0;
																											local v311;
																											while true do
																												if ((v310 == (808 - (329 + 479))) or ((2012 - (783 + 168)) == (6232 - 4375))) then
																													v311 = 854 - (174 + 680);
																													while true do
																														if (((9483 - 6723) > ((2781 + 46) - 1463)) and (v311 == (1 + 0))) then
																															v264 = (1051 - (309 + 2)) - (396 + 343);
																															break;
																														end
																														if (((0 + 0) == v311) or (((19589 - 13210) - (29 + (2660 - (1090 + 122)))) <= (4984 - (135 + 1254)))) then
																															v80 = v80 + (3 - 2);
																															v265 = v85[v80];
																															v311 = 4 - 3;
																														end
																													end
																													break;
																												end
																											end
																										end
																										if ((v264 == (1 + 0)) or ((5379 - (389 + 1138)) == (867 - (102 + 472)))) then
																											if ((v265[1 + 0] == 11) or (1559 == (2545 + 2043))) then
																												v203[v261 - (1 + 0 + 0)] = {v91,v265[(4 + 1) - 2]};
																											else
																												v203[v261 - 1] = {v62,v265[1467 - (157 + 1307)]};
																											end
																											v90[#v90 + (1860 - ((1939 - (628 + 490)) + 1038))] = v203;
																											break;
																										end
																									end
																									break;
																								end
																							end
																							break;
																						end
																					end
																				end
																				v91[v93[4 - 2]] = v30(v201, v202, v63);
																				break;
																			end
																			if ((v200 == (0 + 0)) or ((7964 - 3480) == (294 + 494))) then
																				local v249 = 0;
																				while true do
																					if (((11322 - (1212 + 5542)) >= (4933 - (834 + 192))) and ((1 + (0 - 0)) == v249)) then
																						v200 = 1 + 0;
																						break;
																					end
																					if ((1246 < (75 + (15515 - 12120))) and ((0 - 0) == v249)) then
																						v201 = v86[v93[307 - ((1074 - (431 + 343)) + 4)]];
																						v202 = nil;
																						v249 = 1;
																					end
																				end
																			end
																		end
																		break;
																	end
																end
															end
														elseif (((1087 + 2981) >= (2544 - 1572)) and (v94 > ((789 - 398) - (112 + 250)))) then
															v91[v93[2]][v93[(5 - 3) + 1]] = v93[9 - 5];
														else
															local v206 = 0 + 0;
															local v207;
															local v208;
															while true do
																if (((255 + 238) < (2301 + 611 + 126 + 855)) and (v206 == 1)) then
																	while true do
																		if ((v207 == (0 + 0)) or ((1095 + 378) >= (4746 - (1001 + (2108 - (556 + 1139)))))) then
																			v208 = v93[2];
																			do
																				return v91[v208](v13(v91, v208 + (2 - 1), v81));
																			end
																			break;
																		end
																	end
																	break;
																end
																if ((v206 == (882 - (244 + 638))) or ((4744 - ((642 - (6 + 9)) + 66)) <= (212 + 945))) then
																	v207 = (0 + 0) - 0;
																	v208 = nil;
																	v206 = 603 - (512 + 90);
																end
															end
														end
														v80 = v80 + ((2076 - (28 + 141)) - (645 + 1020 + 241));
														break;
													end
												end
												break;
											end
										end
									end
								end
								A, B = v28(v11(v84));
								if not A[1] then
									local v98 = 0;
									local v99;
									while true do
										if (v98 == 0) then
											v99 = v61[4][v80] or "?";
											error("Script error at [" .. v99 .. "]:" .. A[2]);
											break;
										end
									end
								else
									return v13(A, 2, B);
								end
							end;
						end
						if (v64 == 0) then
							v65 = v61[1];
							v66 = v61[2];
							v64 = 1;
						end
					end
				end
				return v30(v29(), {}, v17)(...);
			end
		end
	end
	vv9(), ...);
end
