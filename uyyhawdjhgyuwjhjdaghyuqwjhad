--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.6) ~  Much Love, Ferib 

]]--

do
	local v0 = tonumber;
	local v1 = string.byte;
	local v2 = string.char;
	local v3 = string.sub;
	local v4 = string.gsub;
	local v5 = string.rep;
	local v6 = table.concat;
	local v7 = table.insert;
	local v8 = math.ldexp;
	local v9 = getfenv or function()
		return _ENV;
	end;
	local v10 = setmetatable;
	local v11 = pcall;
	local v12 = select;
	local v13 = unpack or table.unpack;
	local v14 = tonumber;
	local function v15(v16, v17, ...)
		local v18 = 0;
		local v19;
		local v20;
		local v21;
		local v22;
		local v23;
		local v24;
		local v25;
		local v26;
		local v27;
		local v28;
		local v29;
		local v30;
		while true do
			if (v18 == 5) then
				v27 = v24;
				v28 = nil;
				function v28(...)
					return {...}, v12("#", ...);
				end
				v18 = 6;
			end
			if (v18 == 2) then
				function v22()
					local v31 = 0 - 0;
					local v32;
					while true do
						if (v31 == (2 - 1)) then
							return v32;
						end
						if ((0 - 0) == v31) then
							v32 = v1(v16, v19, v19);
							v19 = v19 + (2 - (932 - (857 + 74)));
							v31 = 620 - (555 + (632 - (367 + 201)));
						end
					end
				end
				v23 = nil;
				function v23()
					local v33 = 927 - (214 + 713);
					local v34;
					local v35;
					while true do
						if (v33 == (0 + 0)) then
							v34, v35 = v1(v16, v19, v19 + 2);
							v19 = v19 + 1 + 1;
							v33 = 1066 - (68 + (1114 - (32 + 85)));
						end
						if (v33 == (1271 - (226 + 1044))) then
							return (v35 * (1133 - (282 + 595))) + v34;
						end
					end
				end
				v18 = 3;
			end
			if (v18 == 4) then
				function v25()
					local v36 = 0 - 0;
					local v37;
					local v38;
					local v39;
					local v40;
					local v41;
					local v42;
					while true do
						if (v36 == (3 + (0 - 0))) then
							if (v41 == (0 + 0)) then
								if (v40 == (957 - (892 + 65))) then
									return v42 * (0 - (0 - 0));
								else
									v41 = 1 - (859 - (814 + 45));
									v39 = 0 - 0;
								end
							elseif (v41 == ((15850 - 9417) - 4386)) then
								return ((v40 == 0) and (v42 * (((19 + 332) - (87 + 263)) / 0))) or (v42 * NaN);
							end
							return v8(v42, v41 - (3934 - 2911)) * (v39 + (v40 / (2 ^ (232 - (67 + 113)))));
						end
						if (v36 == (1 + 0)) then
							v39 = 1 + 0 + 0;
							v40 = (v21(v38, 2 - 1, 15 + 5) * ((7 - (890 - (261 + 624))) ^ 32)) + v37;
							v36 = 954 - (802 + 150);
						end
						if (v36 == (5 - 3)) then
							v41 = v21(v38, 37 - (28 - 12), 23 + 8);
							v42 = ((v21(v38, 1029 - (915 + 82)) == (773 - (201 + 571))) and -(2 - 1)) or (1 + 0);
							v36 = 3 - 0;
						end
						if (v36 == (1187 - ((2149 - (1020 + 60)) + 118))) then
							v37 = v24();
							v38 = v24();
							v36 = 2 - 1;
						end
					end
				end
				v26 = nil;
				function v26(v43)
					local v44 = 1423 - (630 + 793);
					local v45;
					local v46;
					while true do
						if (v44 == (0 - 0)) then
							v45 = nil;
							if not v43 then
								v43 = v24();
								if (v43 == (0 - 0)) then
									return "";
								end
							end
							v44 = 1;
						end
						if (v44 == 2) then
							v46 = {};
							for v79 = 1, #v45 do
								v46[v79] = v2(v1(v3(v45, v79, v79)));
							end
							v44 = 2 + 1;
						end
						if (v44 == ((769 - (745 + 21)) - 2)) then
							v45 = v3(v16, v19, (v19 + v43) - (1748 - (262 + 498 + (2715 - 1728))));
							v19 = v19 + v43;
							v44 = 2;
						end
						if (v44 == (1916 - (1789 + 124))) then
							return v6(v46);
						end
					end
				end
				v18 = 5;
			end
			if (v18 == 6) then
				v29 = nil;
				function v29()
					local v47 = 0;
					local v48;
					local v49;
					local v50;
					local v51;
					local v52;
					local v53;
					local v54;
					local v55;
					while true do
						if (v47 ~= (6 - 2)) then
						else
							while true do
								if (v48 == 3) then
									v55 = nil;
									while true do
										local v87 = 0 + 0;
										while true do
											if (v87 ~= (1636 - (1373 + 263))) then
											else
												local v104 = 0;
												while true do
													if (v104 == 1) then
														v87 = 1001 - (451 + 549);
														break;
													end
													if (v104 == (0 + 0)) then
														if (v49 ~= 2) then
														else
															local v112 = 0;
															local v113;
															while true do
																if (v112 == (0 - 0)) then
																	v113 = 0;
																	while true do
																		if (v113 ~= (1 - 0)) then
																		else
																			for v122 = 1, v24() do
																				local v123 = 0;
																				local v124;
																				while true do
																					if (v123 == 0) then
																						v124 = v22();
																						if (v21(v124, 1385 - (746 + 638), 1) ~= (0 + 0)) then
																						else
																							local v258 = 0 - 0;
																							local v259;
																							local v260;
																							local v261;
																							local v262;
																							while true do
																								if (v258 == (342 - (218 + 123))) then
																									local v293 = 1581 - (1535 + 46);
																									while true do
																										if (v293 ~= (1 + 0)) then
																										else
																											v258 = 1 + 1;
																											break;
																										end
																										if (v293 == 0) then
																											v261 = nil;
																											v262 = nil;
																											v293 = 561 - (306 + 254);
																										end
																									end
																								end
																								if (2 == v258) then
																									while true do
																										if (v259 == (1 + 1)) then
																											local v319 = 0;
																											while true do
																												if (v319 == 1) then
																													v259 = 3;
																													break;
																												end
																												if (0 ~= v319) then
																												else
																													local v342 = 0 - 0;
																													local v343;
																													while true do
																														if (v342 == (1467 - (899 + 568))) then
																															v343 = 0 + 0;
																															while true do
																																if (v343 ~= (0 - 0)) then
																																else
																																	if (v21(v261, 604 - (268 + 335), 291 - (60 + 230)) == (573 - (426 + 146))) then
																																		v262[2] = v55[v262[1 + 1]];
																																	end
																																	if (v21(v261, 1458 - (282 + 1174), 813 - (569 + 242)) ~= (2 - 1)) then
																																	else
																																		v262[3] = v55[v262[1 + 2]];
																																	end
																																	v343 = 1025 - (706 + 318);
																																end
																																if ((1252 - (721 + 530)) ~= v343) then
																																else
																																	v319 = 1;
																																	break;
																																end
																															end
																															break;
																														end
																													end
																												end
																											end
																										end
																										if (v259 == (1272 - (945 + 326))) then
																											local v320 = 0;
																											local v321;
																											while true do
																												if (v320 ~= 0) then
																												else
																													v321 = 0;
																													while true do
																														if (v321 == 0) then
																															local v354 = 0 - 0;
																															while true do
																																if (v354 ~= 0) then
																																else
																																	local v359 = 0;
																																	while true do
																																		if ((0 + 0) ~= v359) then
																																		else
																																			v262 = {v23(),v23(),nil,nil};
																																			if (v260 == 0) then
																																				local v368 = 0;
																																				while true do
																																					if (v368 == 0) then
																																						v262[3] = v23();
																																						v262[4 + 0] = v23();
																																						break;
																																					end
																																				end
																																			elseif (v260 == 1) then
																																				v262[3] = v24();
																																			elseif (v260 == 2) then
																																				v262[1503 - (1408 + 92)] = v24() - (2 ^ 16);
																																			elseif (v260 == (1089 - (461 + 625))) then
																																				local v373 = 1288 - (993 + 295);
																																				local v374;
																																				while true do
																																					if (v373 ~= 0) then
																																					else
																																						v374 = 0;
																																						while true do
																																							if (v374 == 0) then
																																								v262[3] = v24() - (2 ^ (1 + 15));
																																								v262[4] = v23();
																																								break;
																																							end
																																						end
																																						break;
																																					end
																																				end
																																			end
																																			v359 = 1;
																																		end
																																		if (v359 ~= (1172 - (418 + 753))) then
																																		else
																																			v354 = 1;
																																			break;
																																		end
																																	end
																																end
																																if (v354 == (1 + 0)) then
																																	v321 = 1;
																																	break;
																																end
																															end
																														end
																														if (v321 ~= 1) then
																														else
																															v259 = 1 + 1;
																															break;
																														end
																													end
																													break;
																												end
																											end
																										end
																										if (v259 == (1 + 2)) then
																											if (v21(v261, 1 + 2, 532 - (406 + 123)) == 1) then
																												v262[1773 - (1749 + 20)] = v55[v262[1 + 3]];
																											end
																											v50[v122] = v262;
																											break;
																										end
																										if (v259 ~= (1322 - (1249 + 73))) then
																										else
																											local v323 = 0;
																											local v324;
																											while true do
																												if (v323 ~= 0) then
																												else
																													v324 = 0;
																													while true do
																														if (v324 ~= 0) then
																														else
																															v260 = v21(v124, 1 + 1, 1148 - (466 + 679));
																															v261 = v21(v124, 4, 6);
																															v324 = 1;
																														end
																														if (v324 ~= (2 - 1)) then
																														else
																															v259 = 2 - 1;
																															break;
																														end
																													end
																													break;
																												end
																											end
																										end
																									end
																									break;
																								end
																								if (v258 == 0) then
																									local v294 = 0;
																									while true do
																										if ((1901 - (106 + 1794)) == v294) then
																											v258 = 1;
																											break;
																										end
																										if (v294 == (0 + 0)) then
																											v259 = 0;
																											v260 = nil;
																											v294 = 1 + 0;
																										end
																									end
																								end
																							end
																						end
																						break;
																					end
																				end
																			end
																			v49 = 8 - 5;
																			break;
																		end
																		if (v113 ~= 0) then
																		else
																			local v121 = 0 - 0;
																			while true do
																				if (1 ~= v121) then
																				else
																					v113 = 115 - (4 + 110);
																					break;
																				end
																				if (v121 == 0) then
																					for v222 = 1, v54 do
																						local v223 = 0;
																						local v224;
																						local v225;
																						local v226;
																						local v227;
																						while true do
																							if (v223 ~= 0) then
																							else
																								v224 = 584 - (57 + 527);
																								v225 = nil;
																								v223 = 1;
																							end
																							if (v223 == (1429 - (41 + 1386))) then
																								while true do
																									if (v224 ~= 0) then
																									else
																										local v297 = 0;
																										while true do
																											if (v297 ~= (103 - (17 + 86))) then
																											else
																												v225 = 0 + 0;
																												v226 = nil;
																												v297 = 1 - 0;
																											end
																											if ((2 - 1) ~= v297) then
																											else
																												v224 = 1;
																												break;
																											end
																										end
																									end
																									if (v224 ~= 1) then
																									else
																										v227 = nil;
																										while true do
																											if (v225 == 1) then
																												if (v226 == 1) then
																													v227 = v22() ~= (166 - (122 + 44));
																												elseif (v226 == (2 - 0)) then
																													v227 = v25();
																												elseif (v226 ~= (9 - 6)) then
																												else
																													v227 = v26();
																												end
																												v55[v222] = v227;
																												break;
																											end
																											if (0 ~= v225) then
																											else
																												v226 = v22();
																												v227 = nil;
																												v225 = 1 + 0;
																											end
																										end
																										break;
																									end
																								end
																								break;
																							end
																							if ((1 + 0) == v223) then
																								v226 = nil;
																								v227 = nil;
																								v223 = 3 - 1;
																							end
																						end
																					end
																					v53[68 - (30 + 35)] = v22();
																					v121 = 1;
																				end
																			end
																		end
																	end
																	break;
																end
															end
														end
														if (v49 ~= (3 + 0)) then
														else
															local v114 = 1257 - (1043 + 214);
															local v115;
															while true do
																if (v114 ~= 0) then
																else
																	v115 = 0 - 0;
																	while true do
																		local v119 = 0;
																		local v120;
																		while true do
																			if (v119 == 0) then
																				v120 = 0;
																				while true do
																					if (v120 == (1212 - (323 + 889))) then
																						if ((2 - 1) ~= v115) then
																						else
																							return v53;
																						end
																						if (v115 == 0) then
																							local v263 = 580 - (361 + 219);
																							while true do
																								if (v263 == (321 - (53 + 267))) then
																									v115 = 1;
																									break;
																								end
																								if (v263 ~= (0 + 0)) then
																								else
																									for v298 = 414 - (15 + 398), v24() do
																										v51[v298 - (983 - (18 + 964))] = v29();
																									end
																									for v300 = 1, v24() do
																										v52[v300] = v24();
																									end
																									v263 = 3 - 2;
																								end
																							end
																						end
																						break;
																					end
																				end
																				break;
																			end
																		end
																	end
																	break;
																end
															end
														end
														v104 = 1;
													end
												end
											end
											if (1 == v87) then
												if (v49 ~= (0 + 0)) then
												else
													local v109 = 0;
													while true do
														if (v109 ~= (1 + 0)) then
														else
															v52 = {};
															v49 = 851 - (20 + 830);
															break;
														end
														if (v109 ~= (0 + 0)) then
														else
															v50 = {};
															v51 = {};
															v109 = 127 - (116 + 10);
														end
													end
												end
												if (v49 == (1 + 0)) then
													local v110 = 738 - (542 + 196);
													while true do
														if (v110 == (1 - 0)) then
															v55 = {};
															v49 = 2;
															break;
														end
														if (v110 ~= (0 + 0)) then
														else
															local v116 = 0 + 0;
															while true do
																if (v116 ~= 0) then
																else
																	v53 = {v50,v51,nil,v52};
																	v54 = v24();
																	v116 = 2 - 1;
																end
																if (v116 ~= (2 - 1)) then
																else
																	v110 = 1;
																	break;
																end
															end
														end
													end
												end
												break;
											end
										end
									end
									break;
								end
								if (v48 ~= 1) then
								else
									v51 = nil;
									v52 = nil;
									v48 = 1553 - (1126 + 425);
								end
								if ((405 - (118 + 287)) == v48) then
									v49 = 0 - 0;
									v50 = nil;
									v48 = 1122 - (118 + 1003);
								end
								if (v48 == (5 - 3)) then
									v53 = nil;
									v54 = nil;
									v48 = 380 - (142 + 235);
								end
							end
							break;
						end
						if (v47 ~= (0 - 0)) then
						else
							v48 = 0 + 0;
							v49 = nil;
							v47 = 978 - (553 + 424);
						end
						if (v47 == (1 - 0)) then
							v50 = nil;
							v51 = nil;
							v47 = 2;
						end
						if (v47 ~= 2) then
						else
							v52 = nil;
							v53 = nil;
							v47 = 3;
						end
						if (3 == v47) then
							v54 = nil;
							v55 = nil;
							v47 = 4;
						end
					end
				end
				v30 = nil;
				v18 = 7;
			end
			if (v18 == 0) then
				v19 = 1;
				v20 = nil;
				v16 = v4(v3(v16, 5), "..", function(v56)
					if (v1(v56, 2) == 79) then
						v20 = v0(v3(v56, 1, 1));
						return "";
					else
						local v72 = 0;
						local v73;
						while true do
							if (v72 == 0) then
								v73 = v2(v0(v56, 16));
								if v20 then
									local v88 = 0;
									local v89;
									while true do
										if (v88 == 1) then
											return v89;
										end
										if (v88 == 0) then
											v89 = v5(v73, v20);
											v20 = nil;
											v88 = 1;
										end
									end
								else
									return v73;
								end
								break;
							end
						end
					end
				end);
				v18 = 1;
			end
			if (v18 == 3) then
				v24 = nil;
				function v24()
					local v57 = 0 + (1329 - (797 + 532));
					local v58;
					local v59;
					local v60;
					local v61;
					while true do
						if (v57 == (0 - 0)) then
							v58, v59, v60, v61 = v1(v16, v19, v19 + 3 + 0);
							v19 = v19 + 3 + 1;
							v57 = 4 - (3 + 0);
						end
						if (v57 == (754 - (239 + 514))) then
							return (v61 * (7131822 + 9645394)) + (v60 * (22109 + 43427)) + (v59 * (147 + 109)) + v58;
						end
					end
				end
				v25 = nil;
				v18 = 4;
			end
			if (v18 == 7) then
				function v30(v62, v63, v64)
					local v65 = 0;
					local v66;
					local v67;
					local v68;
					while true do
						if (1 == v65) then
							v68 = v62[3];
							return function(...)
								local v81 = 0;
								local v82;
								local v83;
								local v84;
								local v85;
								local v86;
								while true do
									if (0 == v81) then
										v82 = 1;
										v83 = -1;
										v81 = 1;
									end
									if (v81 == 1) then
										v84 = {...};
										v85 = v12("#", ...) - 1;
										v81 = 2;
									end
									if (v81 == 3) then
										A, B = v28(v11(v86));
										if not A[1] then
											local v100 = 0;
											local v101;
											while true do
												if (v100 == 0) then
													v101 = v62[4][v82] or "?";
													error("Script error at [" .. v101 .. "]:" .. A[2]);
													break;
												end
											end
										else
											return v13(A, 2, B);
										end
										break;
									end
									if (v81 == 2) then
										v86 = nil;
										function v86()
											local v90 = v66;
											local v91 = v67;
											local v92 = v68;
											local v93 = v28;
											local v94 = {};
											local v95 = {};
											local v96 = {};
											for v102 = 0, v85 do
												if ((v102 >= v92) or ((3981 - 2845) > (10150 - 5833))) then
													v94[v102 - v92] = v84[v102 + (1203 - (373 + 829))];
												else
													v96[v102] = v84[v102 + (732 - (476 + 255))];
												end
											end
											local v97 = (v85 - v92) + 1;
											local v98;
											local v99;
											while true do
												local v103 = 1130 - (135 + 234 + 761);
												while true do
													if (((2747 + 2001) == (8624 - 3876)) and (((0 - 0) - (0 + 0)) == v103)) then
														local v111 = 238 - (64 + 174);
														while true do
															if ((((2019 - (35 + 1451)) + 3203) <= (7019 - 2279)) and (v111 == (337 - (144 + 192)))) then
																v103 = 1;
																break;
															end
															if ((v111 == (216 - (42 + 174))) or ((2547 + 843) <= (2535 + 525))) then
																v98 = v90[v82];
																v99 = v98[1];
																v111 = 1 + 0;
															end
														end
													end
													if ((v103 == (1505 - (363 + 1141))) or ((2579 - (1183 + 397)) > ((9651 - (28 + 1425)) - 5505))) then
														if (((340 + 123) < (450 + (2144 - (941 + 1052)))) and (v99 <= (1991 - (1913 + 62)))) then
															if ((v99 <= (5 + 2 + 0)) or (((7292 - (822 + 692)) - 3595) < 687)) then
																if (((6482 - ((806 - 241) + 1368)) == 4549) and (v99 <= (11 - 8))) then
																	if (((6333 - (1477 + 184)) == (6365 - 1693)) and (v99 <= (1 + 0))) then
																		if ((v99 == (856 - (564 + 292))) or ((6328 - 2660) < (1190 - (375 + 420)))) then
																			local v125 = (601 - (45 + 252)) - (244 + 60);
																			local v126;
																			local v127;
																			while true do
																				if ((v125 == (0 + 0)) or ((4642 - (41 + 0 + 435)) == (1456 - (938 + 63)))) then
																					v126 = v98[2];
																					v127 = {};
																					v125 = 1 + 0;
																				end
																				if ((v125 == (1126 - (936 + 189))) or ((1465 + 2984) == (4276 - (1565 + 48)))) then
																					for v233 = 1 + 0, #v95 do
																						local v234 = (392 + 746) - (782 + 356);
																						local v235;
																						local v236;
																						while true do
																							if ((v234 == 1) or (4277 < (3256 - (176 + 91)))) then
																								while true do
																									if ((v235 == 0) or ((2266 - (3397 - 2001)) >= (6114 - 1965))) then
																										v236 = v95[v233];
																										for v325 = 1092 - (975 + 117), #v236 do
																											local v326 = 0;
																											local v327;
																											local v328;
																											local v329;
																											while true do
																												if (((4087 - (157 + 1718)) < (2584 + (1032 - (114 + 319)))) and (v326 == (0 - 0))) then
																													local v344 = 0;
																													while true do
																														if (((15883 - 11237) > (4010 - (697 + 321))) and (v344 == (2 - 1))) then
																															v326 = 1 - 0;
																															break;
																														end
																														if ((1434 < (7160 - (5820 - 1766))) and (v344 == 0)) then
																															v327 = v236[v325];
																															v328 = v327[1 + 0];
																															v344 = 1 - 0;
																														end
																													end
																												end
																												if ((((2698 - 592) - 1320) < (4250 - (206 + 116 + 905))) and (v326 == (612 - (602 + 9)))) then
																													v329 = v327[1191 - (449 + 740)];
																													if (((v328 == v96) and (v329 >= v126)) or ((3314 - (826 + 46)) < (1021 - (245 + 702)))) then
																														local v348 = 0 - 0;
																														local v349;
																														while true do
																															if (((1458 + 3077) == (6433 - (260 + (2440 - 802)))) and ((440 - (382 + 58)) == v348)) then
																																v349 = 0 - 0;
																																while true do
																																	if ((v349 == (0 + (0 - 0))) or (((8181 - (556 + 1407)) - 3209) <= (6257 - 4152))) then
																																		v127[v329] = v328[v329];
																																		v327[1206 - (902 + 303)] = v127;
																																		break;
																																	end
																																end
																																break;
																															end
																														end
																													end
																													break;
																												end
																											end
																										end
																										break;
																									end
																								end
																								break;
																							end
																							if (((4018 - 2188) < 3669) and (v234 == (0 - 0))) then
																								v235 = 0 + 0;
																								v236 = nil;
																								v234 = 1691 - (1121 + 569);
																							end
																						end
																					end
																					break;
																				end
																			end
																		else
																			v96[v98[2]][v98[217 - (22 + 192)]] = v98[687 - ((1689 - (741 + 465)) + 200)];
																		end
																	elseif ((v99 > (1465 - (1404 + 59))) or ((3913 - 2483) >= 3612)) then
																		v96[v98[2]] = v98[3];
																	else
																		local v132 = 0 - (465 - (170 + 295));
																		local v133;
																		local v134;
																		local v135;
																		while true do
																			if ((2683 >= (3225 - (468 + 297))) and (v132 == 1)) then
																				v135 = 0;
																				for v237 = v133, v98[566 - (334 + 228)] do
																					local v238 = 0 - 0;
																					while true do
																						if ((v238 == 0) or (1804 >= (7591 - 4316))) then
																							v135 = v135 + (1 - 0);
																							v96[v237] = v134[v135];
																							break;
																						end
																					end
																				end
																				break;
																			end
																			if ((v132 == (0 + 0)) or ((1653 - (141 + 95)) > (1879 + 1686 + 59 + 5))) then
																				v133 = v98[4 - 2];
																				v134 = {v96[v133](v13(v96, v133 + (2 - 1), v83))};
																				v132 = 1 + 0;
																			end
																		end
																	end
																elseif (((13137 - 8342) > (235 + 48 + 119)) and (v99 <= (3 + 2))) then
																	if ((4813 > (5020 - 1455)) and (v99 > (2 + 1 + 1))) then
																		local v136 = 163 - (53 + 39 + (1301 - (957 + 273)));
																		local v137;
																		local v138;
																		local v139;
																		local v140;
																		local v141;
																		while true do
																			if (((1047 + 2865) == (1567 + 2345)) and (v136 == 2)) then
																				v141 = nil;
																				while true do
																					if ((2821 <= (2383 + 2441)) and (v137 == (0 - 0))) then
																						local v265 = (2914 - 2149) - (574 + (503 - 312));
																						while true do
																							if (((1434 + 304) <= (5498 - 3303)) and (v265 == (0 + (0 - 0)))) then
																								v138 = v98[851 - (254 + 595)];
																								v139, v140 = v93(v96[v138](v96[v138 + 1]));
																								v265 = 1;
																							end
																							if (((167 - ((272 - 217) + 71)) <= (3975 - 957)) and (v265 == (1791 - ((2353 - (389 + 1391)) + 1217)))) then
																								v137 = 2 - 1;
																								break;
																							end
																						end
																					end
																					if (((164 + 1981) <= (6612 - 2508)) and (v137 == (940 - (448 + 266 + 225)))) then
																						v83 = (v140 + v138) - (2 - 1);
																						v141 = 0;
																						v137 = 2;
																					end
																					if ((((391 + 3357) - 1059) < (525 + 4320)) and (v137 == (2 - 0))) then
																						for v283 = v138, v83 do
																							local v284 = 806 - (118 + 688);
																							local v285;
																							local v286;
																							while true do
																								if ((((109 - 61) - (25 + 23)) == v284) or ((3273 - (783 + 168)) > 2622)) then
																									v285 = 0 + 0;
																									v286 = nil;
																									v284 = 1;
																								end
																								if ((v284 == (1887 - (927 + 959))) or (((51292 - 36009) - 10749) == (2814 - (16 + 716)))) then
																									while true do
																										if ((0 == v285) or ((3032 - 1461) > (1837 + 30))) then
																											v286 = 97 - (11 + 86);
																											while true do
																												if ((v286 == ((311 - (309 + 2)) - (0 - 0))) or ((2939 - (175 + 110)) >= (7563 - 4567))) then
																													v141 = v141 + (4 - 3);
																													v96[v283] = v139[v141];
																													break;
																												end
																											end
																											break;
																										end
																									end
																									break;
																								end
																							end
																						end
																						break;
																					end
																				end
																				break;
																			end
																			if (((5774 - (503 + 1293)) > 2104) and (v136 == (2 - (1213 - (1090 + 122))))) then
																				v139 = nil;
																				v140 = nil;
																				v136 = 2;
																			end
																			if (((703 + 1463 + (2784 - 1955)) > (2602 - (810 + 251))) and (v136 == (0 + 0))) then
																				v137 = 0 + 0;
																				v138 = nil;
																				v136 = 1;
																			end
																		end
																	else
																		local v142 = 0 + 0;
																		local v143;
																		local v144;
																		local v145;
																		local v146;
																		local v147;
																		local v148;
																		while true do
																			if (((3782 - (43 + 490)) > 953) and (v142 == (734 - (711 + 22)))) then
																				v145 = nil;
																				v146 = nil;
																				v142 = (5 + 2) - (1123 - (628 + 490));
																			end
																			if ((v142 == (859 - (240 + 111 + 508))) or ((790 + 2483) > (7274 - 2701))) then
																				v143 = 0 + 0;
																				v144 = nil;
																				v142 = 1745 - (1344 + 400);
																			end
																			if ((((1007 - 600) - (255 + 150)) == v142) or ((2482 + 669) < 1284)) then
																				v147 = nil;
																				v148 = nil;
																				v142 = (9 - 7) + (775 - (431 + 343));
																			end
																			if ((v142 == 3) or ((7904 - 6054) == (4938 - 3409))) then
																				while true do
																					if (((2560 - (404 + 1335)) < ((5107 - 2578) - (183 + (645 - 422)))) and (v143 == (0 - 0))) then
																						local v266 = 0 + 0;
																						while true do
																							if ((902 < (662 + 175 + 1488)) and ((338 - (10 + 327)) == v266)) then
																								v143 = 1 + 0;
																								break;
																							end
																							if (((1196 - (118 + 220)) <= (988 + 1974)) and (v266 == 0)) then
																								v144 = 449 - (108 + 44 + 297);
																								v145 = nil;
																								v266 = 1 + 0;
																							end
																						end
																					end
																					if ((v143 == (4 - 3)) or ((5439 - (711 + 782)) < 1288)) then
																						v146 = nil;
																						v147 = nil;
																						v143 = (1698 - (556 + 1139)) - 1;
																					end
																					if (((471 - (270 + 199)) == v143) or (3242 == 567)) then
																						v148 = nil;
																						while true do
																							if ((v144 == (1 + 1)) or (((2681 - (6 + 9)) - (580 + 227 + 1012)) >= (3754 - 2491))) then
																								for v312 = v145, v83 do
																									local v313 = 0 + 0;
																									local v314;
																									while true do
																										if ((v313 == (0 + 0)) or ((982 + 652 + 619) == (4832 - 2981))) then
																											v314 = 0 + 0;
																											while true do
																												if ((v314 == (1167 - (645 + (691 - (28 + 141))))) or ((3877 - (392 + 618 + 780)) > (2371 + 1))) then
																													v148 = v148 + (4 - 3);
																													v96[v312] = v146[v148];
																													break;
																												end
																											end
																											break;
																										end
																									end
																								end
																								break;
																							end
																							if ((v144 == (2 - 1)) or ((6281 - (1045 + 791)) < (10501 - 6352))) then
																								local v303 = 0 - 0;
																								local v304;
																								while true do
																									if ((v303 == (505 - (351 + 154))) or ((3392 - (1281 + 293)) == (351 - (28 + 238)))) then
																										v304 = 0;
																										while true do
																											if (((1407 - 777) < (3686 - (1381 + 178))) and (v304 == (1 + 0))) then
																												v144 = (2 - 0) + 0;
																												break;
																											end
																											if ((v304 == 0) or ((827 + 1111) == 2514)) then
																												local v346 = 0 - 0;
																												while true do
																													if (((2205 + 2050) >= (525 - (381 + 64 + 25))) and (v346 == ((1318 - (486 + 831)) + 0))) then
																														v304 = 1;
																														break;
																													end
																													if ((2999 > (782 + 374)) and (v346 == 0)) then
																														v83 = (v147 + v145) - (1 - 0);
																														v148 = 1156 - (1074 + 82);
																														v346 = 1 - 0;
																													end
																												end
																											end
																										end
																										break;
																									end
																								end
																							end
																							if (((4134 - (214 + 1570)) > (2610 - (990 + 465))) and (0 == v144)) then
																								local v305 = 0 + 0;
																								local v306;
																								while true do
																									if (((1754 + 2275) <= ((12282 - 7562) + 133)) and (v305 == 0)) then
																										v306 = (0 - 0) - 0;
																										while true do
																											if ((v306 == (1727 - (1668 + 58))) or ((1142 - (97 + 415 + 114)) > ((28305 - 19353) - 5518))) then
																												v144 = (1264 - (668 + 595)) - 0;
																												break;
																											end
																											if (((14078 - 10032) >= (1411 + 1622)) and (0 == v306)) then
																												local v347 = 0 + 0;
																												while true do
																													if ((v347 == (1 + 0)) or (((8252 + 918) - (1301 + 5150)) <= (3441 - ((297 - 188) + 1885)))) then
																														v306 = 1470 - ((1559 - (23 + 267)) + 200);
																														break;
																													end
																													if ((v347 == (0 - 0)) or ((4949 - (98 + 717)) < ((6696 - (1129 + 815)) - (802 + 24)))) then
																														v145 = v98[2 - 0];
																														v146, v147 = v93(v96[v145](v13(v96, v145 + 1, v98[3 - (387 - (371 + 16))])));
																														v347 = 1 + 0;
																													end
																												end
																											end
																										end
																										break;
																									end
																								end
																							end
																						end
																						break;
																					end
																				end
																				break;
																			end
																		end
																	end
																elseif ((v99 == (5 + 1)) or (164 >= 2785)) then
																	local v149 = v98[1 + 1];
																	local v150 = v98[1754 - (1326 + 424)];
																	local v151 = v149 + (1 - 0) + 1;
																	local v152 = {v96[v149](v96[v149 + (3 - (120 - (88 + 30)))], v96[v151])};
																	for v205 = 1 + 0, v150 do
																		v96[v151 + v205] = v152[v205];
																	end
																	local v153 = v152[1 + 0];
																	if (v153 or ((434 + 91) == (1534 + 575))) then
																		local v211 = 0 + 0;
																		local v212;
																		local v213;
																		while true do
																			if (((1466 - (797 + 636)) == (160 - (898 - (720 + 51)))) and (v211 == (1619 - (1427 + 192)))) then
																				v212 = 0 + 0;
																				v213 = nil;
																				v211 = 1;
																			end
																			if (((7090 - (8978 - 4942)) <= 4015) and (v211 == (1 + 0))) then
																				while true do
																					if (((848 + 1023) < (3708 - (192 + 134))) and (v212 == (1276 - (316 + 960)))) then
																						v213 = 0;
																						while true do
																							if (((720 + 573) <= (1672 + 494)) and (v213 == (0 + 0))) then
																								v96[v151] = v153;
																								v82 = v98[3];
																								break;
																							end
																						end
																						break;
																					end
																				end
																				break;
																			end
																		end
																	else
																		v82 = v82 + (3 - 2);
																	end
																else
																	local v154 = 551 - (83 + 468);
																	local v155;
																	local v156;
																	local v157;
																	local v158;
																	local v159;
																	while true do
																		if ((v154 == (1807 - (1202 + 604))) or ((12039 - (11236 - (421 + 1355))) < 123)) then
																			v157 = nil;
																			v158 = nil;
																			v154 = 2;
																		end
																		if ((v154 == 0) or ((1407 - 561) >= (6556 - 4188))) then
																			v155 = 0;
																			v156 = nil;
																			v154 = 326 - (45 + 280);
																		end
																		if ((v154 == ((2 - 0) + 0)) or ((1723 + 1783 + 506) <= (1227 + 2131))) then
																			v159 = nil;
																			while true do
																				if ((1494 <= (1663 + 1342)) and (v155 == (1 + 0))) then
																					v83 = (v158 + v156) - (1 - (1083 - (286 + 797)));
																					v159 = 0 - 0;
																					v155 = 1913 - (340 + 1571);
																				end
																				if ((v155 == (1 + 1)) or (((8087 - 3204) - (1733 + 39)) == (5863 - 3729))) then
																					for v287 = v156, v83 do
																						local v288 = 1034 - (125 + 909);
																						local v289;
																						while true do
																							if (((4303 - (1096 + 852)) == (1057 + 1298)) and (v288 == (0 - 0))) then
																								v289 = 0;
																								while true do
																									if ((v289 == ((439 - (397 + 42)) + 0)) or ((1100 - (409 + 33 + 70)) <= ((1468 - (24 + 776)) - (46 + 190)))) then
																										v159 = v159 + 1;
																										v96[v287] = v157[v159];
																										break;
																									end
																								end
																								break;
																							end
																						end
																					end
																					break;
																				end
																				if (((4892 - ((78 - 27) + 44)) >= (1099 + 2796)) and (v155 == (1317 - ((1899 - (222 + 563)) + 203)))) then
																					v156 = v98[728 - (228 + 498)];
																					v157, v158 = v93(v96[v156]());
																					v155 = (1 - 0) + 0;
																				end
																			end
																			break;
																		end
																	end
																end
															elseif (((1977 + 1152 + 448) == 3577) and (v99 <= (674 - (174 + 489)))) then
																if (((9884 - 6090) > (5598 - (830 + 1075))) and (v99 <= 9)) then
																	if ((v99 == (532 - (303 + 221))) or ((2544 - (231 + 1038)) == (3417 + 683))) then
																		local v160 = 1162 - (171 + 991);
																		local v161;
																		local v162;
																		while true do
																			if ((v160 == (0 - 0)) or ((4272 - 2681) >= (8933 - 5353))) then
																				v161 = 0 + 0;
																				v162 = nil;
																				v160 = 3 - 2;
																			end
																			if (((2835 - 1852) <= (2914 - 1106)) and (v160 == (3 - 2))) then
																				while true do
																					if ((v161 == 0) or ((3398 - (111 + (1327 - (23 + 167)))) <= (1355 - ((1889 - (690 + 1108)) + 67)))) then
																						v162 = v98[5 - 3];
																						v96[v162] = v96[v162](v13(v96, v162 + 1 + 0 + 0, v83));
																						break;
																					end
																				end
																				break;
																			end
																		end
																	else
																		v96[v98[525 - (423 + 100)]][v98[1 + 2]] = v96[v98[10 - 6]];
																	end
																elseif ((3769 >= (612 + 561)) and (v99 > ((645 + 136) - (326 + 445)))) then
																	local v165 = 0 - 0;
																	local v166;
																	while true do
																		if ((1485 == (3307 - 1822)) and (v165 == (2 - 1))) then
																			for v239 = v166, v83 do
																				local v240 = 0;
																				local v241;
																				while true do
																					if ((v240 == (711 - (530 + 181))) or (3315 <= (3663 - (614 + 267)))) then
																						v241 = v94[v239 - v166];
																						v96[v239] = v241;
																						break;
																					end
																				end
																			end
																			break;
																		end
																		if ((v165 == ((880 - (40 + 808)) - (19 + 13))) or (876 >= 2964)) then
																			local v230 = 0 - 0;
																			while true do
																				if ((v230 == 0) or (2232 > (5818 - (547 + 2774)))) then
																					v166 = v98[5 - 3];
																					v83 = (v166 + v97) - (1 + 0);
																					v230 = 1 - 0;
																				end
																				if ((v230 == (1 - 0)) or ((3922 - (1293 + 519)) <= (1269 - 937))) then
																					v165 = (1 + 0) - 0;
																					break;
																				end
																			end
																		end
																	end
																else
																	local v167 = 0 - 0;
																	local v168;
																	local v169;
																	while true do
																		if (((7048 - 3362) > (13677 - (5558 + 4947))) and ((0 - 0) == v167)) then
																			v168 = 0 + 0;
																			v169 = nil;
																			v167 = 1 + 0;
																		end
																		if ((v167 == (2 - 1)) or ((1034 + 3440) < (273 + 547))) then
																			while true do
																				if (((2675 + 1604) >= (3978 - (709 + 387))) and (v168 == 0)) then
																					v169 = v98[1860 - (673 + 1185)];
																					v96[v169](v96[v169 + (2 - 1)]);
																					break;
																				end
																			end
																			break;
																		end
																	end
																end
															elseif ((v99 <= (41 - 28)) or ((3337 - 1308) >= (2519 + 1002))) then
																if ((v99 > (5 + 4 + 3)) or ((2750 - 713) >= (1141 + 3501))) then
																	v96[v98[3 - 1]] = v96[v98[5 - 2]][v98[1884 - (446 + 1434)]];
																else
																	local v172 = 1283 - (1040 + 243);
																	local v173;
																	local v174;
																	local v175;
																	while true do
																		if ((1720 < (13305 - 8847)) and ((1848 - ((1130 - (47 + 524)) + 1288)) == v172)) then
																			v175 = {};
																			v174 = v10({}, {__index=function(v242, v243)
																				local v244 = 1931 - (609 + 1322);
																				local v245;
																				local v246;
																				local v247;
																				while true do
																					if ((v244 == (455 - (13 + 441))) or ((1628 - 1192) > 3021)) then
																						v247 = nil;
																						while true do
																							if (((1867 - 1154) <= (4218 - 3371)) and ((0 + 0) == v245)) then
																								v246 = 0 - 0;
																								v247 = nil;
																								v245 = 1 + 0;
																							end
																							if (((944 + 1210) <= (11962 - 7931)) and (v245 == (1 + 0))) then
																								while true do
																									if (((8487 - 3872) == (3052 + 1563)) and (v246 == (0 + 0 + 0))) then
																										local v339 = 0 + 0;
																										local v340;
																										while true do
																											if ((v339 == ((0 - 0) + 0)) or ((3709 + 81) == (933 - (153 + 280)))) then
																												v340 = 0 - 0;
																												while true do
																													if ((89 < 221) and (v340 == (0 + (0 - 0)))) then
																														local v358 = 0;
																														while true do
																															if (((812 + 1242) >= (744 + 677)) and (v358 == (0 - 0))) then
																																v247 = v175[v243];
																																return v247[1][v247[2 + 0]];
																															end
																														end
																													end
																												end
																												break;
																											end
																										end
																									end
																								end
																								break;
																							end
																						end
																						break;
																					end
																					if ((692 < (2216 + 842)) and (v244 == (0 - 0))) then
																						v245 = 0;
																						v246 = nil;
																						v244 = 1 + 0;
																					end
																				end
																			end,__newindex=function(v248, v249, v250)
																				local v251 = 667 - (89 + 578);
																				local v252;
																				local v253;
																				while true do
																					if ((v251 == (0 + 0)) or (3254 == (3440 - 1785))) then
																						v252 = 1049 - (572 + 477);
																						v253 = nil;
																						v251 = 1 + 0;
																					end
																					if ((v251 == (1 + 0)) or ((155 + 1141) == 4910)) then
																						while true do
																							if (((3454 - (84 + 2)) == 3368) and (v252 == (0 - 0))) then
																								v253 = v175[v249];
																								v253[1 + 0][v253[2]] = v250;
																								break;
																							end
																						end
																						break;
																					end
																				end
																			end});
																			v172 = 844 - (497 + 345);
																		end
																		if (((68 + (4301 - (1165 + 561))) < (645 + 3170)) and (v172 == 0)) then
																			v173 = v91[v98[1336 - (605 + 728)]];
																			v174 = nil;
																			v172 = 1 + 0;
																		end
																		if (((4253 - 2340) > (23 + 470)) and (2 == v172)) then
																			for v254 = 3 - 2, v98[4] do
																				local v255 = 0 + 0 + 0;
																				local v256;
																				local v257;
																				while true do
																					if (((13174 - 8419) > 3428) and (v255 == (0 + 0))) then
																						v256 = 489 - (457 + (98 - 66));
																						v257 = nil;
																						v255 = 1;
																					end
																					if ((1381 <= (1006 + 1363)) and (v255 == (1403 - (832 + 570)))) then
																						while true do
																							if ((v256 == (1 + 0 + 0)) or (4843 == (1066 + 3018))) then
																								if (((16522 - 11853) > (175 + 188)) and (v257[(1276 - (341 + 138)) - (588 + 57 + 151)] == (78 - (100 - 51)))) then
																									v175[v254 - (327 - (89 + 237))] = {v96,v257[2 + 1]};
																								else
																									v175[v254 - (654 - (232 + 421))] = {v63,v257[(882 - (581 + 300)) + 2]};
																								end
																								v95[#v95 + (1221 - (855 + 365)) + (0 - 0)] = v175;
																								break;
																							end
																							if (((0 - (0 + 0)) == v256) or ((2482 - (316 + 289)) >= 3138)) then
																								local v318 = 0 - 0;
																								while true do
																									if (((219 + 4523) >= (5079 - ((1901 - (1030 + 205)) + 739 + 48))) and (v318 == (425 - (360 + 65)))) then
																										v82 = v82 + 1 + 0;
																										v257 = v90[v82];
																										v318 = 1;
																									end
																									if (((255 - (79 + 175)) == v318) or (4540 == 916)) then
																										v256 = 1 - 0;
																										break;
																									end
																								end
																							end
																						end
																						break;
																					end
																				end
																			end
																			v96[v98[2 + 0]] = v30(v173, v174, v64);
																			break;
																		end
																	end
																end
															elseif ((v99 <= ((40 + 2) - (314 - (156 + 130)))) or ((2226 - 1070) > (5244 - (503 + 396)))) then
																v96[v98[183 - (92 + 89)]]();
															elseif (((4339 - 2102) < (2180 + 2069)) and (v99 == 15)) then
																do
																	return;
																end
															else
																local v214 = 0 + 0;
																local v215;
																local v216;
																while true do
																	if ((v214 == (3 - 2)) or ((367 + 2316) < (52 - 29))) then
																		while true do
																			if (((609 + 88) <= (395 + (979 - 548))) and (v215 == (0 - 0))) then
																				v216 = v98[1 + 1];
																				v96[v216] = v96[v216](v96[v216 + (1 - 0)]);
																				break;
																			end
																		end
																		break;
																	end
																	if (((2349 - ((817 - 332) + (1554 - 795))) <= (2721 - (408 + 1137))) and (v214 == (1189 - (442 + 747)))) then
																		local v264 = 0;
																		while true do
																			if ((3379 <= (4947 - (832 + 303))) and (v264 == (946 - (88 + 858)))) then
																				v215 = 0 + 0;
																				v216 = nil;
																				v264 = 1 + 0;
																			end
																			if ((v264 == (1 + 0)) or ((1577 - (766 + 23)) >= (7977 - 6361))) then
																				v214 = 1 - (0 + 0);
																				break;
																			end
																		end
																	end
																end
															end
														elseif ((1854 <= (8902 - 5523)) and (v99 <= 24)) then
															if (((15439 - 10890) == ((5691 - (10 + 59)) - (1036 + 37))) and (v99 <= (5 + 10 + 5))) then
																if ((v99 <= (34 - 16)) or ((14882 - 11860) >= (2379 + 645))) then
																	if ((((7463 - (671 + 492)) - (641 + 839)) > (3111 - (910 + 3 + 0))) and (v99 > (43 - 26))) then
																		if ((v96[v98[2]] ~= v98[4]) or ((2745 - ((2681 - (369 + 846)) + 218)) >= (2248 + 2643))) then
																			v82 = v82 + (1149 - (556 + 592));
																		else
																			v82 = v98[2 + 1];
																		end
																	else
																		v96[v98[2]] = v64[v98[811 - (329 + 479)]];
																	end
																elseif ((1364 <= (5327 - (47 + 127 + 581 + 99))) and (v99 == (64 - 45))) then
																	local v178 = 0 - 0;
																	local v179;
																	local v180;
																	while true do
																		if ((v178 == (0 + (1945 - (1036 + 909)))) or (3595 <= (742 - (396 + 343)))) then
																			v179 = 0 + 0 + 0;
																			v180 = nil;
																			v178 = 1478 - (29 + 1448);
																		end
																		if ((v178 == (1390 - (135 + 1254))) or ((17600 - 12928) == (17985 - (23728 - 9595)))) then
																			while true do
																				if (((1039 + 520) == ((3289 - (11 + 192)) - (389 + 1138))) and (v179 == (574 - (102 + 472)))) then
																					v180 = v98[2 + 0];
																					do
																						return v13(v96, v180, v83);
																					end
																					break;
																				end
																			end
																			break;
																		end
																	end
																else
																	local v181 = 0;
																	local v182;
																	local v183;
																	while true do
																		if ((v181 == (1 + 0)) or ((1634 + 118) <= (2333 - (320 + 1225)))) then
																			while true do
																				if ((v182 == (0 - 0)) or (3907 == (109 + 68))) then
																					v183 = v98[1466 - (157 + 1307)];
																					v96[v183](v13(v96, v183 + (1860 - (821 + 1038)), v98[(4 + 3) - 4]));
																					break;
																				end
																			end
																			break;
																		end
																		if (((380 + 3090) > (985 - 430)) and (v181 == (0 + 0))) then
																			v182 = 0 - (175 - (135 + 40));
																			v183 = nil;
																			v181 = 1027 - (834 + 192);
																		end
																	end
																end
															elseif ((v99 <= (2 + 20)) or ((250 + 722) == 645)) then
																if (((69 + 3113) >= (3276 - 1161)) and (v99 > (325 - (300 + (9 - 5))))) then
																	local v184 = 0 + 0;
																	local v185;
																	local v186;
																	local v187;
																	while true do
																		if (((10190 - (3796 + 2501)) < 4429) and (v184 == (362 - (112 + 250)))) then
																			v185 = 0 + 0;
																			v186 = nil;
																			v184 = 2 - (2 - 1);
																		end
																		if ((v184 == (1 + (0 - 0))) or ((1483 + 1384) < (1425 + 480))) then
																			v187 = nil;
																			while true do
																				if ((v185 == 1) or (1796 >= (2009 + 2042))) then
																					for v292 = v186 + 1, v83 do
																						v7(v187, v96[v292]);
																					end
																					break;
																				end
																				if ((1619 <= (2791 + 965)) and (v185 == (1414 - (1001 + 413)))) then
																					v186 = v98[4 - 2];
																					v187 = v96[v186];
																					v185 = 883 - (244 + 638);
																				end
																			end
																			break;
																		end
																	end
																elseif ((((1473 - (50 + 126)) - (627 + 66)) == ((5009 - 3210) - 1195)) and (v96[v98[604 - (512 + 90)]] == v98[(423 + 1487) - (1665 + 241)])) then
																	v82 = v82 + 1;
																else
																	v82 = v98[3];
																end
															elseif ((v99 == 23) or (((6614 - (1233 + 180)) - (373 + 344)) == (406 + (1463 - (522 + 447))))) then
																local v188 = 0 + 0;
																local v189;
																local v190;
																while true do
																	if ((v188 == (2 - 1)) or ((7545 - 3086) <= (2212 - (35 + 1064)))) then
																		while true do
																			if (((2643 + 989) > (7269 - 3871)) and (v189 == (0 + (1421 - (107 + 1314))))) then
																				v190 = v98[2];
																				do
																					return v96[v190](v13(v96, v190 + (1237 - (298 + 938)), v83));
																				end
																				break;
																			end
																		end
																		break;
																	end
																	if (((5341 - (233 + 477 + 549)) <= (6583 - (636 + 1030))) and (v188 == (0 + 0))) then
																		v189 = 0;
																		v190 = nil;
																		v188 = 1 + 0;
																	end
																end
															else
																for v208 = v98[2], v98[1 + 2] do
																	v96[v208] = nil;
																end
															end
														elseif (((327 + 4505) >= (1607 - (55 + (505 - 339)))) and (v99 <= (6 + 22))) then
															if ((137 == 137) and (v99 <= (3 + 23))) then
																if ((v99 > 25) or ((5995 - (1880 + 2545)) >= (4629 - (36 + 261)))) then
																	if ((v98[2] == v96[v98[(11 - 5) - 2]]) or (((21492 - 16060) - ((1944 - (716 + 1194)) + 23 + 1311)) <= (700 + 1119))) then
																		v82 = v82 + 1 + 0;
																	else
																		v82 = v98[1 + 2];
																	end
																else
																	local v191 = 1283 - (1035 + 248);
																	local v192;
																	local v193;
																	local v194;
																	while true do
																		if ((v191 == (21 - ((523 - (74 + 429)) + (1 - 0)))) or (4986 < 1574)) then
																			v192 = 0;
																			v193 = nil;
																			v191 = 1 + 0;
																		end
																		if (((4745 - (134 + 185)) > 172) and ((1134 - (273 + 276 + 584)) == v191)) then
																			v194 = nil;
																			while true do
																				if (((1271 - (314 + 371)) > 455) and (v192 == ((6 - 3) - 2))) then
																					v96[v193 + ((686 + 283) - (478 + 490))] = v194;
																					v96[v193] = v194[v98[3 + 1]];
																					break;
																				end
																				if (((1998 - (786 + 386)) == (2675 - 1849)) and (v192 == (1379 - (1055 + 324)))) then
																					local v280 = 1340 - (1093 + 247);
																					while true do
																						if ((v280 == (0 + 0)) or ((423 + 3596) > 4441)) then
																							v193 = v98[2];
																							v194 = v96[v98[11 - 8]];
																							v280 = 1;
																						end
																						if (((6845 - 4828) < (12124 - 7863)) and ((2 - 1) == v280)) then
																							v192 = 1 + 0;
																							break;
																						end
																					end
																				end
																			end
																			break;
																		end
																	end
																end
															elseif ((4716 > ((949 - 641) - (563 - 335))) and (v99 > 27)) then
																v96[v98[6 - 4]] = v30(v91[v98[3 + 0]], nil, v64);
															else
																v82 = v98[7 - 4];
															end
														elseif ((v99 <= (718 - (364 + 324))) or ((9613 - 6106) == 3272)) then
															if ((v99 > (69 - 40)) or ((291 + 585) >= (12866 - 9791))) then
																local v197 = 0 - 0;
																local v198;
																local v199;
																local v200;
																while true do
																	if (((13217 - 8865) > (3822 - (1249 + 19))) and (v197 == (0 + 0))) then
																		v198 = 0 - 0;
																		v199 = nil;
																		v197 = 1087 - (686 + 400);
																	end
																	if ((v197 == (1 + 0)) or ((4635 - (73 + 156)) < (20 + 4023))) then
																		v200 = nil;
																		while true do
																			if ((v198 == (812 - (721 + 90))) or ((22 + 1867) >= (10984 - 7601))) then
																				while true do
																					if ((((2795 - (279 + 154)) - (224 + 246)) <= 2734) and ((0 - 0) == v199)) then
																						v200 = v98[2];
																						v96[v200] = v96[v200](v13(v96, v200 + 1, v98[(783 - (454 + 324)) - 2]));
																						break;
																					end
																				end
																				break;
																			end
																			if (((349 + 1574) < 2218) and (v198 == 0)) then
																				v199 = 0 + 0;
																				v200 = nil;
																				v198 = 1 + 0;
																			end
																		end
																		break;
																	end
																end
															else
																v96[v98[3 - 1]] = v96[v98[(8 + 1) - 6]];
															end
														elseif ((2173 > (892 - (203 + (327 - (12 + 5))))) and (v99 <= (2024 - (1238 + 408 + 347)))) then
															v96[v98[1 + 1]] = v63[v98[1537 - (709 + 825)]];
														elseif ((v99 > (58 - 26)) or ((3774 - 1183) == (4273 - (196 + 668)))) then
															v96[v98[7 - 5]] = {};
														else
															v96[v98[(7 - 4) - 1]] = v98[836 - (171 + 662)] ~= (93 - (4 + 89));
														end
														v82 = v82 + 1 + 0;
														break;
													end
												end
											end
										end
										v81 = 3;
									end
								end
							end;
						end
						if (v65 == 0) then
							v66 = v62[1];
							v67 = v62[2];
							v65 = 1;
						end
					end
				end
				return v30(v29(), {}, v17)(...);
			end
			if (v18 == 1) then
				v21 = nil;
				function v21(v69, v70, v71)
					if v71 then
						local v74 = (v69 / ((1095 - ((2175 - (41 + 1857)) + (2709 - (1222 + 671)))) ^ (v70 - (4 - 3)))) % ((1185 - (1058 + 125)) ^ (((v71 - (1 + 0)) - (v70 - (976 - (815 + 160)))) + ((10 - 6) - 3)));
						return v74 - (v74 % (2 - 1));
					else
						local v75 = 2 ^ (v70 - 1);
						return (((v69 % (v75 + v75)) >= v75) and (1 + 0)) or (0 - 0);
					end
				end
				v22 = nil;
				v18 = 2;
			end
		end
	end
	vv9(), ...);
end
