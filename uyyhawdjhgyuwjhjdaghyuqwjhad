--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.6) ~  Much Love, Ferib 

]]--

do
	local v0 = tonumber;
	local v1 = string.byte;
	local v2 = string.char;
	local v3 = string.sub;
	local v4 = string.gsub;
	local v5 = string.rep;
	local v6 = table.concat;
	local v7 = table.insert;
	local v8 = math.ldexp;
	local v9 = getfenv or function()
		return _ENV;
	end;
	local v10 = setmetatable;
	local v11 = pcall;
	local v12 = select;
	local v13 = unpack or table.unpack;
	local v14 = tonumber;
	local function v15(v16, v17, ...)
		local v18 = 1;
		local v19;
		v16 = v4(v3(v16, 5), "..", function(v30)
			if (v1(v30, 2) == 79) then
				local v71 = 0;
				while true do
					if (v71 == 0) then
						v19 = v0(v3(v30, 1, 1));
						return "";
					end
				end
			else
				local v72 = 0;
				local v73;
				while true do
					if (v72 == 0) then
						v73 = v2(v0(v30, 16));
						if v19 then
							local v103 = v5(v73, v19);
							v19 = nil;
							return v103;
						else
							return v73;
						end
						break;
					end
				end
			end
		end);
		local function v20(v31, v32, v33)
			if v33 then
				local v74 = (v31 / ((1 + 1) ^ (v32 - (2 - 1)))) % ((1 + 1) ^ (((v33 - (2 - 1)) - (v32 - (878 - (282 + 595)))) + (1 - 0)));
				return v74 - (v74 % ((2 + 0) - 1));
			else
				local v75 = 619 - (555 + 64);
				local v76;
				while true do
					if (v75 == (931 - (857 + 74))) then
						v76 = (570 - (367 + (1158 - (892 + 65)))) ^ (v32 - (1271 - ((538 - 312) + 1044)));
						return (((v31 % (v76 + v76)) >= v76) and (4 - (5 - 2))) or (927 - (214 + 713));
					end
				end
			end
		end
		local function v21()
			local v34 = v1(v16, v18, v18);
			v18 = v18 + 1;
			return v34;
		end
		local function v22()
			local v35, v36 = v1(v16, v18, v18 + (3 - 1));
			v18 = v18 + (352 - (87 + 263));
			return (v36 * (436 - (67 + 113))) + v35;
		end
		local function v23()
			local v37 = 0 + 0;
			local v38;
			local v39;
			local v40;
			local v41;
			while true do
				if (v37 == 1) then
					return (v41 * (41190819 - 24413603)) + (v40 * (48199 + 12620 + 4717)) + (v39 * (1017 - 761)) + v38;
				end
				if (v37 == (952 - (802 + 150))) then
					v38, v39, v40, v41 = v1(v16, v18, v18 + (7 - 4));
					v18 = v18 + (6 - 2);
					v37 = 1;
				end
			end
		end
		local function v24()
			local v42 = 997 - (915 + 82);
			local v43;
			local v44;
			local v45;
			local v46;
			local v47;
			local v48;
			while true do
				if (v42 == ((1140 - (116 + 1022)) - 1)) then
					v45 = 1 + (0 - 0);
					v46 = (v20(v44, 1, 20) * (2 ^ (41 - 9))) + v43;
					v42 = 1189 - (1069 + 118);
				end
				if (v42 == (6 - 3)) then
					if (v47 == (0 - 0)) then
						if (v46 == (0 + 0)) then
							return v48 * (0 - 0);
						else
							v47 = 1 + 0 + 0;
							v45 = 791 - (368 + 423);
						end
					elseif (v47 == (7472 - 5425)) then
						return ((v46 == (0 - 0)) and (v48 * ((19 - (10 + 8)) / (0 - 0)))) or (v48 * NaN);
					end
					return v8(v48, v47 - (1465 - (416 + 26))) * (v45 + (v46 / ((6 - 4) ^ (23 + 29))));
				end
				if (v42 == (0 - 0)) then
					v43 = v23();
					v44 = v23();
					v42 = (1558 - 1119) - (145 + 293);
				end
				if (v42 == ((1291 - (814 + 45)) - (44 + 386))) then
					v47 = v20(v44, 1507 - (998 + 488), 10 + 21);
					v48 = ((v20(v44, 32) == (1 + 0)) and -1) or 1;
					v42 = 775 - (201 + 571);
				end
			end
		end
		local function v25(v49)
			local v50 = 0 - 0;
			local v51;
			local v52;
			while true do
				if (v50 == ((2830 - (760 + 987)) - (1020 + 60))) then
					return v6(v52);
				end
				if (v50 == (1423 - (630 + 793))) then
					v51 = nil;
					if not v49 then
						v49 = v23();
						if (v49 == 0) then
							return "";
						end
					end
					v50 = 1;
				end
				if (v50 == (1 + 1)) then
					v52 = {};
					for v97 = 4 - 3, #v51 do
						v52[v97] = v2(v1(v3(v51, v97, v97)));
					end
					v50 = 2 + 1;
				end
				if (v50 == (886 - (261 + 624))) then
					v51 = v3(v16, v18, (v18 + v49) - (1 - 0));
					v18 = v18 + v49;
					v50 = 2;
				end
			end
		end
		local v26 = v23;
		local function v27(...)
			return {...}, v12("#", ...);
		end
		local function v28()
			local v53 = 0 - 0;
			local v54;
			local v55;
			local v56;
			local v57;
			local v58;
			local v59;
			while true do
				if (v53 ~= 0) then
				else
					local v87 = 280 - (99 + 181);
					while true do
						if (v87 == 1) then
							v56 = {};
							v57 = {v54,v55,nil,v56};
							v87 = 2;
						end
						if (v87 == (3 - 1)) then
							v53 = 1289 - (993 + 295);
							break;
						end
						if (v87 == (0 + 0)) then
							v54 = {};
							v55 = {};
							v87 = 1172 - (418 + 753);
						end
					end
				end
				if (v53 ~= (1 + 0)) then
				else
					local v88 = 0 + 0;
					local v89;
					while true do
						if (v88 == (0 + 0)) then
							v89 = 0;
							while true do
								if (v89 ~= 0) then
								else
									local v113 = 0;
									while true do
										if (1 == v113) then
											v89 = 1;
											break;
										end
										if (v113 == 0) then
											v58 = v23();
											v59 = {};
											v113 = 1;
										end
									end
								end
								if (v89 == 1) then
									local v114 = 0 + 0;
									while true do
										if (v114 ~= 0) then
										else
											for v117 = 530 - (406 + 123), v58 do
												local v118 = 0;
												local v119;
												local v120;
												local v121;
												local v122;
												while true do
													if (v118 == (1770 - (1749 + 20))) then
														v121 = nil;
														v122 = nil;
														v118 = 1 + 1;
													end
													if (2 == v118) then
														while true do
															if ((1322 - (1249 + 73)) == v119) then
																local v134 = 0;
																while true do
																	if (v134 == (0 + 0)) then
																		local v136 = 0;
																		while true do
																			if (v136 == (1145 - (466 + 679))) then
																				v120 = 0;
																				v121 = nil;
																				v136 = 1;
																			end
																			if (v136 ~= 1) then
																			else
																				v134 = 1;
																				break;
																			end
																		end
																	end
																	if (v134 == 1) then
																		v119 = 2 - 1;
																		break;
																	end
																end
															end
															if (v119 == (2 - 1)) then
																v122 = nil;
																while true do
																	if (v120 == 0) then
																		local v137 = 0;
																		local v138;
																		local v139;
																		while true do
																			if (v137 ~= 1) then
																			else
																				while true do
																					if (v138 == (1900 - (106 + 1794))) then
																						v139 = 0 + 0;
																						while true do
																							if (v139 == 0) then
																								local v308 = 0 + 0;
																								while true do
																									if (v308 == 1) then
																										v139 = 1;
																										break;
																									end
																									if (v308 ~= 0) then
																									else
																										v121 = v21();
																										v122 = nil;
																										v308 = 1;
																									end
																								end
																							end
																							if (v139 ~= (2 - 1)) then
																							else
																								v120 = 2 - 1;
																								break;
																							end
																						end
																						break;
																					end
																				end
																				break;
																			end
																			if (v137 == (114 - (4 + 110))) then
																				v138 = 584 - (57 + 527);
																				v139 = nil;
																				v137 = 1428 - (41 + 1386);
																			end
																		end
																	end
																	if (v120 == 1) then
																		if (v121 == 1) then
																			v122 = v21() ~= 0;
																		elseif (v121 == (105 - (17 + 86))) then
																			v122 = v24();
																		elseif (v121 == (3 + 0)) then
																			v122 = v25();
																		end
																		v59[v117] = v122;
																		break;
																	end
																end
																break;
															end
														end
														break;
													end
													if (v118 == 0) then
														v119 = 0;
														v120 = nil;
														v118 = 1;
													end
												end
											end
											v57[3] = v21();
											v114 = 1;
										end
										if (v114 ~= 1) then
										else
											v89 = 3 - 1;
											break;
										end
									end
								end
								if (v89 ~= 2) then
								else
									v53 = 2;
									break;
								end
							end
							break;
						end
					end
				end
				if (v53 == (5 - 3)) then
					local v90 = 0;
					while true do
						if (v90 == 1) then
							for v104 = 167 - (122 + 44), v23() do
								v56[v104] = v23();
							end
							return v57;
						end
						if (v90 ~= (0 - 0)) then
						else
							for v106 = 1, v23() do
								local v107 = 0 - 0;
								local v108;
								local v109;
								local v110;
								while true do
									if (v107 == (1 + 0)) then
										v110 = nil;
										while true do
											if (v108 == 1) then
												while true do
													if (v109 ~= 0) then
													else
														v110 = v21();
														if (v20(v110, 1, 1) ~= 0) then
														else
															local v126 = 0;
															local v127;
															local v128;
															local v129;
															local v130;
															local v131;
															while true do
																if ((0 + 0) == v126) then
																	v127 = 0 - 0;
																	v128 = nil;
																	v126 = 1;
																end
																if (v126 ~= (66 - (30 + 35))) then
																else
																	v129 = nil;
																	v130 = nil;
																	v126 = 2 + 0;
																end
																if (v126 == 2) then
																	v131 = nil;
																	while true do
																		if ((1258 - (1043 + 214)) == v127) then
																			local v209 = 0;
																			local v210;
																			while true do
																				if (v209 == (0 - 0)) then
																					v210 = 0;
																					while true do
																						if (1 == v210) then
																							v127 = 1214 - (323 + 889);
																							break;
																						end
																						if (v210 ~= 0) then
																						else
																							local v301 = 0 - 0;
																							while true do
																								if (v301 ~= 0) then
																								else
																									v130 = nil;
																									v131 = nil;
																									v301 = 1;
																								end
																								if (v301 == 1) then
																									v210 = 1;
																									break;
																								end
																							end
																						end
																					end
																					break;
																				end
																			end
																		end
																		if (v127 == 0) then
																			local v211 = 0;
																			local v212;
																			while true do
																				if (0 ~= v211) then
																				else
																					v212 = 580 - (361 + 219);
																					while true do
																						if (v212 == 1) then
																							v127 = 1;
																							break;
																						end
																						if (v212 ~= 0) then
																						else
																							local v302 = 0;
																							while true do
																								if (v302 ~= 1) then
																								else
																									v212 = 1;
																									break;
																								end
																								if (v302 == (320 - (53 + 267))) then
																									v128 = 0;
																									v129 = nil;
																									v302 = 1;
																								end
																							end
																						end
																					end
																					break;
																				end
																			end
																		end
																		if ((1 + 1) ~= v127) then
																		else
																			while true do
																				if (v128 == 2) then
																					local v257 = 413 - (15 + 398);
																					local v258;
																					while true do
																						if (v257 == 0) then
																							v258 = 982 - (18 + 964);
																							while true do
																								if (v258 == 0) then
																									if (v20(v130, 3 - 2, 1) ~= 1) then
																									else
																										v131[2] = v59[v131[2 + 0]];
																									end
																									if (v20(v130, 2 + 0, 852 - (20 + 830)) == (1 + 0)) then
																										v131[129 - (116 + 10)] = v59[v131[1 + 2]];
																									end
																									v258 = 1;
																								end
																								if (v258 == (739 - (542 + 196))) then
																									v128 = 6 - 3;
																									break;
																								end
																							end
																							break;
																						end
																					end
																				end
																				if (3 == v128) then
																					if (v20(v130, 3, 3) == 1) then
																						v131[2 + 2] = v59[v131[4]];
																					end
																					v54[v106] = v131;
																					break;
																				end
																				if (v128 == 1) then
																					local v260 = 0 + 0;
																					local v261;
																					while true do
																						if (v260 == (0 + 0)) then
																							v261 = 0 - 0;
																							while true do
																								if (0 ~= v261) then
																								else
																									local v332 = 0;
																									while true do
																										if (1 ~= v332) then
																										else
																											v261 = 2 - 1;
																											break;
																										end
																										if (v332 ~= 0) then
																										else
																											v131 = {v22(),v22(),nil,nil};
																											if (v129 == (405 - (118 + 287))) then
																												local v354 = 0 - 0;
																												local v355;
																												local v356;
																												local v357;
																												while true do
																													if ((1121 - (118 + 1003)) ~= v354) then
																													else
																														v355 = 0;
																														v356 = nil;
																														v354 = 1;
																													end
																													if (v354 ~= 1) then
																													else
																														v357 = nil;
																														while true do
																															if (0 == v355) then
																																v356 = 0;
																																v357 = nil;
																																v355 = 2 - 1;
																															end
																															if (v355 == 1) then
																																while true do
																																	if ((377 - (142 + 235)) == v356) then
																																		v357 = 0 - 0;
																																		while true do
																																			if (v357 == 0) then
																																				v131[1 + 2] = v22();
																																				v131[4] = v22();
																																				break;
																																			end
																																		end
																																		break;
																																	end
																																end
																																break;
																															end
																														end
																														break;
																													end
																												end
																											elseif (v129 == (978 - (553 + 424))) then
																												v131[3] = v23();
																											elseif (v129 == (3 - 1)) then
																												v131[3 + 0] = v23() - ((2 + 0) ^ 16);
																											elseif (v129 ~= (2 + 1)) then
																											else
																												local v373 = 0 + 0;
																												local v374;
																												local v375;
																												local v376;
																												while true do
																													if (v373 == (1 + 0)) then
																														v376 = nil;
																														while true do
																															if (v374 == (0 - 0)) then
																																v375 = 0 - 0;
																																v376 = nil;
																																v374 = 1;
																															end
																															if (v374 == 1) then
																																while true do
																																	if (v375 == (0 - 0)) then
																																		v376 = 0;
																																		while true do
																																			if (v376 == (0 + 0)) then
																																				v131[3] = v23() - (2 ^ (77 - 61));
																																				v131[4] = v22();
																																				break;
																																			end
																																		end
																																		break;
																																	end
																																end
																																break;
																															end
																														end
																														break;
																													end
																													if (v373 ~= (753 - (239 + 514))) then
																													else
																														v374 = 0 + 0;
																														v375 = nil;
																														v373 = 1330 - (797 + 532);
																													end
																												end
																											end
																											v332 = 1;
																										end
																									end
																								end
																								if (v261 == 1) then
																									v128 = 2 + 0;
																									break;
																								end
																							end
																							break;
																						end
																					end
																				end
																				if (v128 ~= 0) then
																				else
																					local v262 = 0;
																					local v263;
																					while true do
																						if ((0 + 0) == v262) then
																							v263 = 0 - 0;
																							while true do
																								if (v263 ~= (1202 - (373 + 829))) then
																								else
																									local v333 = 731 - (476 + 255);
																									while true do
																										if (v333 ~= (1130 - (369 + 761))) then
																										else
																											v129 = v20(v110, 2, 2 + 1);
																											v130 = v20(v110, 4, 10 - 4);
																											v333 = 1;
																										end
																										if (v333 == 1) then
																											v263 = 1 - 0;
																											break;
																										end
																									end
																								end
																								if (v263 == 1) then
																									v128 = 239 - (64 + 174);
																									break;
																								end
																							end
																							break;
																						end
																					end
																				end
																			end
																			break;
																		end
																	end
																	break;
																end
															end
														end
														break;
													end
												end
												break;
											end
											if ((0 + 0) == v108) then
												local v123 = 0 - 0;
												local v124;
												while true do
													if (v123 ~= 0) then
													else
														v124 = 336 - (144 + 192);
														while true do
															if (v124 == 0) then
																local v135 = 216 - (42 + 174);
																while true do
																	if (v135 == 0) then
																		v109 = 0 + 0;
																		v110 = nil;
																		v135 = 1;
																	end
																	if (v135 ~= (1 + 0)) then
																	else
																		v124 = 1 + 0;
																		break;
																	end
																end
															end
															if (v124 == (1505 - (363 + 1141))) then
																v108 = 1581 - (1183 + 397);
																break;
															end
														end
														break;
													end
												end
											end
										end
										break;
									end
									if (0 == v107) then
										v108 = 0;
										v109 = nil;
										v107 = 2 - 1;
									end
								end
							end
							for v111 = 1, v23() do
								v55[v111 - 1] = v28();
							end
							v90 = 1;
						end
					end
				end
			end
		end
		local function v29(v60, v61, v62)
			local v63 = v60[1];
			local v64 = v60[2];
			local v65 = v60[3];
			return function(...)
				local v66 = 1;
				local v67 = -1;
				local v68 = {...};
				local v69 = v12("#", ...) - 1;
				local function v70()
					local v77 = v63;
					local v78 = v64;
					local v79 = v65;
					local v80 = v27;
					local v81 = {};
					local v82 = {};
					local v83 = {};
					for v91 = 0, v69 do
						if (((817 + 3645) >= (3262 + 1187)) and (v91 >= v79)) then
							v81[v91 - v79] = v68[v91 + 1 + 0];
						else
							v83[v91] = v68[v91 + (170 - (28 + 141))];
						end
					end
					local v84 = (v69 - v79) + (1976 - (1913 + 62));
					local v85;
					local v86;
					while true do
						local v92 = 0 + 0 + 0;
						local v93;
						local v94;
						while true do
							if ((v92 == (0 - (0 + 0))) or ((3497 - (565 + 1368)) >= (11970 - (33784 - 24997)))) then
								v93 = 1661 - ((4589 - 3112) + 184);
								v94 = nil;
								v92 = 1 - 0;
							end
							if (((3865 + 283) >= (10567 - 7225)) and (v92 == (857 - (564 + 292)))) then
								while true do
									if ((v93 == (0 + 0)) or ((2474 - (2534 - (1307 + 187))) <= (1446 - 966))) then
										v94 = 304 - (244 + 60);
										while true do
											if ((v94 == (1944 - (1129 + (3231 - 2416)))) or ((57 + 17) > (619 - (41 + 435)))) then
												local v116 = 0 - 0;
												while true do
													if (((1019 - (938 + 63)) < (1625 + 487)) and (v116 == ((2634 - 1509) - (936 + 189)))) then
														local v125 = 0 - 0;
														while true do
															if (((362 + (2253 - 1518)) <= (2685 - (1740 - (232 + 451)))) and (v125 == ((1542 + 72) - (1383 + 182 + 48)))) then
																v116 = 1 + 0;
																break;
															end
															if (((5768 - (782 + 356)) == ((5461 - (510 + 54)) - (176 + 91))) and (v125 == (0 - 0))) then
																v85 = v77[v66];
																v86 = v85[1 - 0];
																v125 = 1093 - (975 + 117);
															end
														end
													end
													if (((5415 - (157 + 1718)) > (2178 + 505)) and (v116 == (786 - (222 + 563)))) then
														v94 = (5 - 2) - 2;
														break;
													end
												end
											end
											if ((4794 >= (11196 - 7921)) and (v94 == (1019 - (697 + 321)))) then
												if (((4042 - 2558) == (3143 - 1659)) and (v86 <= (36 - 20))) then
													if (((1182 + 250) < (1384 + 2171)) and (v86 <= (12 - 5))) then
														if ((v86 <= (7 - 4)) or ((4072 - 3007) > (4805 - (322 + 905)))) then
															if ((v86 <= (612 - ((638 - (13 + 23)) + 9))) or ((5984 - (449 + (1442 - 702))) < (1978 - (47 + 524)))) then
																if (((2725 - (826 + 46)) < (3124 + 1689)) and (v86 > (947 - (245 + 702)))) then
																	local v141 = 0;
																	local v142;
																	local v143;
																	while true do
																		if (((3 - 2) == v141) or ((907 + 1914) < (4329 - ((373 - 113) + 1638)))) then
																			while true do
																				if ((v142 == (440 - (382 + 58))) or ((9219 - 6345) < (1813 + 368))) then
																					v143 = v85[6 - 4];
																					v83[v143] = v83[v143](v83[v143 + ((1 - 0) - 0)]);
																					break;
																				end
																			end
																			break;
																		end
																		if ((v141 == (0 - 0)) or ((3894 - (902 + 303)) <= (752 - 409))) then
																			v142 = 0 - 0;
																			v143 = nil;
																			v141 = 1 + 0;
																		end
																	end
																else
																	v66 = v85[9 - 6];
																end
															elseif ((v86 == (1692 - (1121 + 569))) or ((2083 - (22 + 192)) == (2692 - (483 + 200)))) then
																local v145 = 1463 - (1404 + 59);
																local v146;
																local v147;
																while true do
																	if ((v145 == (2 - (1089 - (830 + 258)))) or (3546 < (5515 - (11263 - 8070)))) then
																		while true do
																			if ((v146 == (0 - 0)) or ((2847 - (468 + 297)) == (5335 - (334 + 143 + 85)))) then
																				v147 = v85[2 + 0 + 0];
																				do
																					return v13(v83, v147, v67);
																				end
																				break;
																			end
																		end
																		break;
																	end
																	if (((10941 - 7697) > (2445 - 1390)) and (v145 == (0 - 0))) then
																		v146 = (1441 - (860 + 581)) + 0;
																		v147 = nil;
																		v145 = 237 - (141 + 95);
																	end
																end
															else
																v83[v85[2 + 0]] = {};
															end
														elseif ((v86 <= (12 - 7)) or ((6785 - 3472) <= (4273 - 2495))) then
															if ((v86 > (1 + 3)) or ((1490 - (10 + 59)) >= (5764 - 3660))) then
																do
																	return;
																end
															else
																local v149 = 0 - 0;
																local v150;
																while true do
																	if (((1274 + 538) <= (1692 + 1557)) and (v149 == (1215 - (369 + 846)))) then
																		v150 = v85[1 + 1];
																		v83[v150] = v83[v150](v13(v83, v150 + ((3 - 2) - 0), v85[2 + 1 + 0]));
																		break;
																	end
																end
															end
														elseif (((1786 - (92 + (312 - (237 + 4)))) <= (967 + 990)) and (v86 > (9 - (6 - 3)))) then
															v83[v85[767 - (574 + 191)]] = v83[v85[(6 - 3) + 0]][v85[9 - 5]];
														else
															v83[v85[2 + 0]] = v29(v78[v85[178 - (135 + 40)]], nil, v62);
														end
													elseif (((5261 - (254 + 595)) == (4538 - ((104 - 49) + 71))) and (v86 <= (14 - 3))) then
														if ((1750 >= (2632 - (573 + 1217))) and (v86 <= (21 - 12))) then
															if (((12107 - 7735) > (141 + 1709)) and (v86 > (12 - 4))) then
																local v154 = (769 + 170) - (714 + 225);
																local v155;
																local v156;
																local v157;
																while true do
																	if (((677 - 445) < 821) and (v154 == (1 - 0))) then
																		local v236 = 0 + 0;
																		while true do
																			if (((749 - (133 + 98)) < (2323 - (107 + 1314))) and ((807 - (118 + (2597 - 1909))) == v236)) then
																				v154 = 50 - (25 + 23);
																				break;
																			end
																			if (((580 + 1036 + 1378) > (2744 - (927 + 959))) and (v236 == (0 - 0))) then
																				v157 = {};
																				v156 = v10({}, {__index=function(v281, v282)
																					local v283 = 0 - 0;
																					local v284;
																					while true do
																						if ((((0 + 0) - 0) == v283) or ((4487 - (16 + 716)) <= (1766 - 851))) then
																							local v323 = 0 + 0;
																							while true do
																								if ((((5469 - (85 + 1341)) - (11 + 86)) > (9129 - 5386)) and (v323 == (0 + 0))) then
																									v284 = v157[v282];
																									return v284[286 - (175 + 110)][v284[4 - 2]];
																								end
																							end
																						end
																					end
																				end,__newindex=function(v285, v286, v287)
																					local v288 = 0 - 0;
																					local v289;
																					local v290;
																					while true do
																						if (((1796 - (503 + 1293)) == v288) or (((6360 - 2632) - 2393) >= (3739 - (279 + (434 - 280))))) then
																							local v324 = 0 + (372 - (45 + 327));
																							while true do
																								if (((5905 - (810 + 251)) > (1564 + 689)) and (v324 == (1 + 0))) then
																									v288 = 1 + 0;
																									break;
																								end
																								if ((((1858 - 873) - (43 + 490)) == (1185 - (711 + 22))) and (v324 == (0 - 0))) then
																									v289 = 859 - (240 + 619);
																									v290 = nil;
																									v324 = 1 + 0;
																								end
																							end
																						end
																						if ((v288 == (1094 - (277 + 816))) or ((7248 - 2691) < (139 + 1948))) then
																							while true do
																								if (((5618 - (1344 + 400)) == (4849 - (815 + 160))) and (v289 == (405 - (255 + 150)))) then
																									v290 = v157[v286];
																									v290[(503 - (444 + 58)) + 0][v290[2 + 0 + 0]] = v287;
																									break;
																								end
																							end
																							break;
																						end
																					end
																				end});
																				v236 = 4 - (1 + 2);
																			end
																		end
																	end
																	if ((v154 == 0) or ((6259 - 4321) > (6674 - (404 + 1335)))) then
																		v155 = v78[v85[409 - (183 + 223)]];
																		v156 = nil;
																		v154 = 2 - 1;
																	end
																	if ((v154 == (2 - 0)) or ((6115 - 1860) < (4605 - (229 + 466 + 487)))) then
																		for v249 = 1 + 0, v85[2 + (5 - 3)] do
																			local v250 = (2069 - (64 + 1668)) - ((1983 - (1227 + 746)) + 327);
																			local v251;
																			local v252;
																			local v253;
																			while true do
																				if (((1013 + 441) <= (1700 + 791)) and ((338 - (118 + 220)) == v250)) then
																					v251 = 0 + 0;
																					v252 = nil;
																					v250 = 450 - (108 + 341);
																				end
																				if ((v250 == (1 + 0)) or ((948 + 3209) <= (11850 - (27807 - 18760)))) then
																					v253 = nil;
																					while true do
																						if (((12184 - 7331) >= ((6376 - 2940) - (233 + 221))) and (v251 == (2 - 1))) then
																							while true do
																								if ((((6121 - (415 + 79)) - (711 + 782)) > (6434 - 3077)) and (v252 == ((13 + 457) - (270 + 199)))) then
																									if ((v253[1 + (491 - (142 + 349))] == 17) or ((5236 - (580 + 1239)) < ((3227 + 4305) - 4998))) then
																										v157[v249 - (1 + 0)] = {v83,v253[3 + (0 - 0)]};
																									else
																										v157[v249 - (2 - 1)] = {v61,v253[2 + 1]};
																									end
																									v82[#v82 + ((1 + 1) - 1)] = v157;
																									break;
																								end
																								if ((v252 == (0 - 0)) or ((3909 - (1151 + 36)) <= (1331 - (645 + 522)))) then
																									local v345 = 0 + 0;
																									while true do
																										if ((v345 == (1790 - (1010 + 780))) or ((2407 + 1 + 0) < (10047 - 7938))) then
																											local v358 = 0 - 0;
																											while true do
																												if ((v358 == (2 - (2 - 1))) or ((1869 - (1045 + (2655 - (1710 + 154)))) == (3683 - 2228))) then
																													v345 = 1 - 0;
																													break;
																												end
																												if (((505 - ((669 - (200 + 118)) + 62 + 92)) == v358) or ((2017 - (1281 + 293)) >= (4281 - (28 + 238)))) then
																													v66 = v66 + (2 - 1);
																													v253 = v77[v66];
																													v358 = 1560 - ((2414 - 1033) + 178);
																												end
																											end
																										end
																										if ((((4706 - 1533) + 209) > (134 + 32)) and (v345 == (1 + 0))) then
																											v252 = 3 - (2 + 0);
																											break;
																										end
																									end
																								end
																							end
																							break;
																						end
																						if ((v251 == (0 + 0)) or ((1497 - (841 + 372 + 4)) == (3529 - (381 + 89)))) then
																							v252 = (0 + 0) - 0;
																							v253 = nil;
																							v251 = 1 + 0;
																						end
																					end
																					break;
																				end
																			end
																		end
																		v83[v85[5 - 3]] = v29(v155, v156, v62);
																		break;
																	end
																end
															else
																local v158 = 0 + 0;
																local v159;
																local v160;
																local v161;
																local v162;
																local v163;
																local v164;
																while true do
																	if (((1273 + 608) > (2214 - 921)) and (v158 == (1157 - (1074 + 82)))) then
																		v161 = nil;
																		v162 = nil;
																		v158 = 3 - 1;
																	end
																	if (((4141 - (214 + 1570)) == (3812 - (990 + 465))) and ((2 + 1) == v158)) then
																		while true do
																			if (((285 - 162) == (54 + 69)) and (v159 == (2 + 0))) then
																				v164 = nil;
																				while true do
																					if ((v160 == (3 - 2)) or (((415 + 2182) - 1541) >= (5118 - (1668 + 58)))) then
																						local v309 = 626 - (512 + 114);
																						local v310;
																						while true do
																							if (((390 - (14 + 376)) == v309) or ((2818 - 1737) < (2222 - 1147))) then
																								v310 = 0 - 0;
																								while true do
																									if ((v310 == 1) or ((489 + 560) >= (3894 + 538))) then
																										v160 = 1 + 1;
																										break;
																									end
																									if ((v310 == (0 - 0)) or ((6018 - (363 + 887)) <= (736 + 110))) then
																										v67 = (v163 + v161) - (2 - 1);
																										v164 = 0 - 0;
																										v310 = 1995 - (109 + 1885);
																									end
																								end
																								break;
																							end
																						end
																					end
																					if ((v160 == (78 - (23 + 55))) or ((4827 - (1269 + 200)) <= (948 + 472))) then
																						local v311 = 0 - 0;
																						while true do
																							if ((v311 == 1) or ((4554 - (98 + 717)) <= (3831 - (802 + 24)))) then
																								v160 = 1;
																								break;
																							end
																							if ((v311 == ((0 - 0) - 0)) or (1659 >= (3679 - 1545))) then
																								v161 = v85[2 - 0];
																								v162, v163 = v80(v83[v161]());
																								v311 = 1 + 0;
																							end
																						end
																					end
																					if ((v160 == (2 + 0)) or ((536 + (12965 - 10241)) < 2355)) then
																						for v325 = v161, v67 do
																							local v326 = 0 + 0;
																							local v327;
																							while true do
																								if ((v326 == (0 - 0)) or ((2230 - 1561) == (1511 + 2712))) then
																									v327 = 0 + 0;
																									while true do
																										if ((v327 == (0 + 0)) or ((1231 + 461) < (43 + 232 + 313))) then
																											v164 = v164 + (1434 - (797 + 636));
																											v83[v325] = v162[v164];
																											break;
																										end
																									end
																									break;
																								end
																							end
																						end
																						break;
																					end
																				end
																				break;
																			end
																			if ((v159 == (1909 - (242 + 1666))) or ((23291 - 18494) < (1339 + 2312))) then
																				local v268 = 1619 - (1427 + 192);
																				while true do
																					if ((v268 == ((2 - 1) + 0)) or ((9697 - 5520) > (4360 + 490))) then
																						v159 = (952 + 440) - (360 + 1030);
																						break;
																					end
																					if ((v268 == (0 + 0)) or ((726 - (192 + (1798 - (674 + 990)))) > (2387 - (316 + 960)))) then
																						v162 = nil;
																						v163 = nil;
																						v268 = 1 + 0;
																					end
																				end
																			end
																			if (((2355 + 696) > (267 + 662 + 76)) and (v159 == (0 - 0))) then
																				local v269 = 0 + 0;
																				while true do
																					if ((((1611 + 2324) - ((8 - 2) + 236)) <= (16752 - 12370)) and (v269 == ((1055 - (507 + 548)) + (837 - (289 + 548))))) then
																						v160 = 551 - (83 + 468);
																						v161 = nil;
																						v269 = 1807 - (1202 + 604);
																					end
																					if ((v269 == (1134 - (1076 + (1875 - (821 + 997))))) or (((15575 - (195 + 60)) - 12038) > (6823 - 2723))) then
																						v159 = 2 - 1;
																						break;
																					end
																				end
																			end
																		end
																		break;
																	end
																	if (((327 - (45 + 280)) == v158) or ((3456 + 124) < (2485 + 359))) then
																		v163 = nil;
																		v164 = nil;
																		v158 = 410 - (174 + 233);
																	end
																	if (((33 + 16 + 40) < (7880 - 3390)) and (v158 == 0)) then
																		v159 = 0 + 0;
																		v160 = nil;
																		v158 = 1 + 0;
																	end
																end
															end
														elseif ((v86 == (18 - 8)) or ((6894 - (340 + 1571)) < (714 + (2595 - (251 + 1250))))) then
															v83[v85[(5 - 3) + 0]][v85[(1220 + 555) - (1733 + 39)]] = v83[v85[10 - 6]];
														else
															local v167 = 1034 - (125 + 909);
															local v168;
															local v169;
															while true do
																if (((5777 - (1096 + 852)) > (1691 + 2078)) and (v167 == ((1032 - (809 + 223)) + (0 - 0)))) then
																	v168 = 0 - 0;
																	v169 = nil;
																	v167 = 1 + (0 - 0);
																end
																if (((1997 - (409 + 103)) <= ((10382 - 7242) - (46 + 190))) and (v167 == (96 - (51 + 44)))) then
																	while true do
																		if (((1205 + 3064) == (5586 - (1114 + 203))) and (v168 == (727 - (228 + 498)))) then
																			for v291 = v169, v67 do
																				local v292 = 0 + 0;
																				local v293;
																				local v294;
																				while true do
																					if (((84 + 303) <= (1537 + 1245)) and ((664 - (174 + 489)) == v292)) then
																						while true do
																							if ((v293 == ((0 + 0) - 0)) or ((3804 - (830 + 1075)) <= (1441 - (303 + 221)))) then
																								v294 = v81[v291 - v169];
																								v83[v291] = v294;
																								break;
																							end
																						end
																						break;
																					end
																					if ((v292 == (1269 - (231 + 1038))) or (4312 <= (1351 - 475))) then
																						v293 = 0 + 0;
																						v294 = nil;
																						v292 = 352 - (285 + 66);
																					end
																				end
																			end
																			break;
																		end
																		if (((3394 - (171 + 991)) <= (10698 - 8102)) and (v168 == (0 - 0))) then
																			local v270 = 0 - 0;
																			while true do
																				if (((1677 + 418) < (12920 - 9234)) and ((2 - (1 + 0)) == v270)) then
																					v168 = 1 - 0;
																					break;
																				end
																				if (((0 - 0) == v270) or ((2843 - (111 + 1137)) >= ((5249 - (14 + 603)) - (91 + 67)))) then
																					v169 = v85[5 - 3];
																					v67 = (v169 + v84) - (1 + 0);
																					v270 = 1;
																				end
																			end
																		end
																	end
																	break;
																end
															end
														end
													elseif ((v86 <= (536 - (423 + (229 - (118 + 11))))) or ((33 + 4586) < (7979 - 5097))) then
														if ((v86 == (7 + 5)) or (((173 + 892) - (326 + 445)) >= (21082 - 16251))) then
															if (((4519 - 2490) <= (7198 - (3427 + 687))) and (v83[v85[713 - (530 + 181)]] == v85[885 - (614 + 267)])) then
																v66 = v66 + (33 - ((55 - 36) + 13));
															else
																v66 = v85[3];
															end
														else
															local v170 = 1375 - ((2089 - (551 + 398)) + 149 + 86);
															local v171;
															local v172;
															while true do
																if ((v170 == ((1 + 0) - 0)) or ((4746 - 2709) == (2220 + 200))) then
																	for v254 = v171 + 1 + 0, v67 do
																		v7(v172, v83[v254]);
																	end
																	break;
																end
																if ((4458 > (11152 - 7248)) and (v170 == (0 + 0))) then
																	local v239 = 0 - 0;
																	while true do
																		if ((((734 + 169) - 467) >= (1935 - (1293 + 519))) and ((0 + 0) == v239)) then
																			v171 = v85[3 - 1];
																			v172 = v83[v171];
																			v239 = 2 - 1;
																		end
																		if (((469 + 31) < (3472 - 1656)) and (v239 == (4 - 3))) then
																			v170 = 2 - 1;
																			break;
																		end
																	end
																end
															end
														end
													elseif (((1893 + 1681) == 3574) and (v86 <= (3 + 11))) then
														local v173 = (5533 - 4045) - (1309 + 179);
														local v174;
														while true do
															if (((513 - 292) < (91 + 299)) and (v173 == (0 + 0))) then
																v174 = v85[2];
																do
																	return v83[v174](v13(v83, v174 + 1, v67));
																end
																break;
															end
														end
													elseif ((v86 > ((23 - 13) + 5)) or (2213 <= (3816 - 2395))) then
														local v214 = v85[1098 - (709 + 387)];
														local v215 = v85[1862 - (673 + 1185)];
														local v216 = v214 + (3 - 1);
														local v217 = {v83[v214](v83[v214 + (3 - 2)], v83[v216])};
														for v241 = 1 - 0, v215 do
															v83[v216 + v241] = v217[v241];
														end
														local v218 = v217[1 + 0 + 0];
														if (((2285 + 773) < (6561 - 1701)) and v218) then
															local v255 = 1962 - (1300 + 662);
															local v256;
															while true do
																if ((v255 == (0 + 0)) or ((3051 - (1178 + 577)) >= (8864 - 4418))) then
																	v256 = 0 - 0;
																	while true do
																		if ((v256 == (1880 - (446 + 1434))) or ((2798 - (851 + 554)) > (5772 - (1040 + 243)))) then
																			v83[v216] = v218;
																			v66 = v85[8 - 5];
																			break;
																		end
																	end
																	break;
																end
															end
														else
															v66 = v66 + (1 - 0);
														end
													else
														local v219 = 0;
														local v220;
														local v221;
														local v222;
														local v223;
														local v224;
														while true do
															if ((v219 == (304 - (115 + 187))) or ((6271 - (559 + (5113 - 3825))) < (26 + 1))) then
																v224 = nil;
																while true do
																	if (((1932 - (609 + 1322)) == v220) or ((2451 - (13 + 441)) > 3815)) then
																		v67 = (v223 + v221) - (1162 - (160 + 1001));
																		v224 = 0 - 0;
																		v220 = 2 + 0;
																	end
																	if (((9076 - 5611) > (9527 - 7614)) and (v220 == (360 - (237 + 121)))) then
																		for v313 = v221, v67 do
																			local v314 = 0 + 0 + 0;
																			local v315;
																			while true do
																				if (((1388 - 655) < (6606 - (4876 - (40 + 49)))) and (v314 == ((0 - 0) + 0))) then
																					v315 = 142 - (96 + 46);
																					while true do
																						if ((v315 == (0 + 0)) or (4395 == ((14600 - (99 + 391)) - 9355))) then
																							v224 = v224 + (2 - 1);
																							v83[v313] = v222[v224];
																							break;
																						end
																					end
																					break;
																				end
																			end
																		end
																		break;
																	end
																	if ((v220 == (0 + 0)) or ((6975 - (2632 + 550)) < ((20432 - 15784) - 2279))) then
																		local v303 = 0 + 0;
																		while true do
																			if (((1 + 0) == v303) or (4084 == (191 + 74))) then
																				v220 = 1 + 0;
																				break;
																			end
																			if (((11981 - 7623) == (4264 + 94)) and (v303 == (433 - (153 + 280)))) then
																				v221 = v85[2];
																				v222, v223 = v80(v83[v221](v83[v221 + (2 - 1)]));
																				v303 = 1 + 0;
																			end
																		end
																	end
																end
																break;
															end
															if ((v219 == (1 + 0)) or ((2224 + 914) < ((1287 - 767) + 473))) then
																v222 = nil;
																v223 = nil;
																v219 = 2 + 0;
															end
															if (((11538 - 8208) > (1684 + 639)) and (v219 == (0 - 0))) then
																v220 = 0 + 0;
																v221 = nil;
																v219 = 1 + 0;
															end
														end
													end
												elseif ((v86 <= (691 - (87 + 2 + 578))) or ((2591 + 1035) == ((21818 - 13526) - 4303))) then
													if ((v86 <= (77 - 57)) or ((1965 - (572 + 477)) == (361 + (3914 - (1032 + 572))))) then
														if (((164 + 108) == (33 + (656 - (203 + 214)))) and (v86 <= (104 - (84 + 2)))) then
															if (((7002 - 2753) <= (3487 + 1352)) and (v86 == ((2676 - (568 + 1249)) - (497 + 345)))) then
																v83[v85[1 + 1]] = v83[v85[1 + 2]];
															else
																local v177 = 0;
																local v178;
																local v179;
																local v180;
																local v181;
																while true do
																	if (((4110 - (605 + 728)) < (2284 + 717 + 199)) and ((4 - 3) == v177)) then
																		local v244 = 0;
																		while true do
																			if (((211 - (278 - 162)) < (1290 + 667)) and (v244 == (0 + 0))) then
																				v180 = nil;
																				v181 = nil;
																				v244 = 3 - 2;
																			end
																			if (((745 + 81) < (4757 - 3040)) and ((1 - 0) == v244)) then
																				v177 = 6 - 4;
																				break;
																			end
																		end
																	end
																	if (((1077 + 349) >= (1594 - (457 + (123 - 91)))) and (v177 == (1 + 1))) then
																		while true do
																			if (((4156 - (832 + 570)) <= (3184 + 195)) and (v178 == (1 + 0))) then
																				v181 = 0 - 0;
																				for v295 = v179, v85[2 + 2] do
																					local v296 = 796 - (588 + 208);
																					while true do
																						if ((v296 == (0 - 0)) or (3927 == (3213 - ((2190 - (913 + 393)) + 916)))) then
																							v181 = v181 + (1 - 0);
																							v83[v295] = v180[v181];
																							break;
																						end
																					end
																				end
																				break;
																			end
																			if ((v178 == (0 + 0)) or ((1807 - (232 + (1188 - 767))) <= (2677 - (1569 + 320)))) then
																				local v273 = 0 - 0;
																				while true do
																					if (((1 + 0) == v273) or ((313 + 1330) > (11386 - 8007))) then
																						v178 = (2 - 0) - 1;
																						break;
																					end
																					if ((v273 == (605 - (316 + 289))) or (2803 > (11907 - 7358))) then
																						local v316 = 0 + 0;
																						while true do
																							if ((v316 == (1453 - (666 + 787))) or ((65 + 155) >= (3447 - (360 + 65)))) then
																								v179 = v85[2 + 0];
																								v180 = {v83[v179](v13(v83, v179 + (255 - (79 + 175)), v67))};
																								v316 = 896 - (557 + 338);
																							end
																							if (((4449 - 1627) == (2203 + 619)) and (v316 == (2 - 1))) then
																								v273 = (2 - 1) - 0;
																								break;
																							end
																						end
																					end
																				end
																			end
																		end
																		break;
																	end
																	if ((v177 == ((2880 - (362 + 1619)) - ((2128 - (950 + 675)) + 396))) or ((1242 - (92 + 89)) == (3602 - 1745))) then
																		v178 = 0 + 0;
																		v179 = nil;
																		v177 = 1;
																	end
																end
															end
														elseif (((1634 + 1126) > (5341 - 3977)) and (v86 > (3 + 16))) then
															v83[v85[2]][v85[6 - 3]] = v85[4 + 0];
														else
															local v184 = 0 + 0;
															local v185;
															local v186;
															while true do
																if (((0 - 0) == v184) or ((7525 - 2623) <= (449 + 3146))) then
																	local v245 = 0 - 0;
																	while true do
																		if (((1245 - (485 + 759)) == v245) or ((8912 - 5060) == (1482 - (442 + 747)))) then
																			v184 = 105 - (103 + 1 + 0);
																			break;
																		end
																		if ((v245 == (1135 - (832 + 303))) or ((2505 - ((1267 - (216 + 963)) + 858)) == (1399 + 3189))) then
																			v185 = v85[(1289 - (485 + 802)) + 0];
																			v186 = v83[v85[1 + 2]];
																			v245 = 1 + 0;
																		end
																	end
																end
																if ((v184 == (1504 - (1395 + 108))) or ((5273 - (766 + 23)) == (3890 - 3102))) then
																	v83[v185 + (1 - 0)] = v186;
																	v83[v185] = v186[v85[10 - 6]];
																	break;
																end
															end
														end
													elseif (((15503 - 10935) >= (4226 - (27 + 292))) and (v86 <= (1095 - (1036 + 37)))) then
														if (((884 + (921 - (432 + 127))) < (6757 - 3287)) and (v86 == (17 + 4))) then
															local v187 = 1480 - (641 + 839);
															local v188;
															local v189;
															local v190;
															while true do
																if (((4981 - (910 + (1076 - (1065 + 8)))) >= ((1376 + 1101) - 1505)) and (v187 == (1685 - (1466 + 218)))) then
																	v190 = nil;
																	while true do
																		if (((971 - 478) < (1790 + 2103)) and (v188 == (139 - (43 + 96)))) then
																			v189 = (2749 - (635 + 966)) - (556 + 592);
																			v190 = nil;
																			v188 = 1 + 0 + 0;
																		end
																		if ((v188 == (809 - (329 + (521 - (5 + 37))))) or ((2327 - ((432 - 258) + 680)) >= (11449 - 8117))) then
																			while true do
																				if ((v189 == (0 - (0 + 0))) or ((2893 + 1158) <= (1896 - (396 + 343)))) then
																					v190 = v85[1 + 1];
																					v83[v190](v83[v190 + 1 + 0]);
																					break;
																				end
																			end
																			break;
																		end
																	end
																	break;
																end
																if ((604 < (4358 - (29 + (2291 - 843)))) and (v187 == (1389 - (135 + 1254)))) then
																	v188 = 0 - 0;
																	v189 = nil;
																	v187 = 1;
																end
															end
														else
															v83[v85[1942 - (1642 + 298)]] = v85[13 - 10];
														end
													elseif ((v86 > (59 - 36)) or ((600 + 300) == (10021 - 6644))) then
														v83[v85[1529 - (389 + 1138)]]();
													elseif (((1468 + 1400 + 1591) > (1165 - (102 + 472))) and (v83[v85[2 + 0]] ~= v85[3 + 1])) then
														v66 = v66 + 1 + 0;
													else
														v66 = v85[3 + 0];
													end
												elseif (((4943 - (320 + 1225)) >= 2395) and (v86 <= (49 - 21))) then
													if ((v86 <= (16 + 10)) or ((3647 - (157 + 1307)) >= (1776 + 1048))) then
														if (((3795 - (821 + 1038)) == (4830 - 2894)) and (v86 == ((5 - 2) + 22))) then
															v83[v85[(11 - 8) - 1]] = v85[2 + 1] ~= (1710 - (556 + 1154));
														else
															v83[v85[4 - 2]] = v62[v85[1029 - (834 + 192)]];
														end
													elseif ((v86 > (2 + 25)) or ((1241 + 3591) < (93 + 4220))) then
														v83[v85[(14 - 6) - 6]] = v61[v85[4 - (2 - 1)]];
													elseif (((4392 - (300 + 4)) > (2524 + 1350)) and (v85[1014 - (53 + 959)] == v83[v85[2 + 2]])) then
														v66 = v66 + (2 - 1);
													else
														v66 = v85[365 - (112 + 180 + 70)];
													end
												elseif (((5231 - (813 + 86)) == (1727 + 2605)) and (v86 <= ((604 - (318 + 211)) - 45))) then
													if (((7408 - 3409) >= (3392 - (18 + 474))) and (v86 > (17 + 12))) then
														for v207 = v85[(9 - 7) + 0], v85[3 + 0] do
															v83[v207] = nil;
														end
													else
														local v198 = 0 + (1587 - (963 + 624));
														local v199;
														local v200;
														while true do
															if ((v198 == (0 + 0)) or ((3939 - (1001 + 413)) > (501 + 3563))) then
																v199 = 0 - 0;
																v200 = nil;
																v198 = (378 + 505) - (244 + 638);
															end
															if (((1370 + 3001) == (6341 - (49 + (2767 - (518 + 328))))) and (v198 == (891 - (223 + 667)))) then
																while true do
																	if ((v199 == (693 - (627 + 66))) or ((792 - 526) > (5588 - (512 + 90)))) then
																		v200 = v85[1908 - ((3881 - 2216) + 241)];
																		v83[v200](v13(v83, v200 + (718 - (373 + 344)), v85[2 + 1]));
																		break;
																	end
																end
																break;
															end
														end
													end
												elseif (((527 + 1464) >= (2439 - 1514)) and (v86 <= (52 - 21))) then
													local v201 = 1099 - (35 + 1064);
													local v202;
													local v203;
													local v204;
													local v205;
													local v206;
													while true do
														if (((332 + 123) < (4392 - 2339)) and (v201 == ((0 - 0) + (317 - (301 + 16))))) then
															v202 = 1236 - (298 + 938);
															v203 = nil;
															v201 = 1260 - (233 + 1026);
														end
														if ((((4888 - 3220) - (636 + 1030)) == v201) or ((423 + 403) == (4739 + 112))) then
															v206 = nil;
															while true do
																if (((55 + 128) == ((36 - 23) + 170)) and ((0 + 0) == v202)) then
																	local v277 = (576 - 355) - (55 + 166);
																	while true do
																		if (((225 + 934) <= (180 + 1608)) and (v277 == (0 - 0))) then
																			v203 = v85[184 - (156 + 26)];
																			v204, v205 = v80(v83[v203](v13(v83, v203 + (298 - (36 + 261)), v85[4 - 1])));
																			v277 = (1 + 0) - (0 + 0);
																		end
																		if (((1369 - ((72 - 38) + 803 + 531)) == v277) or (((350 + 3321) - (149 + 15)) > (5278 - (890 + 70)))) then
																			v202 = 1 + 0;
																			break;
																		end
																	end
																end
																if ((v202 == (1 + 0)) or ((6761 - 3686) <= (4248 - ((3290 - 2255) + 248)))) then
																	local v278 = 21 - (7 + 13 + 1);
																	while true do
																		if (((712 + 653) <= (2330 - (134 + 185))) and (v278 == (0 + 0))) then
																			v67 = (v205 + v203) - (1134 - (549 + 584));
																			v206 = 685 - (314 + 371);
																			v278 = 3 - 2;
																		end
																		if ((v278 == (969 - (478 + 490))) or ((1471 + 1305) > (4747 - (786 + 386)))) then
																			v202 = 6 - 4;
																			break;
																		end
																	end
																end
																if ((v202 == (1381 - (1055 + 324))) or ((3894 - (1093 + 247)) == ((5288 - (829 + 190)) + (1908 - 1373)))) then
																	for v297 = v203, v67 do
																		local v298 = 0 + 0;
																		local v299;
																		local v300;
																		while true do
																			if (((6534 - 3957) == (10231 - 7654)) and (v298 == (0 - (0 - 0)))) then
																				v299 = 0 - 0;
																				v300 = nil;
																				v298 = 2 - (1 - 0);
																			end
																			if ((v298 == (1 + 0)) or ((22 - 16) >= (6510 - (11479 - 6858)))) then
																				while true do
																					if (((382 + 124) <= (3330 - (1059 + 379))) and (v299 == (0 - 0))) then
																						v300 = 688 - (364 + 324);
																						while true do
																							if ((v300 == (0 - 0)) or ((4818 - 2810) > (736 + 1482))) then
																								v206 = v206 + (4 - 3);
																								v83[v297] = v204[v206];
																								break;
																							end
																						end
																						break;
																					end
																				end
																				break;
																			end
																		end
																	end
																	break;
																end
															end
															break;
														end
														if (((311 + 68) <= (6640 - 2493)) and (v201 == (2 - 1))) then
															v204 = nil;
															v205 = nil;
															v201 = 1270 - (1249 + 5 + 14);
														end
													end
												elseif ((v86 > 32) or ((4075 + 439) <= (3927 - (954 + 1964)))) then
													local v227 = 1086 - (686 + 400);
													local v228;
													local v229;
													local v230;
													while true do
														if ((v227 == (561 - (544 + 16))) or (((33722 - 22612) - 7614) == (936 + 256))) then
															v230 = nil;
															while true do
																if ((v228 == (230 - (69 + 4 + 156))) or ((1 + 207) == (3770 - (721 + 90)))) then
																	for v319 = (614 - (520 + 93)) + 0, #v82 do
																		local v320 = 0 + 0;
																		local v321;
																		local v322;
																		while true do
																			if (((13886 - 9609) >= ((2059 - (259 + 17)) - (224 + 246))) and (v320 == ((0 + 0) - 0))) then
																				v321 = 0 - 0;
																				v322 = nil;
																				v320 = 1 + 0;
																			end
																			if (((23 + 39 + 2525) < (2332 + 842)) and (v320 == (3 - 2))) then
																				while true do
																					if ((v321 == (794 - (413 + (972 - (396 + 195))))) or ((8191 - (11811 - 7740)) <= ((9075 - (440 + 1321)) - 5116))) then
																						v322 = v82[v319];
																						for v363 = 0, #v322 do
																							local v364 = (2342 - (1059 + 770)) - ((938 - 735) + 310);
																							local v365;
																							local v366;
																							local v367;
																							local v368;
																							while true do
																								if ((v364 == (1994 - (1238 + (1300 - (424 + 121))))) or ((21 + 91 + 1484) == (2392 - (709 + 825)))) then
																									v367 = nil;
																									v368 = nil;
																									v364 = 3 - 1;
																								end
																								if (((4690 - 1470) == (4084 - (196 + 668))) and (v364 == (7 - 5))) then
																									while true do
																										if ((v365 == 0) or ((2903 - 1501) > 3620)) then
																											local v377 = 1347 - (641 + 706);
																											while true do
																												if (((3194 - (47 + 573)) == (3407 - (171 + 662))) and (v377 == (93 - (4 + 89)))) then
																													local v381 = 0 - 0;
																													while true do
																														if (((6301 - 4503) < (398 + 606 + 1753)) and (v381 == (0 - 0))) then
																															v366 = v322[v363];
																															v367 = v366[1 + 0];
																															v381 = 1487 - (35 + 1451);
																														end
																														if ((v381 == (1454 - (28 + 1425))) or ((2370 - (941 + 1052)) > (2497 + 107))) then
																															v377 = 1515 - ((1262 - (249 + 191)) + 692);
																															break;
																														end
																													end
																												end
																												if (((810 - 242) < (430 + 481)) and (v377 == (298 - ((196 - 151) + 252)))) then
																													v365 = 1 + 0 + 0;
																													break;
																												end
																											end
																										end
																										if (((1131 + 2154) < (10289 - 6061)) and (v365 == (1818 - (772 + 1045)))) then
																											v368 = v366[435 - (114 + 319)];
																											if (((5621 - 1705) > (4263 - 935)) and (v367 == v83) and (v368 >= v229)) then
																												local v379 = 0 + 0;
																												local v380;
																												while true do
																													if (((4344 - (1524 + 320)) < (5719 - 1880)) and (v379 == ((0 - 0) - 0))) then
																														v380 = 1963 - (556 + 1407);
																														while true do
																															if (((1609 - ((494 - (183 + 244)) + 1035)) == (1713 - (37 + 704 + 465))) and ((465 - (170 + 295)) == v380)) then
																																v230[v368] = v367[v368];
																																v366[(731 - (434 + 296)) + 0] = v230;
																																break;
																															end
																														end
																														break;
																													end
																												end
																											end
																											break;
																										end
																									end
																									break;
																								end
																								if (((222 + 18) <= 3165) and (v364 == (1604 - (240 + 1364)))) then
																									local v371 = 0;
																									while true do
																										if (((767 + 67) >= (1981 - 1176)) and (v371 == (3 - (5 - 3)))) then
																											v364 = 1 + (512 - (169 + 343));
																											break;
																										end
																										if ((v371 == (0 + 0)) or ((2159 + 1653) < (3546 - (957 + 273)))) then
																											v365 = 0 + 0;
																											v366 = nil;
																											v371 = 1 + 0;
																										end
																									end
																								end
																							end
																						end
																						break;
																					end
																				end
																				break;
																			end
																		end
																	end
																	break;
																end
																if ((v228 == (0 + 0)) or ((10105 - 7453) <= (4039 - 2506))) then
																	local v304 = (0 + 0) - 0;
																	local v305;
																	while true do
																		if (((0 - 0) == v304) or ((9725 - (10780 - 4653)) < (3240 - ((1141 - 752) + 1140 + 251)))) then
																			v305 = (0 - 0) + 0;
																			while true do
																				if ((v305 == (1 + 0)) or ((9370 - 5254) < (2859 - (728 + 939)))) then
																					v228 = 3 - 2;
																					break;
																				end
																				if ((v305 == (951 - (783 + 168))) or ((11333 - (9079 - (651 + 472))) <= (672 + 217 + 14))) then
																					v229 = v85[313 - (309 + 2)];
																					v230 = {};
																					v305 = 1 + 0;
																				end
																			end
																			break;
																		end
																	end
																end
															end
															break;
														end
														if ((3976 >= ((582 + 765) - 908)) and (v227 == ((1478 - 266) - (1090 + 122)))) then
															local v264 = 0 + 0;
															while true do
																if (((12600 - 8848) == (2568 + 1184)) and ((1118 - (628 + 490)) == v264)) then
																	v228 = (483 - (397 + 86)) - 0;
																	v229 = nil;
																	v264 = 1 + 0;
																end
																if ((4046 > ((7548 - (423 + 453)) - 3977)) and (v264 == (4 - 3))) then
																	v227 = 775 - (431 + 343);
																	break;
																end
															end
														end
													end
												else
													local v231 = 0 + 0;
													local v232;
													local v233;
													while true do
														if ((v231 == (0 - 0)) or ((10154 - 6609) == (406 + 284 + 2507))) then
															v232 = 0 - 0;
															v233 = nil;
															v231 = 1;
														end
														if (((10440 - (1061 + 6985)) > 373) and (v231 == (592 - (562 + 29)))) then
															while true do
																if (((12020 - 7865) <= (5651 - (327 + 47 + 1045))) and (v232 == (0 + 0))) then
																	v233 = v85[1 + 1];
																	v83[v233] = v83[v233](v13(v83, v233 + (1696 - (556 + 1139)), v67));
																	break;
																end
															end
															break;
														end
													end
												end
												v66 = v66 + (16 - (6 + 9));
												break;
											end
										end
										break;
									end
								end
								break;
							end
						end
					end
				end
				A, B = v27(v11(v70));
				if not A[1] then
					local v95 = 0;
					local v96;
					while true do
						if (v95 == 0) then
							v96 = v60[4][v66] or "?";
							error("Script error at [" .. v96 .. "]:" .. A[2]);
							break;
						end
					end
				else
					return v13(A, 2, B);
				end
			end;
		end
		return v29(v28(), {}, v17)(...);
	end
	vv9(), ...);
end
